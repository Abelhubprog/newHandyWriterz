{
  "version": 3,
  "sources": ["../bundle-xLLS1Y/checked-fetch.js", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/constants.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/url.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/dist/url.mjs", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/retry.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/dist/retry.mjs", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/isomorphicAtob.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/isomorphicBtoa.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/keys.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/dist/keys.mjs", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/utils/runtimeEnvironment.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/deprecated.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/dist/deprecated.mjs", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/error.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/dist/error.mjs", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/util/shared.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/errors.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/dist/isomorphicAtob.mjs", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/runtime.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/util/rfc4648.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/jwt/algorithms.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/jwt/assertions.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/jwt/cryptoKeys.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/jwt/verifyJwt.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/dist/chunk-RPS7XK5K.mjs", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/buildAccountsBaseUrl.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/authorization.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/dist/authorization.mjs", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/jwtPayloadParser.ts", "../../../node_modules/.pnpm/cookie@1.0.2/node_modules/cookie/src/index.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/compiled/path-to-regexp/index.js", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/pathToRegexp.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/dist/pathToRegexp.mjs", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/dist/authorization-errors.mjs", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/constants.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/createRedirect.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/util/mergePreDefinedOptions.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/util/optionsAssertions.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/tokens/authenticateContext.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/tokens/tokenTypes.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/tokens/authObjects.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/util/path.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/AbstractApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/ActorTokenApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/AccountlessApplicationsAPI.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/AllowlistIdentifierApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/APIKeysApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/BetaFeaturesApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/BlocklistIdentifierApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/ClientApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/DomainApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/EmailAddressApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/IdPOAuthAccessTokenApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/InstanceApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/InvitationApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/MachineApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/M2MTokenApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/JwksApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/JwtTemplatesApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/OrganizationApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/OAuthApplicationsApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/PhoneNumberApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/ProxyCheckApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/RedirectUrlApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/SamlConnectionApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/SessionApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/SignInTokenApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/SignUpApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/TestingTokenApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/UserApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/WaitlistEntryApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/WebhookApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/endpoints/BillingApi.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/request.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/node_modules/.pnpm/map-obj@5.0.2/node_modules/map-obj/index.js", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/node_modules/.pnpm/change-case@5.4.4/node_modules/change-case/src/index.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/node_modules/.pnpm/snakecase-keys@9.0.2/node_modules/snakecase-keys/index.js", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/AccountlessApplication.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/ActorToken.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/AllowlistIdentifier.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/APIKey.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/BlocklistIdentifier.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/Session.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/Client.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/CnameTarget.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/Cookies.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/DeletedObject.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/Domain.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/Email.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/IdentificationLink.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/Verification.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/EmailAddress.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/ExternalAccount.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/IdPOAuthAccessToken.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/Instance.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/InstanceRestrictions.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/InstanceSettings.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/Invitation.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/JSON.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/Machine.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/MachineScope.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/MachineSecretKey.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/M2MToken.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/JwtTemplate.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/OauthAccessToken.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/OAuthApplication.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/Organization.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/OrganizationInvitation.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/OrganizationMembership.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/OrganizationSettings.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/PhoneNumber.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/ProxyCheck.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/RedirectUrl.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/SamlConnection.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/SamlAccount.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/SignInTokens.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/SignUpAttempt.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/SMSMessage.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/Token.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/Web3Wallet.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/User.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/WaitlistEntry.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/Feature.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/CommercePlan.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/CommerceSubscriptionItem.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/CommerceSubscription.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/resources/Deserializer.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/api/factory.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/tokens/machine.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/tokens/authStatus.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/tokens/clerkRequest.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/tokens/clerkUrl.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/tokens/cookie.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/tokens/keys.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/tokens/verify.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/tokens/handshake.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/tokens/organizationMatcher.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/tokens/request.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/tokens/factory.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/util/decorateObjectWithResources.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/internal.ts", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/jwt/legacyReturn.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/underscore.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/telemetry/throttler.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/telemetry/collector.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/telemetry/events/component-mounted.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/telemetry/events/method-called.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/telemetry/events/framework-metadata.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/src/telemetry/events/theme-usage.ts", "../../../node_modules/.pnpm/@clerk+shared@3.25.0_react-_c48584ae75d20ea6b40f1fe2aab7fa94/node_modules/@clerk/shared/dist/telemetry.mjs", "../../../node_modules/.pnpm/@clerk+backend@2.14.0_react_d388cbca555f825c2646675e8bf60369/node_modules/@clerk/backend/src/index.ts", "../../../functions/api/auth.ts", "../../../functions/api/database.ts", "../../../functions/api/r2.ts", "../../../functions/api/submissions.ts", "../../../functions/api/test.ts", "../../../functions/api/upload.ts", "functionsRoutes-0.006413031454188811.mjs", "../bundle-xLLS1Y/middleware-loader.entry.ts", "../bundle-xLLS1Y/middleware-insertion-facade.js", "../../../node_modules/.pnpm/wrangler@4.36.0_@cloudflare_d4bacab0623f00310a98325b6a6e981f/node_modules/wrangler/templates/pages-template-worker.ts", "../../../node_modules/.pnpm/path-to-regexp@6.3.0/node_modules/path-to-regexp/src/index.ts", "../../../node_modules/.pnpm/wrangler@4.36.0_@cloudflare_d4bacab0623f00310a98325b6a6e981f/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/.pnpm/wrangler@4.36.0_@cloudflare_d4bacab0623f00310a98325b6a6e981f/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/.pnpm/wrangler@4.36.0_@cloudflare_d4bacab0623f00310a98325b6a6e981f/node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "D:\\HandyWriterz\\.wrangler\\tmp\\pages-CWjmo2\\functionsWorker-0.00432784623102056.mjs",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "export const LEGACY_DEV_INSTANCE_SUFFIXES = ['.lcl.dev', '.lclstage.dev', '.lclclerk.com'];\nexport const CURRENT_DEV_INSTANCE_SUFFIXES = ['.accounts.dev', '.accountsstage.dev', '.accounts.lclclerk.com'];\nexport const DEV_OR_STAGING_SUFFIXES = [\n  '.lcl.dev',\n  '.stg.dev',\n  '.lclstage.dev',\n  '.stgstage.dev',\n  '.dev.lclclerk.com',\n  '.stg.lclclerk.com',\n  '.accounts.lclclerk.com',\n  'accountsstage.dev',\n  'accounts.dev',\n];\nexport const LOCAL_ENV_SUFFIXES = ['.lcl.dev', 'lclstage.dev', '.lclclerk.com', '.accounts.lclclerk.com'];\nexport const STAGING_ENV_SUFFIXES = ['.accountsstage.dev'];\nexport const LOCAL_API_URL = 'https://api.lclclerk.com';\nexport const STAGING_API_URL = 'https://api.clerkstage.dev';\nexport const PROD_API_URL = 'https://api.clerk.com';\n\n/**\n * Returns the URL for a static image\n * using the new img.clerk.com service\n */\nexport function iconImageUrl(id: string, format: 'svg' | 'jpeg' = 'svg'): string {\n  return `https://img.clerk.com/static/${id}.${format}`;\n}\n", "import { CURRENT_DEV_INSTANCE_SUFFIXES, LEGACY_DEV_INSTANCE_SUFFIXES } from './constants';\nimport { isStaging } from './utils/instance';\n\nexport function parseSearchParams(queryString = ''): URLSearchParams {\n  if (queryString.startsWith('?')) {\n    queryString = queryString.slice(1);\n  }\n  return new URLSearchParams(queryString);\n}\n\nexport function stripScheme(url = ''): string {\n  return (url || '').replace(/^.+:\\/\\//, '');\n}\n\nexport function addClerkPrefix(str: string | undefined) {\n  if (!str) {\n    return '';\n  }\n  let regex;\n  if (str.match(/^(clerk\\.)+\\w*$/)) {\n    regex = /(clerk\\.)*(?=clerk\\.)/;\n  } else if (str.match(/\\.clerk.accounts/)) {\n    return str;\n  } else {\n    regex = /^(clerk\\.)*/gi;\n  }\n\n  const stripped = str.replace(regex, '');\n  return `clerk.${stripped}`;\n}\n\n/**\n *\n * Retrieve the clerk-js major tag using the major version from the pkgVersion\n * param or use the frontendApi to determine if the canary tag should be used.\n * The default tag is `latest`.\n */\nexport const getClerkJsMajorVersionOrTag = (frontendApi: string, version?: string) => {\n  if (!version && isStaging(frontendApi)) {\n    return 'canary';\n  }\n\n  if (!version) {\n    return 'latest';\n  }\n\n  return version.split('.')[0] || 'latest';\n};\n\n/**\n *\n * Retrieve the clerk-js script url from the frontendApi and the major tag\n * using the {@link getClerkJsMajorVersionOrTag} or a provided clerkJSVersion tag.\n */\nexport const getScriptUrl = (frontendApi: string, { clerkJSVersion }: { clerkJSVersion?: string }) => {\n  const noSchemeFrontendApi = frontendApi.replace(/http(s)?:\\/\\//, '');\n  const major = getClerkJsMajorVersionOrTag(frontendApi, clerkJSVersion);\n  return `https://${noSchemeFrontendApi}/npm/@clerk/clerk-js@${clerkJSVersion || major}/dist/clerk.browser.js`;\n};\n\n// Returns true for hosts such as:\n// * accounts.foo.bar-13.lcl.dev\n// * accounts.foo.bar-13.lclstage.dev\n// * accounts.foo.bar-13.dev.lclclerk.com\nexport function isLegacyDevAccountPortalOrigin(host: string): boolean {\n  return LEGACY_DEV_INSTANCE_SUFFIXES.some(legacyDevSuffix => {\n    return host.startsWith('accounts.') && host.endsWith(legacyDevSuffix);\n  });\n}\n\n// Returns true for hosts such as:\n// * foo-bar-13.accounts.dev\n// * foo-bar-13.accountsstage.dev\n// * foo-bar-13.accounts.lclclerk.com\n// But false for:\n// * foo-bar-13.clerk.accounts.lclclerk.com\nexport function isCurrentDevAccountPortalOrigin(host: string): boolean {\n  return CURRENT_DEV_INSTANCE_SUFFIXES.some(currentDevSuffix => {\n    return host.endsWith(currentDevSuffix) && !host.endsWith('.clerk' + currentDevSuffix);\n  });\n}\n\n/* Functions below are taken from https://github.com/unjs/ufo/blob/main/src/utils.ts. LICENSE: MIT */\n\nconst TRAILING_SLASH_RE = /\\/$|\\/\\?|\\/#/;\n\nexport function hasTrailingSlash(input = '', respectQueryAndFragment?: boolean): boolean {\n  if (!respectQueryAndFragment) {\n    return input.endsWith('/');\n  }\n  return TRAILING_SLASH_RE.test(input);\n}\n\nexport function withTrailingSlash(input = '', respectQueryAndFragment?: boolean): string {\n  if (!respectQueryAndFragment) {\n    return input.endsWith('/') ? input : input + '/';\n  }\n  if (hasTrailingSlash(input, true)) {\n    return input || '/';\n  }\n  let path = input;\n  let fragment = '';\n  const fragmentIndex = input.indexOf('#');\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n    if (!path) {\n      return fragment;\n    }\n  }\n  const [s0, ...s] = path.split('?');\n  return s0 + '/' + (s.length > 0 ? `?${s.join('?')}` : '') + fragment;\n}\n\nexport function withoutTrailingSlash(input = '', respectQueryAndFragment?: boolean): string {\n  if (!respectQueryAndFragment) {\n    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || '/';\n  }\n  if (!hasTrailingSlash(input, true)) {\n    return input || '/';\n  }\n  let path = input;\n  let fragment = '';\n  const fragmentIndex = input.indexOf('#');\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n  }\n  const [s0, ...s] = path.split('?');\n  return (s0.slice(0, -1) || '/') + (s.length > 0 ? `?${s.join('?')}` : '') + fragment;\n}\n\nexport function hasLeadingSlash(input = ''): boolean {\n  return input.startsWith('/');\n}\n\nexport function withoutLeadingSlash(input = ''): string {\n  return (hasLeadingSlash(input) ? input.slice(1) : input) || '/';\n}\n\nexport function withLeadingSlash(input = ''): string {\n  return hasLeadingSlash(input) ? input : '/' + input;\n}\n\nexport function cleanDoubleSlashes(input = ''): string {\n  return input\n    .split('://')\n    .map(string_ => string_.replace(/\\/{2,}/g, '/'))\n    .join('://');\n}\n\nexport function isNonEmptyURL(url: string) {\n  return url && url !== '/';\n}\n\nconst JOIN_LEADING_SLASH_RE = /^\\.?\\//;\n\nexport function joinURL(base: string, ...input: string[]): string {\n  let url = base || '';\n\n  for (const segment of input.filter(url => isNonEmptyURL(url))) {\n    if (url) {\n      // TODO: Handle .. when joining\n      const _segment = segment.replace(JOIN_LEADING_SLASH_RE, '');\n      url = withTrailingSlash(url) + _segment;\n    } else {\n      url = segment;\n    }\n  }\n\n  return url;\n}\n\n/* Code below is taken from https://github.com/vercel/next.js/blob/fe7ff3f468d7651a92865350bfd0f16ceba27db5/packages/next/src/shared/lib/utils.ts. LICENSE: MIT */\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url);\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar __privateMethod = (obj, member, method) => (__accessCheck(obj, member, \"access private method\"), method);\n\nexport {\n  __export,\n  __reExport,\n  __privateGet,\n  __privateAdd,\n  __privateSet,\n  __privateMethod\n};\n//# sourceMappingURL=chunk-7ELT755Q.mjs.map", "import {\n  addClerkPrefix,\n  cleanDoubleSlashes,\n  getClerkJsMajorVersionOrTag,\n  getScriptUrl,\n  hasLeadingSlash,\n  hasTrailingSlash,\n  isAbsoluteUrl,\n  isCurrentDevAccountPortalOrigin,\n  isLegacyDevAccountPortalOrigin,\n  isNonEmptyURL,\n  joinURL,\n  parseSearchParams,\n  stripScheme,\n  withLeadingSlash,\n  withTrailingSlash,\n  withoutLeadingSlash,\n  withoutTrailingSlash\n} from \"./chunk-IFTVZ2LQ.mjs\";\nimport \"./chunk-3TMSNP4L.mjs\";\nimport \"./chunk-I6MTSTOF.mjs\";\nimport \"./chunk-7ELT755Q.mjs\";\nexport {\n  addClerkPrefix,\n  cleanDoubleSlashes,\n  getClerkJsMajorVersionOrTag,\n  getScriptUrl,\n  hasLeadingSlash,\n  hasTrailingSlash,\n  isAbsoluteUrl,\n  isCurrentDevAccountPortalOrigin,\n  isLegacyDevAccountPortalOrigin,\n  isNonEmptyURL,\n  joinURL,\n  parseSearchParams,\n  stripScheme,\n  withLeadingSlash,\n  withTrailingSlash,\n  withoutLeadingSlash,\n  withoutTrailingSlash\n};\n//# sourceMappingURL=url.mjs.map", "type Milliseconds = number;\n\ntype RetryOptions = Partial<{\n  /**\n   * The initial delay before the first retry.\n   * @default 125\n   */\n  initialDelay: Milliseconds;\n  /**\n   * The maximum delay between retries.\n   * The delay between retries will never exceed this value.\n   * If set to 0, the delay will increase indefinitely.\n   * @default 0\n   */\n  maxDelayBetweenRetries: Milliseconds;\n  /**\n   * The multiplier for the exponential backoff.\n   * @default 2\n   */\n  factor: number;\n  /**\n   * A function to determine if the operation should be retried.\n   * The callback accepts the error that was thrown and the number of iterations.\n   * The iterations variable references the number of retries AFTER attempt\n   * that caused the error and starts at 1 (as in, this is the 1st, 2nd, nth retry).\n   * @default (error, iterations) => iterations < 5\n   */\n  shouldRetry: (error: unknown, iterations: number) => boolean;\n  /**\n   * Controls whether the helper should retry the operation immediately once before applying exponential backoff.\n   * The delay for the immediate retry is 100ms.\n   * @default false\n   */\n  retryImmediately: boolean;\n  /**\n   * If true, the intervals will be multiplied by a factor in the range of [1,2].\n   * @default true\n   */\n  jitter: boolean;\n}>;\n\nconst defaultOptions: Required<RetryOptions> = {\n  initialDelay: 125,\n  maxDelayBetweenRetries: 0,\n  factor: 2,\n  shouldRetry: (_: unknown, iteration: number) => iteration < 5,\n  retryImmediately: false,\n  jitter: true,\n};\n\nconst RETRY_IMMEDIATELY_DELAY = 100;\n\nconst sleep = async (ms: Milliseconds) => new Promise(s => setTimeout(s, ms));\n\nconst applyJitter = (delay: Milliseconds, jitter: boolean) => {\n  return jitter ? delay * (1 + Math.random()) : delay;\n};\n\nconst createExponentialDelayAsyncFn = (\n  opts: Required<Pick<RetryOptions, 'initialDelay' | 'maxDelayBetweenRetries' | 'factor' | 'jitter'>>,\n) => {\n  let timesCalled = 0;\n\n  const calculateDelayInMs = () => {\n    const constant = opts.initialDelay;\n    const base = opts.factor;\n    let delay = constant * Math.pow(base, timesCalled);\n    delay = applyJitter(delay, opts.jitter);\n    return Math.min(opts.maxDelayBetweenRetries || delay, delay);\n  };\n\n  return async (): Promise<void> => {\n    await sleep(calculateDelayInMs());\n    timesCalled++;\n  };\n};\n\n/**\n * Retries a callback until it succeeds or the shouldRetry function returns false.\n * See {@link RetryOptions} for the available options.\n */\nexport const retry = async <T>(callback: () => T | Promise<T>, options: RetryOptions = {}): Promise<T> => {\n  let iterations = 0;\n  const { shouldRetry, initialDelay, maxDelayBetweenRetries, factor, retryImmediately, jitter } = {\n    ...defaultOptions,\n    ...options,\n  };\n\n  const delay = createExponentialDelayAsyncFn({\n    initialDelay,\n    maxDelayBetweenRetries,\n    factor,\n    jitter,\n  });\n\n  while (true) {\n    try {\n      return await callback();\n    } catch (e) {\n      iterations++;\n      if (!shouldRetry(e, iterations)) {\n        throw e;\n      }\n      if (retryImmediately && iterations === 1) {\n        await sleep(applyJitter(RETRY_IMMEDIATELY_DELAY, jitter));\n      } else {\n        await delay();\n      }\n    }\n  }\n};\n", "import {\n  retry\n} from \"./chunk-N2V3PKFE.mjs\";\nimport \"./chunk-7ELT755Q.mjs\";\nexport {\n  retry\n};\n//# sourceMappingURL=retry.mjs.map", "/**\n * A function that decodes a string of data which has been encoded using base-64 encoding.\n * Uses `atob` if available, otherwise uses `Buffer` from `global`. If neither are available, returns the data as-is.\n */\nexport const isomorphicAtob = (data: string) => {\n  if (typeof atob !== 'undefined' && typeof atob === 'function') {\n    return atob(data);\n  } else if (typeof global !== 'undefined' && global.Buffer) {\n    return new global.Buffer(data, 'base64').toString();\n  }\n  return data;\n};\n", "export const isomorphicBtoa = (data: string) => {\n  if (typeof btoa !== 'undefined' && typeof btoa === 'function') {\n    return btoa(data);\n  } else if (typeof global !== 'undefined' && global.Buffer) {\n    return new global.Buffer(data).toString('base64');\n  }\n  return data;\n};\n", "import type { PublishableKey } from '@clerk/types';\n\nimport { DEV_OR_STAGING_SUFFIXES, LEGACY_DEV_INSTANCE_SUFFIXES } from './constants';\nimport { isomorphicAtob } from './isomorphicAtob';\nimport { isomorphicBtoa } from './isomorphicBtoa';\n\n/**\n * Configuration options for parsing publishable keys.\n */\ntype ParsePublishableKeyOptions = {\n  /** Whether to throw an error if parsing fails */\n  fatal?: boolean;\n  /** Custom domain to use for satellite instances */\n  domain?: string;\n  /** Proxy URL to use instead of the decoded frontend API */\n  proxyUrl?: string;\n  /** Whether this is a satellite instance */\n  isSatellite?: boolean;\n};\n\n/** Prefix used for production publishable keys */\nconst PUBLISHABLE_KEY_LIVE_PREFIX = 'pk_live_';\n\n/** Prefix used for development publishable keys */\nconst PUBLISHABLE_KEY_TEST_PREFIX = 'pk_test_';\n\n/**\n * Regular expression that matches development frontend API keys.\n * Matches patterns like: foo-bar-13.clerk.accounts.dev.\n */\nconst PUBLISHABLE_FRONTEND_API_DEV_REGEX = /^(([a-z]+)-){2}([0-9]{1,2})\\.clerk\\.accounts([a-z.]*)(dev|com)$/i;\n\n/**\n * Converts a frontend API URL into a base64-encoded publishable key.\n *\n * @param frontendApi - The frontend API URL (e.g., 'clerk.example.com').\n * @returns A base64-encoded publishable key with appropriate prefix (pk_live_ or pk_test_).\n */\nexport function buildPublishableKey(frontendApi: string): string {\n  const isDevKey =\n    PUBLISHABLE_FRONTEND_API_DEV_REGEX.test(frontendApi) ||\n    (frontendApi.startsWith('clerk.') && LEGACY_DEV_INSTANCE_SUFFIXES.some(s => frontendApi.endsWith(s)));\n  const keyPrefix = isDevKey ? PUBLISHABLE_KEY_TEST_PREFIX : PUBLISHABLE_KEY_LIVE_PREFIX;\n  return `${keyPrefix}${isomorphicBtoa(`${frontendApi}$`)}`;\n}\n\n/**\n * Validates that a decoded publishable key has the correct format.\n * The decoded value should be a frontend API followed by exactly one '$' at the end.\n *\n * @param decoded - The decoded publishable key string to validate.\n * @returns `true` if the decoded key has valid format, `false` otherwise.\n */\nfunction isValidDecodedPublishableKey(decoded: string): boolean {\n  if (!decoded.endsWith('$')) {\n    return false;\n  }\n\n  const withoutTrailing = decoded.slice(0, -1);\n  if (withoutTrailing.includes('$')) {\n    return false;\n  }\n\n  return withoutTrailing.includes('.');\n}\n\nexport function parsePublishableKey(\n  key: string | undefined,\n  options: ParsePublishableKeyOptions & { fatal: true },\n): PublishableKey;\nexport function parsePublishableKey(\n  key: string | undefined,\n  options?: ParsePublishableKeyOptions,\n): PublishableKey | null;\n/**\n * Parses and validates a publishable key, extracting the frontend API and instance type.\n *\n * @param key - The publishable key to parse.\n * @param options - Configuration options for parsing.\n * @param options.fatal\n * @param options.domain\n * @param options.proxyUrl\n * @param options.isSatellite\n * @returns Parsed publishable key object with instanceType and frontendApi, or null if invalid.\n *\n * @throws {Error} When options.fatal is true and key is missing or invalid.\n */\nexport function parsePublishableKey(\n  key: string | undefined,\n  options: { fatal?: boolean; domain?: string; proxyUrl?: string; isSatellite?: boolean } = {},\n): PublishableKey | null {\n  key = key || '';\n\n  if (!key || !isPublishableKey(key)) {\n    if (options.fatal && !key) {\n      throw new Error(\n        'Publishable key is missing. Ensure that your publishable key is correctly configured. Double-check your environment configuration for your keys, or access them here: https://dashboard.clerk.com/last-active?path=api-keys',\n      );\n    }\n    if (options.fatal && !isPublishableKey(key)) {\n      throw new Error('Publishable key not valid.');\n    }\n    return null;\n  }\n\n  const instanceType = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) ? 'production' : 'development';\n\n  let decodedFrontendApi: string;\n  try {\n    decodedFrontendApi = isomorphicAtob(key.split('_')[2]);\n  } catch {\n    if (options.fatal) {\n      throw new Error('Publishable key not valid: Failed to decode key.');\n    }\n    return null;\n  }\n\n  if (!isValidDecodedPublishableKey(decodedFrontendApi)) {\n    if (options.fatal) {\n      throw new Error('Publishable key not valid: Decoded key has invalid format.');\n    }\n    return null;\n  }\n\n  let frontendApi = decodedFrontendApi.slice(0, -1);\n\n  if (options.proxyUrl) {\n    frontendApi = options.proxyUrl;\n  } else if (instanceType !== 'development' && options.domain && options.isSatellite) {\n    frontendApi = `clerk.${options.domain}`;\n  }\n\n  return {\n    instanceType,\n    frontendApi,\n  };\n}\n\n/**\n * Checks if the provided key is a valid publishable key.\n *\n * @param key - The key to be checked. Defaults to an empty string if not provided.\n * @returns `true` if 'key' is a valid publishable key, `false` otherwise.\n */\nexport function isPublishableKey(key: string = '') {\n  try {\n    const hasValidPrefix = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) || key.startsWith(PUBLISHABLE_KEY_TEST_PREFIX);\n\n    if (!hasValidPrefix) {\n      return false;\n    }\n\n    const parts = key.split('_');\n    if (parts.length !== 3) {\n      return false;\n    }\n\n    const encodedPart = parts[2];\n    if (!encodedPart) {\n      return false;\n    }\n\n    const decoded = isomorphicAtob(encodedPart);\n    return isValidDecodedPublishableKey(decoded);\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Creates a memoized cache for checking if URLs are development or staging environments.\n * Uses a Map to cache results for better performance on repeated checks.\n *\n * @returns An object with an isDevOrStagingUrl method that checks if a URL is dev/staging.\n */\nexport function createDevOrStagingUrlCache() {\n  const devOrStagingUrlCache = new Map<string, boolean>();\n\n  return {\n    /**\n     * Checks if a URL is a development or staging environment.\n     *\n     * @param url - The URL to check (string or URL object).\n     * @returns `true` if the URL is a development or staging environment, `false` otherwise.\n     */\n    isDevOrStagingUrl: (url: string | URL): boolean => {\n      if (!url) {\n        return false;\n      }\n\n      const hostname = typeof url === 'string' ? url : url.hostname;\n      let res = devOrStagingUrlCache.get(hostname);\n      if (res === undefined) {\n        res = DEV_OR_STAGING_SUFFIXES.some(s => hostname.endsWith(s));\n        devOrStagingUrlCache.set(hostname, res);\n      }\n      return res;\n    },\n  };\n}\n\n/**\n * Checks if a publishable key is for a development environment.\n * Supports both legacy format (test_) and new format (pk_test_).\n *\n * @param apiKey - The API key to check.\n * @returns `true` if the key is for development, `false` otherwise.\n */\nexport function isDevelopmentFromPublishableKey(apiKey: string): boolean {\n  return apiKey.startsWith('test_') || apiKey.startsWith('pk_test_');\n}\n\n/**\n * Checks if a publishable key is for a production environment.\n * Supports both legacy format (live_) and new format (pk_live_).\n *\n * @param apiKey - The API key to check.\n * @returns `true` if the key is for production, `false` otherwise.\n */\nexport function isProductionFromPublishableKey(apiKey: string): boolean {\n  return apiKey.startsWith('live_') || apiKey.startsWith('pk_live_');\n}\n\n/**\n * Checks if a secret key is for a development environment.\n * Supports both legacy format (test_) and new format (sk_test_).\n *\n * @param apiKey - The secret key to check.\n * @returns `true` if the key is for development, `false` otherwise.\n */\nexport function isDevelopmentFromSecretKey(apiKey: string): boolean {\n  return apiKey.startsWith('test_') || apiKey.startsWith('sk_test_');\n}\n\n/**\n * Checks if a secret key is for a production environment.\n * Supports both legacy format (live_) and new format (sk_live_).\n *\n * @param apiKey - The secret key to check.\n * @returns `true` if the key is for production, `false` otherwise.\n */\nexport function isProductionFromSecretKey(apiKey: string): boolean {\n  return apiKey.startsWith('live_') || apiKey.startsWith('sk_live_');\n}\n\n/**\n * Generates a unique cookie suffix based on the publishable key using SHA-1 hashing.\n * The suffix is base64-encoded and URL-safe (+ and / characters are replaced).\n *\n * @param publishableKey - The publishable key to generate suffix from.\n * @param subtle - The SubtleCrypto interface to use for hashing (defaults to globalThis.crypto.subtle).\n * @returns A promise that resolves to an 8-character URL-safe base64 string.\n */\nexport async function getCookieSuffix(\n  publishableKey: string,\n  subtle: SubtleCrypto = globalThis.crypto.subtle,\n): Promise<string> {\n  const data = new TextEncoder().encode(publishableKey);\n  const digest = await subtle.digest('sha-1', data);\n  const stringDigest = String.fromCharCode(...new Uint8Array(digest));\n  // Base 64 Encoding with URL and Filename Safe Alphabet: https://datatracker.ietf.org/doc/html/rfc4648#section-5\n  return isomorphicBtoa(stringDigest).replace(/\\+/gi, '-').replace(/\\//gi, '_').substring(0, 8);\n}\n\n/**\n * Creates a suffixed cookie name by appending the cookie suffix to the base name.\n * Used to create unique cookie names based on the publishable key.\n *\n * @param cookieName - The base cookie name.\n * @param cookieSuffix - The suffix to append (typically generated by getCookieSuffix).\n * @returns The suffixed cookie name in format: `${cookieName}_${cookieSuffix}`.\n */\nexport const getSuffixedCookieName = (cookieName: string, cookieSuffix: string): string => {\n  return `${cookieName}_${cookieSuffix}`;\n};\n", "import {\n  buildPublishableKey,\n  createDevOrStagingUrlCache,\n  getCookieSuffix,\n  getSuffixedCookieName,\n  isDevelopmentFromPublishableKey,\n  isDevelopmentFromSecretKey,\n  isProductionFromPublishableKey,\n  isProductionFromSecretKey,\n  isPublishableKey,\n  parsePublishableKey\n} from \"./chunk-IV7BOO4U.mjs\";\nimport \"./chunk-TETGTEI2.mjs\";\nimport \"./chunk-KOH7GTJO.mjs\";\nimport \"./chunk-I6MTSTOF.mjs\";\nimport \"./chunk-7ELT755Q.mjs\";\nexport {\n  buildPublishableKey,\n  createDevOrStagingUrlCache,\n  getCookieSuffix,\n  getSuffixedCookieName,\n  isDevelopmentFromPublishableKey,\n  isDevelopmentFromSecretKey,\n  isProductionFromPublishableKey,\n  isProductionFromSecretKey,\n  isPublishableKey,\n  parsePublishableKey\n};\n//# sourceMappingURL=keys.mjs.map", "export const isDevelopmentEnvironment = (): boolean => {\n  try {\n    return process.env.NODE_ENV === 'development';\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  // TODO: add support for import.meta.env.DEV that is being used by vite\n\n  return false;\n};\n\nexport const isTestEnvironment = (): boolean => {\n  try {\n    return process.env.NODE_ENV === 'test';\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  // TODO: add support for import.meta.env.DEV that is being used by vite\n  return false;\n};\n\nexport const isProductionEnvironment = (): boolean => {\n  try {\n    return process.env.NODE_ENV === 'production';\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  // TODO: add support for import.meta.env.DEV that is being used by vite\n  return false;\n};\n", "import { isProductionEnvironment, isTestEnvironment } from './utils/runtimeEnvironment';\n/**\n * Mark class method / function as deprecated.\n *\n * A console WARNING will be displayed when class method / function is invoked.\n *\n * Examples\n * 1. Deprecate class method\n * class Example {\n *   getSomething = (arg1, arg2) => {\n *       deprecated('Example.getSomething', 'Use `getSomethingElse` instead.');\n *       return `getSomethingValue:${arg1 || '-'}:${arg2 || '-'}`;\n *   };\n * }\n *\n * 2. Deprecate function\n * const getSomething = () => {\n *   deprecated('getSomething', 'Use `getSomethingElse` instead.');\n *   return 'getSomethingValue';\n * };\n */\nconst displayedWarnings = new Set<string>();\nexport const deprecated = (fnName: string, warning: string, key?: string): void => {\n  const hideWarning = isTestEnvironment() || isProductionEnvironment();\n  const messageId = key ?? fnName;\n  if (displayedWarnings.has(messageId) || hideWarning) {\n    return;\n  }\n  displayedWarnings.add(messageId);\n\n  console.warn(\n    `Clerk - DEPRECATION WARNING: \"${fnName}\" is deprecated and will be removed in the next major release.\\n${warning}`,\n  );\n};\n/**\n * Mark class property as deprecated.\n *\n * A console WARNING will be displayed when class property is being accessed.\n *\n * 1. Deprecate class property\n * class Example {\n *   something: string;\n *   constructor(something: string) {\n *     this.something = something;\n *   }\n * }\n *\n * deprecatedProperty(Example, 'something', 'Use `somethingElse` instead.');\n *\n * 2. Deprecate class static property\n * class Example {\n *   static something: string;\n * }\n *\n * deprecatedProperty(Example, 'something', 'Use `somethingElse` instead.', true);\n */\ntype AnyClass = new (...args: any[]) => any;\n\nexport const deprecatedProperty = (cls: AnyClass, propName: string, warning: string, isStatic = false): void => {\n  const target = isStatic ? cls : cls.prototype;\n\n  let value = target[propName];\n  Object.defineProperty(target, propName, {\n    get() {\n      deprecated(propName, warning, `${cls.name}:${propName}`);\n      return value;\n    },\n    set(v: unknown) {\n      value = v;\n    },\n  });\n};\n\n/**\n * Mark object property as deprecated.\n *\n * A console WARNING will be displayed when object property is being accessed.\n *\n * 1. Deprecate object property\n * const obj = { something: 'aloha' };\n *\n * deprecatedObjectProperty(obj, 'something', 'Use `somethingElse` instead.');\n */\nexport const deprecatedObjectProperty = (\n  obj: Record<string, any>,\n  propName: string,\n  warning: string,\n  key?: string,\n): void => {\n  let value = obj[propName];\n  Object.defineProperty(obj, propName, {\n    get() {\n      deprecated(propName, warning, key);\n      return value;\n    },\n    set(v: unknown) {\n      value = v;\n    },\n  });\n};\n", "import {\n  deprecated,\n  deprecatedObjectProperty,\n  deprecatedProperty\n} from \"./chunk-UEY4AZIP.mjs\";\nimport \"./chunk-7HPDNZ3R.mjs\";\nimport \"./chunk-7ELT755Q.mjs\";\nexport {\n  deprecated,\n  deprecatedObjectProperty,\n  deprecatedProperty\n};\n//# sourceMappingURL=deprecated.mjs.map", "import type {\n  ClerkAPIError,\n  ClerkAPIErrorJSON,\n  ClerkAPIResponseError as ClerkAPIResponseErrorInterface,\n} from '@clerk/types';\n\n/**\n * Checks if the provided error object is an unauthorized error.\n *\n * @internal\n *\n * @deprecated This is no longer used, and will be removed in the next major version.\n */\nexport function isUnauthorizedError(e: any): boolean {\n  const status = e?.status;\n  const code = e?.errors?.[0]?.code;\n  return code === 'authentication_invalid' && status === 401;\n}\n\n/**\n * Checks if the provided error object is a captcha error.\n *\n * @internal\n */\nexport function isCaptchaError(e: ClerkAPIResponseError): boolean {\n  return ['captcha_invalid', 'captcha_not_enabled', 'captcha_missing_token'].includes(e.errors[0].code);\n}\n\n/**\n * Checks if the provided error is a 4xx error.\n *\n * @internal\n */\nexport function is4xxError(e: any): boolean {\n  const status = e?.status;\n  return !!status && status >= 400 && status < 500;\n}\n\n/**\n * Checks if the provided error is a network error.\n *\n * @internal\n */\nexport function isNetworkError(e: any): boolean {\n  // TODO: revise during error handling epic\n  const message = (`${e.message}${e.name}` || '').toLowerCase().replace(/\\s+/g, '');\n  return message.includes('networkerror');\n}\n\n/**\n * Options for creating a ClerkAPIResponseError.\n *\n * @internal\n */\ninterface ClerkAPIResponseOptions {\n  data: ClerkAPIErrorJSON[];\n  status: number;\n  clerkTraceId?: string;\n  retryAfter?: number;\n}\n\n// For a comprehensive Metamask error list, please see\n// https://docs.metamask.io/guide/ethereum-provider.html#errors\nexport interface MetamaskError extends Error {\n  code: 4001 | 32602 | 32603;\n  message: string;\n  data?: unknown;\n}\n\n/**\n * Checks if the provided error is either a ClerkAPIResponseError, a ClerkRuntimeError, or a MetamaskError.\n *\n * @internal\n */\nexport function isKnownError(error: any): error is ClerkAPIResponseError | ClerkRuntimeError | MetamaskError {\n  return isClerkAPIResponseError(error) || isMetamaskError(error) || isClerkRuntimeError(error);\n}\n\n/**\n * Checks if the provided error is a ClerkAPIResponseError.\n *\n * @internal\n */\nexport function isClerkAPIResponseError(err: any): err is ClerkAPIResponseError {\n  return err && 'clerkError' in err;\n}\n\n/**\n * Checks if the provided error object is an instance of ClerkRuntimeError.\n *\n * @param err - The error object to check.\n * @returns True if the error is a ClerkRuntimeError, false otherwise.\n *\n * @example\n * const error = new ClerkRuntimeError('An error occurred');\n * if (isClerkRuntimeError(error)) {\n *   // Handle ClerkRuntimeError\n *   console.error('ClerkRuntimeError:', error.message);\n * } else {\n *   // Handle other errors\n *   console.error('Other error:', error.message);\n * }\n */\nexport function isClerkRuntimeError(err: any): err is ClerkRuntimeError {\n  return 'clerkRuntimeError' in err;\n}\n\n/**\n * Checks if the provided error is a Clerk runtime error indicating a reverification was cancelled.\n *\n * @internal\n */\nexport function isReverificationCancelledError(err: any) {\n  return isClerkRuntimeError(err) && err.code === 'reverification_cancelled';\n}\n\n/**\n * Checks if the provided error is a Metamask error.\n *\n * @internal\n */\nexport function isMetamaskError(err: any): err is MetamaskError {\n  return 'code' in err && [4001, 32602, 32603].includes(err.code) && 'message' in err;\n}\n\n/**\n * Checks if the provided error is clerk api response error indicating a user is locked.\n *\n * @internal\n */\nexport function isUserLockedError(err: any) {\n  return isClerkAPIResponseError(err) && err.errors?.[0]?.code === 'user_locked';\n}\n\n/**\n * Checks if the provided error is a clerk api response error indicating a password was pwned.\n *\n * @internal\n */\nexport function isPasswordPwnedError(err: any) {\n  return isClerkAPIResponseError(err) && err.errors?.[0]?.code === 'form_password_pwned';\n}\n\n/**\n * Parses an array of ClerkAPIErrorJSON objects into an array of ClerkAPIError objects.\n *\n * @internal\n */\nexport function parseErrors(data: ClerkAPIErrorJSON[] = []): ClerkAPIError[] {\n  return data.length > 0 ? data.map(parseError) : [];\n}\n\n/**\n * Parses a ClerkAPIErrorJSON object into a ClerkAPIError object.\n *\n * @internal\n */\nexport function parseError(error: ClerkAPIErrorJSON): ClerkAPIError {\n  return {\n    code: error.code,\n    message: error.message,\n    longMessage: error.long_message,\n    meta: {\n      paramName: error?.meta?.param_name,\n      sessionId: error?.meta?.session_id,\n      emailAddresses: error?.meta?.email_addresses,\n      identifiers: error?.meta?.identifiers,\n      zxcvbn: error?.meta?.zxcvbn,\n      plan: error?.meta?.plan,\n      isPlanUpgradePossible: error?.meta?.is_plan_upgrade_possible,\n    },\n  };\n}\n\n/**\n * Converts a ClerkAPIError object into a ClerkAPIErrorJSON object.\n *\n * @internal\n */\nexport function errorToJSON(error: ClerkAPIError | null): ClerkAPIErrorJSON {\n  return {\n    code: error?.code || '',\n    message: error?.message || '',\n    long_message: error?.longMessage,\n    meta: {\n      param_name: error?.meta?.paramName,\n      session_id: error?.meta?.sessionId,\n      email_addresses: error?.meta?.emailAddresses,\n      identifiers: error?.meta?.identifiers,\n      zxcvbn: error?.meta?.zxcvbn,\n      plan: error?.meta?.plan,\n      is_plan_upgrade_possible: error?.meta?.isPlanUpgradePossible,\n    },\n  };\n}\n\nexport class ClerkAPIResponseError extends Error implements ClerkAPIResponseErrorInterface {\n  clerkError: true;\n\n  status: number;\n  message: string;\n  clerkTraceId?: string;\n  retryAfter?: number;\n\n  errors: ClerkAPIError[];\n\n  constructor(message: string, { data, status, clerkTraceId, retryAfter }: ClerkAPIResponseOptions) {\n    super(message);\n\n    Object.setPrototypeOf(this, ClerkAPIResponseError.prototype);\n\n    this.status = status;\n    this.message = message;\n    this.clerkTraceId = clerkTraceId;\n    this.retryAfter = retryAfter;\n    this.clerkError = true;\n    this.errors = parseErrors(data);\n  }\n\n  public toString = () => {\n    let message = `[${this.name}]\\nMessage:${this.message}\\nStatus:${this.status}\\nSerialized errors: ${this.errors.map(\n      e => JSON.stringify(e),\n    )}`;\n\n    if (this.clerkTraceId) {\n      message += `\\nClerk Trace ID: ${this.clerkTraceId}`;\n    }\n\n    return message;\n  };\n}\n\n/**\n * Custom error class for representing Clerk runtime errors.\n *\n * @class ClerkRuntimeError\n *\n * @example\n *   throw new ClerkRuntimeError('An error occurred', { code: 'password_invalid' });\n */\nexport class ClerkRuntimeError extends Error {\n  clerkRuntimeError: true;\n\n  /**\n   * The error message.\n   *\n   * @type {string}\n   */\n  message: string;\n\n  /**\n   * A unique code identifying the error, can be used for localization.\n   *\n   * @type {string}\n   */\n  code: string;\n\n  constructor(message: string, { code }: { code: string }) {\n    const prefix = '🔒 Clerk:';\n    const regex = new RegExp(prefix.replace(' ', '\\\\s*'), 'i');\n    const sanitized = message.replace(regex, '');\n    const _message = `${prefix} ${sanitized.trim()}\\n\\n(code=\"${code}\")\\n`;\n    super(_message);\n\n    Object.setPrototypeOf(this, ClerkRuntimeError.prototype);\n\n    this.code = code;\n    this.message = _message;\n    this.clerkRuntimeError = true;\n    this.name = 'ClerkRuntimeError';\n  }\n\n  /**\n   * Returns a string representation of the error.\n   *\n   * @returns A formatted string with the error name and message.\n   */\n  public toString = () => {\n    return `[${this.name}]\\nMessage:${this.message}`;\n  };\n}\n\nexport class EmailLinkError extends Error {\n  code: string;\n\n  constructor(code: string) {\n    super(code);\n    this.code = code;\n    this.name = 'EmailLinkError' as const;\n    Object.setPrototypeOf(this, EmailLinkError.prototype);\n  }\n}\n\n/**\n * Checks if the provided error is an EmailLinkError.\n *\n * @internal\n */\nexport function isEmailLinkError(err: Error): err is EmailLinkError {\n  return err.name === 'EmailLinkError';\n}\n\n/**\n * @deprecated Use `EmailLinkErrorCodeStatus` instead.\n *\n * @hidden\n */\nexport const EmailLinkErrorCode = {\n  Expired: 'expired',\n  Failed: 'failed',\n  ClientMismatch: 'client_mismatch',\n};\n\nexport const EmailLinkErrorCodeStatus = {\n  Expired: 'expired',\n  Failed: 'failed',\n  ClientMismatch: 'client_mismatch',\n} as const;\n\nconst DefaultMessages = Object.freeze({\n  InvalidProxyUrlErrorMessage: `The proxyUrl passed to Clerk is invalid. The expected value for proxyUrl is an absolute URL or a relative path with a leading '/'. (key={{url}})`,\n  InvalidPublishableKeyErrorMessage: `The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})`,\n  MissingPublishableKeyErrorMessage: `Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n  MissingSecretKeyErrorMessage: `Missing secretKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n  MissingClerkProvider: `{{source}} can only be used within the <ClerkProvider /> component. Learn more: https://clerk.com/docs/components/clerk-provider`,\n});\n\ntype MessageKeys = keyof typeof DefaultMessages;\n\ntype Messages = Record<MessageKeys, string>;\n\ntype CustomMessages = Partial<Messages>;\n\nexport type ErrorThrowerOptions = {\n  packageName: string;\n  customMessages?: CustomMessages;\n};\n\nexport interface ErrorThrower {\n  setPackageName(options: ErrorThrowerOptions): ErrorThrower;\n\n  setMessages(options: ErrorThrowerOptions): ErrorThrower;\n\n  throwInvalidPublishableKeyError(params: { key?: string }): never;\n\n  throwInvalidProxyUrl(params: { url?: string }): never;\n\n  throwMissingPublishableKeyError(): never;\n\n  throwMissingSecretKeyError(): never;\n\n  throwMissingClerkProviderError(params: { source?: string }): never;\n\n  throw(message: string): never;\n}\n\n/**\n * Builds an error thrower.\n *\n * @internal\n */\nexport function buildErrorThrower({ packageName, customMessages }: ErrorThrowerOptions): ErrorThrower {\n  let pkg = packageName;\n\n  /**\n   * Builds a message from a raw message and replacements.\n   *\n   * @internal\n   */\n  function buildMessage(rawMessage: string, replacements?: Record<string, string | number>) {\n    if (!replacements) {\n      return `${pkg}: ${rawMessage}`;\n    }\n\n    let msg = rawMessage;\n    const matches = rawMessage.matchAll(/{{([a-zA-Z0-9-_]+)}}/g);\n\n    for (const match of matches) {\n      const replacement = (replacements[match[1]] || '').toString();\n      msg = msg.replace(`{{${match[1]}}}`, replacement);\n    }\n\n    return `${pkg}: ${msg}`;\n  }\n\n  const messages = {\n    ...DefaultMessages,\n    ...customMessages,\n  };\n\n  return {\n    setPackageName({ packageName }: ErrorThrowerOptions): ErrorThrower {\n      if (typeof packageName === 'string') {\n        pkg = packageName;\n      }\n      return this;\n    },\n\n    setMessages({ customMessages }: ErrorThrowerOptions): ErrorThrower {\n      Object.assign(messages, customMessages || {});\n      return this;\n    },\n\n    throwInvalidPublishableKeyError(params: { key?: string }): never {\n      throw new Error(buildMessage(messages.InvalidPublishableKeyErrorMessage, params));\n    },\n\n    throwInvalidProxyUrl(params: { url?: string }): never {\n      throw new Error(buildMessage(messages.InvalidProxyUrlErrorMessage, params));\n    },\n\n    throwMissingPublishableKeyError(): never {\n      throw new Error(buildMessage(messages.MissingPublishableKeyErrorMessage));\n    },\n\n    throwMissingSecretKeyError(): never {\n      throw new Error(buildMessage(messages.MissingSecretKeyErrorMessage));\n    },\n\n    throwMissingClerkProviderError(params: { source?: string }): never {\n      throw new Error(buildMessage(messages.MissingClerkProvider, params));\n    },\n\n    throw(message: string): never {\n      throw new Error(buildMessage(message));\n    },\n  };\n}\n\ntype ClerkWebAuthnErrorCode =\n  // Generic\n  | 'passkey_not_supported'\n  | 'passkey_pa_not_supported'\n  | 'passkey_invalid_rpID_or_domain'\n  | 'passkey_already_exists'\n  | 'passkey_operation_aborted'\n  // Retrieval\n  | 'passkey_retrieval_cancelled'\n  | 'passkey_retrieval_failed'\n  // Registration\n  | 'passkey_registration_cancelled'\n  | 'passkey_registration_failed';\n\nexport class ClerkWebAuthnError extends ClerkRuntimeError {\n  /**\n   * A unique code identifying the error, can be used for localization.\n   */\n  code: ClerkWebAuthnErrorCode;\n\n  constructor(message: string, { code }: { code: ClerkWebAuthnErrorCode }) {\n    super(message, { code });\n    this.code = code;\n  }\n}\n", "import {\n  ClerkAPIResponseError,\n  ClerkRuntimeError,\n  ClerkWebAuthnError,\n  EmailLinkError,\n  EmailLinkErrorCode,\n  EmailLinkErrorCodeStatus,\n  buildErrorThrower,\n  errorToJSON,\n  is4xxError,\n  isCaptchaError,\n  isClerkAPIResponseError,\n  isClerkRuntimeError,\n  isEmailLinkError,\n  isKnownError,\n  isMetamaskError,\n  isNetworkError,\n  isPasswordPwnedError,\n  isReverificationCancelledError,\n  isUnauthorizedError,\n  isUserLockedError,\n  parseError,\n  parseErrors\n} from \"./chunk-IQKZKT6G.mjs\";\nimport \"./chunk-7ELT755Q.mjs\";\nexport {\n  ClerkAPIResponseError,\n  ClerkRuntimeError,\n  ClerkWebAuthnError,\n  EmailLinkError,\n  EmailLinkErrorCode,\n  EmailLinkErrorCodeStatus,\n  buildErrorThrower,\n  errorToJSON,\n  is4xxError,\n  isCaptchaError,\n  isClerkAPIResponseError,\n  isClerkRuntimeError,\n  isEmailLinkError,\n  isKnownError,\n  isMetamaskError,\n  isNetworkError,\n  isPasswordPwnedError,\n  isReverificationCancelledError,\n  isUnauthorizedError,\n  isUserLockedError,\n  parseError,\n  parseErrors\n};\n//# sourceMappingURL=error.mjs.map", "export { addClerkPrefix, getScriptUrl, getClerkJsMajorVersionOrTag } from '@clerk/shared/url';\nexport { retry } from '@clerk/shared/retry';\nexport {\n  isDevelopmentFromSecretKey,\n  isProductionFromSecretKey,\n  parsePublishableKey,\n  getCookieSuffix,\n  getSuffixedCookieName,\n} from '@clerk/shared/keys';\nexport { deprecated, deprecatedProperty } from '@clerk/shared/deprecated';\n\nimport { buildErrorThrower } from '@clerk/shared/error';\nimport { createDevOrStagingUrlCache } from '@clerk/shared/keys';\n// TODO: replace packageName with `${PACKAGE_NAME}@${PACKAGE_VERSION}` from tsup.config.ts\nexport const errorThrower = buildErrorThrower({ packageName: '@clerk/backend' });\n\nexport const { isDevOrStagingUrl } = createDevOrStagingUrlCache();\n", "export type TokenCarrier = 'header' | 'cookie';\n\nexport const TokenVerificationErrorCode = {\n  InvalidSecretKey: 'clerk_key_invalid',\n};\n\nexport type TokenVerificationErrorCode = (typeof TokenVerificationErrorCode)[keyof typeof TokenVerificationErrorCode];\n\nexport const TokenVerificationErrorReason = {\n  TokenExpired: 'token-expired',\n  TokenInvalid: 'token-invalid',\n  TokenInvalidAlgorithm: 'token-invalid-algorithm',\n  TokenInvalidAuthorizedParties: 'token-invalid-authorized-parties',\n  TokenInvalidSignature: 'token-invalid-signature',\n  TokenNotActiveYet: 'token-not-active-yet',\n  TokenIatInTheFuture: 'token-iat-in-the-future',\n  TokenVerificationFailed: 'token-verification-failed',\n  InvalidSecretKey: 'secret-key-invalid',\n  LocalJWKMissing: 'jwk-local-missing',\n  RemoteJWKFailedToLoad: 'jwk-remote-failed-to-load',\n  RemoteJWKInvalid: 'jwk-remote-invalid',\n  RemoteJWKMissing: 'jwk-remote-missing',\n  JWKFailedToResolve: 'jwk-failed-to-resolve',\n  JWKKidMismatch: 'jwk-kid-mismatch',\n};\n\nexport type TokenVerificationErrorReason =\n  (typeof TokenVerificationErrorReason)[keyof typeof TokenVerificationErrorReason];\n\nexport const TokenVerificationErrorAction = {\n  ContactSupport: 'Contact support@clerk.com',\n  EnsureClerkJWT: 'Make sure that this is a valid Clerk generate JWT.',\n  SetClerkJWTKey: 'Set the CLERK_JWT_KEY environment variable.',\n  SetClerkSecretKey: 'Set the CLERK_SECRET_KEY environment variable.',\n  EnsureClockSync: 'Make sure your system clock is in sync (e.g. turn off and on automatic time synchronization).',\n};\n\nexport type TokenVerificationErrorAction =\n  (typeof TokenVerificationErrorAction)[keyof typeof TokenVerificationErrorAction];\n\nexport class TokenVerificationError extends Error {\n  action?: TokenVerificationErrorAction;\n  reason: TokenVerificationErrorReason;\n  tokenCarrier?: TokenCarrier;\n\n  constructor({\n    action,\n    message,\n    reason,\n  }: {\n    action?: TokenVerificationErrorAction;\n    message: string;\n    reason: TokenVerificationErrorReason;\n  }) {\n    super(message);\n\n    Object.setPrototypeOf(this, TokenVerificationError.prototype);\n\n    this.reason = reason;\n    this.message = message;\n    this.action = action;\n  }\n\n  public getFullMessage() {\n    return `${[this.message, this.action].filter(m => m).join(' ')} (reason=${this.reason}, token-carrier=${\n      this.tokenCarrier\n    })`;\n  }\n}\n\nexport class SignJWTError extends Error {}\n\nexport const MachineTokenVerificationErrorCode = {\n  TokenInvalid: 'token-invalid',\n  InvalidSecretKey: 'secret-key-invalid',\n  UnexpectedError: 'unexpected-error',\n} as const;\n\nexport type MachineTokenVerificationErrorCode =\n  (typeof MachineTokenVerificationErrorCode)[keyof typeof MachineTokenVerificationErrorCode];\n\nexport class MachineTokenVerificationError extends Error {\n  code: MachineTokenVerificationErrorCode;\n  long_message?: string;\n  status: number;\n\n  constructor({ message, code, status }: { message: string; code: MachineTokenVerificationErrorCode; status: number }) {\n    super(message);\n    Object.setPrototypeOf(this, MachineTokenVerificationError.prototype);\n\n    this.code = code;\n    this.status = status;\n  }\n\n  public getFullMessage() {\n    return `${this.message} (code=${this.code}, status=${this.status})`;\n  }\n}\n", "export const webcrypto = crypto;\n", "import {\n  isomorphicAtob\n} from \"./chunk-TETGTEI2.mjs\";\nimport \"./chunk-7ELT755Q.mjs\";\nexport {\n  isomorphicAtob\n};\n//# sourceMappingURL=isomorphicAtob.mjs.map", "/**\n * This file exports APIs that vary across runtimes (i.e. Node & Browser - V8 isolates)\n * as a singleton object.\n *\n * Runtime polyfills are written in VanillaJS for now to avoid TS complication. Moreover,\n * due to this issue https://github.com/microsoft/TypeScript/issues/44848, there is not a good way\n * to tell Typescript which conditional import to use during build type.\n *\n * The Runtime type definition ensures type safety for now.\n * Runtime js modules are copied into dist folder with bash script.\n *\n * TODO: Support TS runtime modules\n */\n\n// @ts-ignore - These are package subpaths\nimport { webcrypto as crypto } from '#crypto';\n\ntype Runtime = {\n  crypto: Crypto;\n  fetch: typeof globalThis.fetch;\n  AbortController: typeof globalThis.AbortController;\n  Blob: typeof globalThis.Blob;\n  FormData: typeof globalThis.FormData;\n  Headers: typeof globalThis.Headers;\n  Request: typeof globalThis.Request;\n  Response: typeof globalThis.Response;\n};\n\n// Invoking the global.fetch without binding it first to the globalObject fails in\n// Cloudflare Workers with an \"Illegal Invocation\" error.\n//\n// The globalThis object is supported for Node >= 12.0.\n//\n// https://github.com/supabase/supabase/issues/4417\nconst globalFetch = fetch.bind(globalThis);\n\nexport const runtime: Runtime = {\n  crypto,\n  get fetch() {\n    // We need to use the globalFetch for Cloudflare Workers but the fetch for testing\n    return process.env.NODE_ENV === 'test' ? fetch : globalFetch;\n  },\n  AbortController: globalThis.AbortController,\n  Blob: globalThis.Blob,\n  FormData: globalThis.FormData,\n  Headers: globalThis.Headers,\n  Request: globalThis.Request,\n  Response: globalThis.Response,\n};\n", "/**\n * The base64url helper was extracted from the rfc4648 package\n * in order to resolve CSJ/ESM interoperability issues\n *\n * https://github.com/swansontec/rfc4648.js\n *\n * For more context please refer to:\n * - https://github.com/evanw/esbuild/issues/1719\n * - https://github.com/evanw/esbuild/issues/532\n * - https://github.com/swansontec/rollup-plugin-mjs-entry\n */\nexport const base64url = {\n  parse(string: string, opts?: ParseOptions): Uint8Array {\n    return parse(string, base64UrlEncoding, opts);\n  },\n\n  stringify(data: ArrayLike<number>, opts?: StringifyOptions): string {\n    return stringify(data, base64UrlEncoding, opts);\n  },\n};\n\nconst base64UrlEncoding: Encoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bits: 6,\n};\n\ninterface Encoding {\n  bits: number;\n  chars: string;\n  codes?: { [char: string]: number };\n}\n\ninterface ParseOptions {\n  loose?: boolean;\n  out?: new (size: number) => { [index: number]: number };\n}\n\ninterface StringifyOptions {\n  pad?: boolean;\n}\n\nfunction parse(string: string, encoding: Encoding, opts: ParseOptions = {}): Uint8Array {\n  // Build the character lookup table:\n  if (!encoding.codes) {\n    encoding.codes = {};\n    for (let i = 0; i < encoding.chars.length; ++i) {\n      encoding.codes[encoding.chars[i]] = i;\n    }\n  }\n\n  // The string must have a whole number of bytes:\n  if (!opts.loose && (string.length * encoding.bits) & 7) {\n    throw new SyntaxError('Invalid padding');\n  }\n\n  // Count the padding bytes:\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n\n    // If we get a whole number of bytes, there is too much padding:\n    if (!opts.loose && !(((string.length - end) * encoding.bits) & 7)) {\n      throw new SyntaxError('Invalid padding');\n    }\n  }\n\n  // Allocate the output:\n  const out = new (opts.out ?? Uint8Array)(((end * encoding.bits) / 8) | 0) as Uint8Array;\n\n  // Parse the data:\n  let bits = 0; // Number of bits currently in the buffer\n  let buffer = 0; // Bits waiting to be written out, MSB first\n  let written = 0; // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = encoding.codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[i]);\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << encoding.bits) | value;\n    bits += encoding.bits;\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 0xff & (buffer >> bits);\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= encoding.bits || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n\n  return out;\n}\n\nfunction stringify(data: ArrayLike<number>, encoding: Encoding, opts: StringifyOptions = {}): string {\n  const { pad = true } = opts;\n  const mask = (1 << encoding.bits) - 1;\n  let out = '';\n\n  let bits = 0; // Number of bits currently in the buffer\n  let buffer = 0; // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | (0xff & data[i]);\n    bits += 8;\n\n    // Write out as much as we can:\n    while (bits > encoding.bits) {\n      bits -= encoding.bits;\n      out += encoding.chars[mask & (buffer >> bits)];\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += encoding.chars[mask & (buffer << (encoding.bits - bits))];\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * encoding.bits) & 7) {\n      out += '=';\n    }\n  }\n\n  return out;\n}\n", "const algToHash: Record<string, string> = {\n  RS256: 'SHA-256',\n  RS384: 'SHA-384',\n  RS512: 'SHA-512',\n};\nconst RSA_ALGORITHM_NAME = 'RSASSA-PKCS1-v1_5';\n\nconst jwksAlgToCryptoAlg: Record<string, string> = {\n  RS256: RSA_ALGORITHM_NAME,\n  RS384: RSA_ALGORITHM_NAME,\n  RS512: RSA_ALGORITHM_NAME,\n};\n\nexport const algs = Object.keys(algToHash);\n\nexport function getCryptoAlgorithm(algorithmName: string): RsaHashedImportParams {\n  const hash = algToHash[algorithmName];\n  const name = jwksAlgToCryptoAlg[algorithmName];\n\n  if (!hash || !name) {\n    throw new Error(`Unsupported algorithm ${algorithmName}, expected one of ${algs.join(',')}.`);\n  }\n\n  return {\n    hash: { name: algToHash[algorithmName] },\n    name: jwksAlgToCryptoAlg[algorithmName],\n  };\n}\n", "import { TokenVerificationError, TokenVerificationErrorAction, TokenVerificationErrorReason } from '../errors';\nimport { algs } from './algorithms';\n\nexport type IssuerResolver = string | ((iss: string) => boolean);\n\nconst isArrayString = (s: unknown): s is string[] => {\n  return Array.isArray(s) && s.length > 0 && s.every(a => typeof a === 'string');\n};\n\nexport const assertAudienceClaim = (aud?: unknown, audience?: unknown) => {\n  const audienceList = [audience].flat().filter(a => !!a);\n  const audList = [aud].flat().filter(a => !!a);\n  const shouldVerifyAudience = audienceList.length > 0 && audList.length > 0;\n\n  if (!shouldVerifyAudience) {\n    // Notice: Clerk JWTs use AZP claim instead of Audience\n    //\n    // return {\n    //   valid: false,\n    //   reason: `Invalid JWT audience claim (aud) ${JSON.stringify(\n    //     aud,\n    //   )}. Expected a string or a non-empty array of strings.`,\n    // };\n    return;\n  }\n\n  if (typeof aud === 'string') {\n    if (!audienceList.includes(aud)) {\n      throw new TokenVerificationError({\n        action: TokenVerificationErrorAction.EnsureClerkJWT,\n        reason: TokenVerificationErrorReason.TokenVerificationFailed,\n        message: `Invalid JWT audience claim (aud) ${JSON.stringify(aud)}. Is not included in \"${JSON.stringify(\n          audienceList,\n        )}\".`,\n      });\n    }\n  } else if (isArrayString(aud)) {\n    if (!aud.some(a => audienceList.includes(a))) {\n      throw new TokenVerificationError({\n        action: TokenVerificationErrorAction.EnsureClerkJWT,\n        reason: TokenVerificationErrorReason.TokenVerificationFailed,\n        message: `Invalid JWT audience claim array (aud) ${JSON.stringify(aud)}. Is not included in \"${JSON.stringify(\n          audienceList,\n        )}\".`,\n      });\n    }\n  }\n};\n\nexport const assertHeaderType = (typ?: unknown) => {\n  if (typeof typ === 'undefined') {\n    return;\n  }\n\n  if (typ !== 'JWT') {\n    throw new TokenVerificationError({\n      action: TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: TokenVerificationErrorReason.TokenInvalid,\n      message: `Invalid JWT type ${JSON.stringify(typ)}. Expected \"JWT\".`,\n    });\n  }\n};\n\nexport const assertHeaderAlgorithm = (alg: string) => {\n  if (!algs.includes(alg)) {\n    throw new TokenVerificationError({\n      action: TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: TokenVerificationErrorReason.TokenInvalidAlgorithm,\n      message: `Invalid JWT algorithm ${JSON.stringify(alg)}. Supported: ${algs}.`,\n    });\n  }\n};\n\nexport const assertSubClaim = (sub?: string) => {\n  if (typeof sub !== 'string') {\n    throw new TokenVerificationError({\n      action: TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Subject claim (sub) is required and must be a string. Received ${JSON.stringify(sub)}.`,\n    });\n  }\n};\n\nexport const assertAuthorizedPartiesClaim = (azp?: string, authorizedParties?: string[]) => {\n  if (!azp || !authorizedParties || authorizedParties.length === 0) {\n    return;\n  }\n\n  if (!authorizedParties.includes(azp)) {\n    throw new TokenVerificationError({\n      reason: TokenVerificationErrorReason.TokenInvalidAuthorizedParties,\n      message: `Invalid JWT Authorized party claim (azp) ${JSON.stringify(azp)}. Expected \"${authorizedParties}\".`,\n    });\n  }\n};\n\nexport const assertExpirationClaim = (exp: number, clockSkewInMs: number) => {\n  if (typeof exp !== 'number') {\n    throw new TokenVerificationError({\n      action: TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Invalid JWT expiry date claim (exp) ${JSON.stringify(exp)}. Expected number.`,\n    });\n  }\n\n  const currentDate = new Date(Date.now());\n  const expiryDate = new Date(0);\n  expiryDate.setUTCSeconds(exp);\n\n  const expired = expiryDate.getTime() <= currentDate.getTime() - clockSkewInMs;\n  if (expired) {\n    throw new TokenVerificationError({\n      reason: TokenVerificationErrorReason.TokenExpired,\n      message: `JWT is expired. Expiry date: ${expiryDate.toUTCString()}, Current date: ${currentDate.toUTCString()}.`,\n    });\n  }\n};\n\nexport const assertActivationClaim = (nbf: number | undefined, clockSkewInMs: number) => {\n  if (typeof nbf === 'undefined') {\n    return;\n  }\n\n  if (typeof nbf !== 'number') {\n    throw new TokenVerificationError({\n      action: TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Invalid JWT not before date claim (nbf) ${JSON.stringify(nbf)}. Expected number.`,\n    });\n  }\n\n  const currentDate = new Date(Date.now());\n  const notBeforeDate = new Date(0);\n  notBeforeDate.setUTCSeconds(nbf);\n\n  const early = notBeforeDate.getTime() > currentDate.getTime() + clockSkewInMs;\n  if (early) {\n    throw new TokenVerificationError({\n      reason: TokenVerificationErrorReason.TokenNotActiveYet,\n      message: `JWT cannot be used prior to not before date claim (nbf). Not before date: ${notBeforeDate.toUTCString()}; Current date: ${currentDate.toUTCString()};`,\n    });\n  }\n};\n\nexport const assertIssuedAtClaim = (iat: number | undefined, clockSkewInMs: number) => {\n  if (typeof iat === 'undefined') {\n    return;\n  }\n\n  if (typeof iat !== 'number') {\n    throw new TokenVerificationError({\n      action: TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Invalid JWT issued at date claim (iat) ${JSON.stringify(iat)}. Expected number.`,\n    });\n  }\n\n  const currentDate = new Date(Date.now());\n  const issuedAtDate = new Date(0);\n  issuedAtDate.setUTCSeconds(iat);\n\n  const postIssued = issuedAtDate.getTime() > currentDate.getTime() + clockSkewInMs;\n  if (postIssued) {\n    throw new TokenVerificationError({\n      reason: TokenVerificationErrorReason.TokenIatInTheFuture,\n      message: `JWT issued at date claim (iat) is in the future. Issued at date: ${issuedAtDate.toUTCString()}; Current date: ${currentDate.toUTCString()};`,\n    });\n  }\n};\n", "import { isomorphicAtob } from '@clerk/shared/isomorphicAtob';\n\nimport { runtime } from '../runtime';\n\n// https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey#pkcs_8_import\nfunction pemToBuffer(secret: string): ArrayBuffer {\n  const trimmed = secret\n    .replace(/-----BEGIN.*?-----/g, '')\n    .replace(/-----END.*?-----/g, '')\n    .replace(/\\s/g, '');\n\n  const decoded = isomorphicAtob(trimmed);\n\n  const buffer = new ArrayBuffer(decoded.length);\n  const bufView = new Uint8Array(buffer);\n\n  for (let i = 0, strLen = decoded.length; i < strLen; i++) {\n    bufView[i] = decoded.charCodeAt(i);\n  }\n\n  return bufView;\n}\n\nexport function importKey(\n  key: JsonWebKey | string,\n  algorithm: RsaHashedImportParams,\n  keyUsage: 'verify' | 'sign',\n): Promise<CryptoKey> {\n  if (typeof key === 'object') {\n    return runtime.crypto.subtle.importKey('jwk', key, algorithm, false, [keyUsage]);\n  }\n\n  const keyData = pemToBuffer(key);\n  const format = keyUsage === 'sign' ? 'pkcs8' : 'spki';\n\n  return runtime.crypto.subtle.importKey(format, keyData, algorithm, false, [keyUsage]);\n}\n", "import type { Jwt, JwtPayload } from '@clerk/types';\n\nimport { TokenVerificationError, TokenVerificationErrorAction, TokenVerificationErrorReason } from '../errors';\nimport { runtime } from '../runtime';\nimport { base64url } from '../util/rfc4648';\nimport { getCryptoAlgorithm } from './algorithms';\nimport {\n  assertActivationClaim,\n  assertAudienceClaim,\n  assertAuthorizedPartiesClaim,\n  assertExpirationClaim,\n  assertHeaderAlgorithm,\n  assertHeaderType,\n  assertIssuedAtClaim,\n  assertSubClaim,\n} from './assertions';\nimport { importKey } from './cryptoKeys';\nimport type { JwtReturnType } from './types';\n\nconst DEFAULT_CLOCK_SKEW_IN_MS = 5 * 1000;\n\nexport async function hasValidSignature(jwt: Jwt, key: JsonWebKey | string): Promise<JwtReturnType<boolean, Error>> {\n  const { header, signature, raw } = jwt;\n  const encoder = new TextEncoder();\n  const data = encoder.encode([raw.header, raw.payload].join('.'));\n  const algorithm = getCryptoAlgorithm(header.alg);\n\n  try {\n    const cryptoKey = await importKey(key, algorithm, 'verify');\n\n    const verified = await runtime.crypto.subtle.verify(algorithm.name, cryptoKey, signature, data);\n    return { data: verified };\n  } catch (error) {\n    return {\n      errors: [\n        new TokenVerificationError({\n          reason: TokenVerificationErrorReason.TokenInvalidSignature,\n          message: (error as Error)?.message,\n        }),\n      ],\n    };\n  }\n}\n\nexport function decodeJwt(token: string): JwtReturnType<Jwt, TokenVerificationError> {\n  const tokenParts = (token || '').toString().split('.');\n  if (tokenParts.length !== 3) {\n    return {\n      errors: [\n        new TokenVerificationError({\n          reason: TokenVerificationErrorReason.TokenInvalid,\n          message: `Invalid JWT form. A JWT consists of three parts separated by dots.`,\n        }),\n      ],\n    };\n  }\n\n  const [rawHeader, rawPayload, rawSignature] = tokenParts;\n\n  const decoder = new TextDecoder();\n\n  // To verify a JWS with SubtleCrypto you need to be careful to encode and decode\n  // the data properly between binary and base64url representation. Unfortunately\n  // the standard implementation in the V8 of btoa() and atob() are difficult to\n  // work with as they use \"a Unicode string containing only characters in the\n  // range U+0000 to U+00FF, each representing a binary byte with values 0x00 to\n  // 0xFF respectively\" as the representation of binary data.\n\n  // A better solution to represent binary data in Javascript is to use ES6 TypedArray\n  // and use a Javascript library to convert them to base64url that honors RFC 4648.\n\n  // Side note: The difference between base64 and base64url is the characters selected\n  // for value 62 and 63 in the standard, base64 encode them to + and / while base64url\n  // encode - and _.\n\n  // More info at https://stackoverflow.com/questions/54062583/how-to-verify-a-signed-jwt-with-subtlecrypto-of-the-web-crypto-API\n  const header = JSON.parse(decoder.decode(base64url.parse(rawHeader, { loose: true })));\n  const payload = JSON.parse(decoder.decode(base64url.parse(rawPayload, { loose: true })));\n\n  const signature = base64url.parse(rawSignature, { loose: true });\n\n  const data = {\n    header,\n    payload,\n    signature,\n    raw: {\n      header: rawHeader,\n      payload: rawPayload,\n      signature: rawSignature,\n      text: token,\n    },\n  } satisfies Jwt;\n\n  return { data };\n}\n\n/**\n * @inline\n */\nexport type VerifyJwtOptions = {\n  /**\n   * A string or list of [audiences](https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.3). If passed, it is checked against the `aud` claim in the token.\n   */\n  audience?: string | string[];\n  /**\n   * An allowlist of origins to verify against, to protect your application from the subdomain cookie leaking attack.\n   * @example\n   * ```ts\n   * ['http://localhost:3000', 'https://example.com']\n   * ```\n   */\n  authorizedParties?: string[];\n  /**\n   * Specifies the allowed time difference (in milliseconds) between the Clerk server (which generates the token) and the clock of the user's application server when validating a token.\n   * @default 5000\n   */\n  clockSkewInMs?: number;\n  /**\n   * @internal\n   */\n  key: JsonWebKey | string;\n};\n\nexport async function verifyJwt(\n  token: string,\n  options: VerifyJwtOptions,\n): Promise<JwtReturnType<JwtPayload, TokenVerificationError>> {\n  const { audience, authorizedParties, clockSkewInMs, key } = options;\n  const clockSkew = clockSkewInMs || DEFAULT_CLOCK_SKEW_IN_MS;\n\n  const { data: decoded, errors } = decodeJwt(token);\n  if (errors) {\n    return { errors };\n  }\n\n  const { header, payload } = decoded;\n  try {\n    // Header verifications\n    const { typ, alg } = header;\n\n    assertHeaderType(typ);\n    assertHeaderAlgorithm(alg);\n\n    // Payload verifications\n    const { azp, sub, aud, iat, exp, nbf } = payload;\n\n    assertSubClaim(sub);\n    assertAudienceClaim([aud], [audience]);\n    assertAuthorizedPartiesClaim(azp, authorizedParties);\n    assertExpirationClaim(exp, clockSkew);\n    assertActivationClaim(nbf, clockSkew);\n    assertIssuedAtClaim(iat, clockSkew);\n  } catch (err) {\n    return { errors: [err as TokenVerificationError] };\n  }\n\n  const { data: signatureValid, errors: signatureErrors } = await hasValidSignature(decoded, key);\n  if (signatureErrors) {\n    return {\n      errors: [\n        new TokenVerificationError({\n          action: TokenVerificationErrorAction.EnsureClerkJWT,\n          reason: TokenVerificationErrorReason.TokenVerificationFailed,\n          message: `Error verifying JWT signature. ${signatureErrors[0]}`,\n        }),\n      ],\n    };\n  }\n\n  if (!signatureValid) {\n    return {\n      errors: [\n        new TokenVerificationError({\n          reason: TokenVerificationErrorReason.TokenInvalidSignature,\n          message: 'JWT signature is invalid.',\n        }),\n      ],\n    };\n  }\n\n  return { data: payload };\n}\n", "var __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateMethod = (obj, member, method) => (__accessCheck(obj, member, \"access private method\"), method);\n\nexport {\n  __privateAdd,\n  __privateMethod\n};\n//# sourceMappingURL=chunk-RPS7XK5K.mjs.map", "/**\n * Builds a full origin string pointing to the Account Portal for the given frontend API.\n */\nexport function buildAccountsBaseUrl(frontendApi?: string): string {\n  if (!frontendApi) {\n    return '';\n  }\n\n  // convert url from FAPI to accounts for Kima and legacy (prod & dev) instances\n  const accountsBaseUrl = frontendApi\n    // staging accounts\n    .replace(/clerk\\.accountsstage\\./, 'accountsstage.')\n    .replace(/clerk\\.accounts\\.|clerk\\./, 'accounts.');\n  return `https://${accountsBaseUrl}`;\n}\n", "import type {\n  ActClaim,\n  CheckAuthorizationWithCustomPermissions,\n  GetToken,\n  JwtPayload,\n  OrganizationCustomPermissionKey,\n  OrganizationCustomRoleKey,\n  PendingSessionOptions,\n  ReverificationConfig,\n  SessionStatusClaim,\n  SessionVerificationLevel,\n  SessionVerificationTypes,\n  SignOut,\n  UseAuthReturn,\n} from '@clerk/types';\n\ntype TypesToConfig = Record<SessionVerificationTypes, Exclude<ReverificationConfig, SessionVerificationTypes>>;\ntype AuthorizationOptions = {\n  userId: string | null | undefined;\n  orgId: string | null | undefined;\n  orgRole: string | null | undefined;\n  orgPermissions: string[] | null | undefined;\n  factorVerificationAge: [number, number] | null;\n  features: string | null | undefined;\n  plans: string | null | undefined;\n};\n\ntype CheckOrgAuthorization = (\n  params: { role?: OrganizationCustomRoleKey; permission?: OrganizationCustomPermissionKey },\n  options: Pick<AuthorizationOptions, 'orgId' | 'orgRole' | 'orgPermissions'>,\n) => boolean | null;\n\ntype CheckBillingAuthorization = (\n  params: { feature?: string; plan?: string },\n  options: Pick<AuthorizationOptions, 'plans' | 'features'>,\n) => boolean | null;\n\ntype CheckReverificationAuthorization = (\n  params: {\n    reverification?: ReverificationConfig;\n  },\n  { factorVerificationAge }: AuthorizationOptions,\n) => boolean | null;\n\nconst TYPES_TO_OBJECTS: TypesToConfig = {\n  strict_mfa: {\n    afterMinutes: 10,\n    level: 'multi_factor',\n  },\n  strict: {\n    afterMinutes: 10,\n    level: 'second_factor',\n  },\n  moderate: {\n    afterMinutes: 60,\n    level: 'second_factor',\n  },\n  lax: {\n    afterMinutes: 1_440,\n    level: 'second_factor',\n  },\n};\n\nconst ALLOWED_LEVELS = new Set<SessionVerificationLevel>(['first_factor', 'second_factor', 'multi_factor']);\n\nconst ALLOWED_TYPES = new Set<SessionVerificationTypes>(['strict_mfa', 'strict', 'moderate', 'lax']);\n\n// Helper functions\nconst isValidMaxAge = (maxAge: any) => typeof maxAge === 'number' && maxAge > 0;\nconst isValidLevel = (level: any) => ALLOWED_LEVELS.has(level);\nconst isValidVerificationType = (type: any) => ALLOWED_TYPES.has(type);\n\nconst prefixWithOrg = (value: string) => value.replace(/^(org:)*/, 'org:');\n\n/**\n * Checks if a user has the required organization-level authorization.\n * Verifies if the user has the specified role or permission within their organization.\n * @returns null, if unable to determine due to missing data or unspecified role/permission.\n */\nconst checkOrgAuthorization: CheckOrgAuthorization = (params, options) => {\n  const { orgId, orgRole, orgPermissions } = options;\n  if (!params.role && !params.permission) {\n    return null;\n  }\n\n  if (!orgId || !orgRole || !orgPermissions) {\n    return null;\n  }\n\n  if (params.permission) {\n    return orgPermissions.includes(prefixWithOrg(params.permission));\n  }\n\n  if (params.role) {\n    return prefixWithOrg(orgRole) === prefixWithOrg(params.role);\n  }\n  return null;\n};\n\nconst checkForFeatureOrPlan = (claim: string, featureOrPlan: string) => {\n  const { org: orgFeatures, user: userFeatures } = splitByScope(claim);\n  const [scope, _id] = featureOrPlan.split(':');\n  const id = _id || scope;\n\n  if (scope === 'org') {\n    return orgFeatures.includes(id);\n  } else if (scope === 'user') {\n    return userFeatures.includes(id);\n  } else {\n    // Since org scoped features will not exist if there is not an active org, merging is safe.\n    return [...orgFeatures, ...userFeatures].includes(id);\n  }\n};\n\nconst checkBillingAuthorization: CheckBillingAuthorization = (params, options) => {\n  const { features, plans } = options;\n\n  if (params.feature && features) {\n    return checkForFeatureOrPlan(features, params.feature);\n  }\n\n  if (params.plan && plans) {\n    return checkForFeatureOrPlan(plans, params.plan);\n  }\n  return null;\n};\n\nconst splitByScope = (fea: string | null | undefined) => {\n  const features = fea ? fea.split(',').map(f => f.trim()) : [];\n\n  // TODO: make this more efficient\n  return {\n    org: features.filter(f => f.split(':')[0].includes('o')).map(f => f.split(':')[1]),\n    user: features.filter(f => f.split(':')[0].includes('u')).map(f => f.split(':')[1]),\n  };\n};\n\nconst validateReverificationConfig = (config: ReverificationConfig | undefined | null) => {\n  if (!config) {\n    return false;\n  }\n\n  const convertConfigToObject = (config: ReverificationConfig) => {\n    if (typeof config === 'string') {\n      return TYPES_TO_OBJECTS[config];\n    }\n    return config;\n  };\n\n  const isValidStringValue = typeof config === 'string' && isValidVerificationType(config);\n  const isValidObjectValue =\n    typeof config === 'object' && isValidLevel(config.level) && isValidMaxAge(config.afterMinutes);\n\n  if (isValidStringValue || isValidObjectValue) {\n    return convertConfigToObject.bind(null, config);\n  }\n\n  return false;\n};\n\n/**\n * Evaluates if the user meets re-verification authentication requirements.\n * Compares the user's factor verification ages against the specified maxAge.\n * Handles different verification levels (first factor, second factor, multi-factor).\n * @returns null, if requirements or verification data are missing.\n */\nconst checkReverificationAuthorization: CheckReverificationAuthorization = (params, { factorVerificationAge }) => {\n  if (!params.reverification || !factorVerificationAge) {\n    return null;\n  }\n\n  const isValidReverification = validateReverificationConfig(params.reverification);\n  if (!isValidReverification) {\n    return null;\n  }\n\n  const { level, afterMinutes } = isValidReverification();\n  const [factor1Age, factor2Age] = factorVerificationAge;\n\n  // -1 indicates the factor group (1fa,2fa) is not enabled\n  // -1 for 1fa is not a valid scenario, but we need to make sure we handle it properly\n  const isValidFactor1 = factor1Age !== -1 ? afterMinutes > factor1Age : null;\n  const isValidFactor2 = factor2Age !== -1 ? afterMinutes > factor2Age : null;\n\n  switch (level) {\n    case 'first_factor':\n      return isValidFactor1;\n    case 'second_factor':\n      return factor2Age !== -1 ? isValidFactor2 : isValidFactor1;\n    case 'multi_factor':\n      return factor2Age === -1 ? isValidFactor1 : isValidFactor1 && isValidFactor2;\n  }\n};\n\n/**\n * Creates a function for comprehensive user authorization checks.\n * Combines organization-level and reverification authentication checks.\n * The returned function authorizes if both checks pass, or if at least one passes\n * when the other is indeterminate. Fails if userId is missing.\n */\nconst createCheckAuthorization = (options: AuthorizationOptions): CheckAuthorizationWithCustomPermissions => {\n  return (params): boolean => {\n    if (!options.userId) {\n      return false;\n    }\n\n    const billingAuthorization = checkBillingAuthorization(params, options);\n    const orgAuthorization = checkOrgAuthorization(params, options);\n    const reverificationAuthorization = checkReverificationAuthorization(params, options);\n\n    if ([billingAuthorization || orgAuthorization, reverificationAuthorization].some(a => a === null)) {\n      return [billingAuthorization || orgAuthorization, reverificationAuthorization].some(a => a === true);\n    }\n\n    return [billingAuthorization || orgAuthorization, reverificationAuthorization].every(a => a === true);\n  };\n};\n\ntype AuthStateOptions = {\n  authObject: {\n    userId?: string | null;\n    sessionId?: string | null;\n    sessionStatus?: SessionStatusClaim | null;\n    sessionClaims?: JwtPayload | null;\n    actor?: ActClaim | null;\n    orgId?: string | null;\n    orgRole?: OrganizationCustomRoleKey | null;\n    orgSlug?: string | null;\n    orgPermissions?: OrganizationCustomPermissionKey[] | null;\n    getToken: GetToken;\n    signOut: SignOut;\n    has: (params: Parameters<CheckAuthorizationWithCustomPermissions>[0]) => boolean;\n  };\n  options: PendingSessionOptions;\n};\n\n/**\n * Shared utility function that centralizes auth state resolution logic,\n * preventing duplication across different packages.\n * @internal\n */\nconst resolveAuthState = ({\n  authObject: {\n    sessionId,\n    sessionStatus,\n    userId,\n    actor,\n    orgId,\n    orgRole,\n    orgSlug,\n    signOut,\n    getToken,\n    has,\n    sessionClaims,\n  },\n  options: { treatPendingAsSignedOut = true },\n}: AuthStateOptions): UseAuthReturn | undefined => {\n  if (sessionId === undefined && userId === undefined) {\n    return {\n      isLoaded: false,\n      isSignedIn: undefined,\n      sessionId,\n      sessionClaims: undefined,\n      userId,\n      actor: undefined,\n      orgId: undefined,\n      orgRole: undefined,\n      orgSlug: undefined,\n      has: undefined,\n      signOut,\n      getToken,\n    } as const;\n  }\n\n  if (sessionId === null && userId === null) {\n    return {\n      isLoaded: true,\n      isSignedIn: false,\n      sessionId,\n      userId,\n      sessionClaims: null,\n      actor: null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has: () => false,\n      signOut,\n      getToken,\n    } as const;\n  }\n\n  if (treatPendingAsSignedOut && sessionStatus === 'pending') {\n    return {\n      isLoaded: true,\n      isSignedIn: false,\n      sessionId: null,\n      userId: null,\n      sessionClaims: null,\n      actor: null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has: () => false,\n      signOut,\n      getToken,\n    } as const;\n  }\n\n  if (!!sessionId && !!sessionClaims && !!userId && !!orgId && !!orgRole) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      sessionClaims,\n      userId,\n      actor: actor || null,\n      orgId,\n      orgRole,\n      orgSlug: orgSlug || null,\n      has,\n      signOut,\n      getToken,\n    } as const;\n  }\n\n  if (!!sessionId && !!sessionClaims && !!userId && !orgId) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      sessionClaims,\n      userId,\n      actor: actor || null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has,\n      signOut,\n      getToken,\n    } as const;\n  }\n};\n\nexport { createCheckAuthorization, validateReverificationConfig, resolveAuthState, splitByScope };\n", "import {\n  createCheckAuthorization,\n  resolveAuthState,\n  splitByScope,\n  validateReverificationConfig\n} from \"./chunk-3CN5LOSN.mjs\";\nimport \"./chunk-7ELT755Q.mjs\";\nexport {\n  createCheckAuthorization,\n  resolveAuthState,\n  splitByScope,\n  validateReverificationConfig\n};\n//# sourceMappingURL=authorization.mjs.map", "import type {\n  JwtPayload,\n  OrganizationCustomPermissionKey,\n  OrganizationCustomRoleKey,\n  SharedSignedInAuthObjectProperties,\n} from '@clerk/types';\n\nimport { splitByScope } from './authorization';\n\nexport const parsePermissions = ({ per, fpm }: { per?: string; fpm?: string }) => {\n  if (!per || !fpm) {\n    return { permissions: [], featurePermissionMap: [] };\n  }\n\n  const permissions = per.split(',').map(p => p.trim());\n\n  // TODO: make this more efficient\n  const featurePermissionMap = fpm\n    .split(',')\n    .map(permission => Number.parseInt(permission.trim(), 10))\n    .map((permission: number) =>\n      permission\n        .toString(2)\n        .padStart(permissions.length, '0')\n        .split('')\n        .map(bit => Number.parseInt(bit, 10))\n        .reverse(),\n    )\n    .filter(Boolean);\n\n  return { permissions, featurePermissionMap };\n};\n\nfunction buildOrgPermissions({\n  features,\n  permissions,\n  featurePermissionMap,\n}: {\n  features?: string[];\n  permissions?: string[];\n  featurePermissionMap?: number[][];\n}) {\n  // Early return if any required input is missing\n  if (!features || !permissions || !featurePermissionMap) {\n    return [];\n  }\n\n  const orgPermissions: string[] = [];\n\n  // Process each feature and its permissions in a single loop\n  for (let featureIndex = 0; featureIndex < features.length; featureIndex++) {\n    const feature = features[featureIndex];\n\n    if (featureIndex >= featurePermissionMap.length) {\n      continue;\n    }\n\n    const permissionBits = featurePermissionMap[featureIndex];\n    if (!permissionBits) {\n      continue;\n    }\n\n    for (let permIndex = 0; permIndex < permissionBits.length; permIndex++) {\n      if (permissionBits[permIndex] === 1) {\n        orgPermissions.push(`org:${feature}:${permissions[permIndex]}`);\n      }\n    }\n  }\n\n  return orgPermissions;\n}\n\n/**\n * @experimental\n *\n * Resolves the signed-in auth state from JWT claims.\n */\nconst __experimental_JWTPayloadToAuthObjectProperties = (claims: JwtPayload): SharedSignedInAuthObjectProperties => {\n  let orgId: string | undefined;\n  let orgRole: OrganizationCustomRoleKey | undefined;\n  let orgSlug: string | undefined;\n  let orgPermissions: OrganizationCustomPermissionKey[] | undefined;\n\n  // fva can be undefined for instances that have not opt-in\n  const factorVerificationAge = claims.fva ?? null;\n\n  // sts can be undefined for instances that have not opt-in\n  const sessionStatus = claims.sts ?? null;\n\n  switch (claims.v) {\n    case 2: {\n      if (claims.o) {\n        orgId = claims.o?.id;\n        orgSlug = claims.o?.slg;\n\n        if (claims.o?.rol) {\n          orgRole = `org:${claims.o?.rol}`;\n        }\n        const { org } = splitByScope(claims.fea);\n        const { permissions, featurePermissionMap } = parsePermissions({\n          per: claims.o?.per,\n          fpm: claims.o?.fpm,\n        });\n        orgPermissions = buildOrgPermissions({\n          features: org,\n          featurePermissionMap: featurePermissionMap,\n          permissions: permissions,\n        });\n      }\n      break;\n    }\n    default:\n      orgId = claims.org_id;\n      orgRole = claims.org_role;\n      orgSlug = claims.org_slug;\n      orgPermissions = claims.org_permissions;\n      break;\n  }\n\n  return {\n    sessionClaims: claims,\n    sessionId: claims.sid,\n    sessionStatus,\n    actor: claims.act,\n    userId: claims.sub,\n    orgId: orgId,\n    orgRole: orgRole,\n    orgSlug: orgSlug,\n    orgPermissions,\n    factorVerificationAge,\n  };\n};\n\nexport { __experimental_JWTPayloadToAuthObjectProperties };\n", "/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\nconst domainValueRegExp =\n  /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n\nconst __toString = Object.prototype.toString;\n\nconst NullObject = /* @__PURE__ */ (() => {\n  const C = function () {};\n  C.prototype = Object.create(null);\n  return C;\n})() as unknown as { new (): any };\n\n/**\n * Parse options.\n */\nexport interface ParseOptions {\n  /**\n   * Specifies a function that will be used to decode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since the value of a cookie has a limited character set (and must be a simple string), this function can be used to decode\n   * a previously-encoded cookie value into a JavaScript string.\n   *\n   * The default function is the global `decodeURIComponent`, wrapped in a `try..catch`. If an error\n   * is thrown it will return the cookie's original value. If you provide your own encode/decode\n   * scheme you must ensure errors are appropriately handled.\n   *\n   * @default decode\n   */\n  decode?: (str: string) => string | undefined;\n}\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */\nexport function parse(\n  str: string,\n  options?: ParseOptions,\n): Record<string, string | undefined> {\n  const obj: Record<string, string | undefined> = new NullObject();\n  const len = str.length;\n  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n  if (len < 2) return obj;\n\n  const dec = options?.decode || decode;\n  let index = 0;\n\n  do {\n    const eqIdx = str.indexOf(\"=\", index);\n    if (eqIdx === -1) break; // No more cookie pairs.\n\n    const colonIdx = str.indexOf(\";\", index);\n    const endIdx = colonIdx === -1 ? len : colonIdx;\n\n    if (eqIdx > endIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n      continue;\n    }\n\n    const keyStartIdx = startIndex(str, index, eqIdx);\n    const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n    const key = str.slice(keyStartIdx, keyEndIdx);\n\n    // only assign once\n    if (obj[key] === undefined) {\n      let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n      let valEndIdx = endIndex(str, endIdx, valStartIdx);\n\n      const value = dec(str.slice(valStartIdx, valEndIdx));\n      obj[key] = value;\n    }\n\n    index = endIdx + 1;\n  } while (index < len);\n\n  return obj;\n}\n\nfunction startIndex(str: string, index: number, max: number) {\n  do {\n    const code = str.charCodeAt(index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index;\n  } while (++index < max);\n  return max;\n}\n\nfunction endIndex(str: string, index: number, min: number) {\n  while (index > min) {\n    const code = str.charCodeAt(--index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index + 1;\n  }\n  return min;\n}\n\n/**\n * Serialize options.\n */\nexport interface SerializeOptions {\n  /**\n   * Specifies a function that will be used to encode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since value of a cookie has a limited character set (and must be a simple string), this function can be used to encode\n   * a value into a string suited for a cookie's value, and should mirror `decode` when parsing.\n   *\n   * @default encodeURIComponent\n   */\n  encode?: (str: string) => string;\n  /**\n   * Specifies the `number` (in seconds) to be the value for the [`Max-Age` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.2).\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  maxAge?: number;\n  /**\n   * Specifies the `Date` object to be the value for the [`Expires` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.1).\n   * When no expiration is set clients consider this a \"non-persistent cookie\" and delete it the current session is over.\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  expires?: Date;\n  /**\n   * Specifies the value for the [`Domain` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.3).\n   * When no domain is set clients consider the cookie to apply to the current domain only.\n   */\n  domain?: string;\n  /**\n   * Specifies the value for the [`Path` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.4).\n   * When no path is set, the path is considered the [\"default path\"](https://tools.ietf.org/html/rfc6265#section-5.1.4).\n   */\n  path?: string;\n  /**\n   * Enables the [`HttpOnly` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.6).\n   * When enabled, clients will not allow client-side JavaScript to see the cookie in `document.cookie`.\n   */\n  httpOnly?: boolean;\n  /**\n   * Enables the [`Secure` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.5).\n   * When enabled, clients will only send the cookie back if the browser has a HTTPS connection.\n   */\n  secure?: boolean;\n  /**\n   * Enables the [`Partitioned` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-cutler-httpbis-partitioned-cookies/).\n   * When enabled, clients will only send the cookie back when the current domain _and_ top-level domain matches.\n   *\n   * This is an attribute that has not yet been fully standardized, and may change in the future.\n   * This also means clients may ignore this attribute until they understand it. More information\n   * about can be found in [the proposal](https://github.com/privacycg/CHIPS).\n   */\n  partitioned?: boolean;\n  /**\n   * Specifies the value for the [`Priority` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   *\n   * - `'low'` will set the `Priority` attribute to `Low`.\n   * - `'medium'` will set the `Priority` attribute to `Medium`, the default priority when not set.\n   * - `'high'` will set the `Priority` attribute to `High`.\n   *\n   * More information about priority levels can be found in [the specification](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   */\n  priority?: \"low\" | \"medium\" | \"high\";\n  /**\n   * Specifies the value for the [`SameSite` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   *\n   * - `true` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   * - `'lax'` will set the `SameSite` attribute to `Lax` for lax same site enforcement.\n   * - `'none'` will set the `SameSite` attribute to `None` for an explicit cross-site cookie.\n   * - `'strict'` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   *\n   * More information about enforcement levels can be found in [the specification](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   */\n  sameSite?: boolean | \"lax\" | \"strict\" | \"none\";\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */\nexport function serialize(\n  name: string,\n  val: string,\n  options?: SerializeOptions,\n): string {\n  const enc = options?.encode || encodeURIComponent;\n\n  if (!cookieNameRegExp.test(name)) {\n    throw new TypeError(`argument name is invalid: ${name}`);\n  }\n\n  const value = enc(val);\n\n  if (!cookieValueRegExp.test(value)) {\n    throw new TypeError(`argument val is invalid: ${val}`);\n  }\n\n  let str = name + \"=\" + value;\n  if (!options) return str;\n\n  if (options.maxAge !== undefined) {\n    if (!Number.isInteger(options.maxAge)) {\n      throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n    }\n\n    str += \"; Max-Age=\" + options.maxAge;\n  }\n\n  if (options.domain) {\n    if (!domainValueRegExp.test(options.domain)) {\n      throw new TypeError(`option domain is invalid: ${options.domain}`);\n    }\n\n    str += \"; Domain=\" + options.domain;\n  }\n\n  if (options.path) {\n    if (!pathValueRegExp.test(options.path)) {\n      throw new TypeError(`option path is invalid: ${options.path}`);\n    }\n\n    str += \"; Path=\" + options.path;\n  }\n\n  if (options.expires) {\n    if (\n      !isDate(options.expires) ||\n      !Number.isFinite(options.expires.valueOf())\n    ) {\n      throw new TypeError(`option expires is invalid: ${options.expires}`);\n    }\n\n    str += \"; Expires=\" + options.expires.toUTCString();\n  }\n\n  if (options.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n\n  if (options.secure) {\n    str += \"; Secure\";\n  }\n\n  if (options.partitioned) {\n    str += \"; Partitioned\";\n  }\n\n  if (options.priority) {\n    const priority =\n      typeof options.priority === \"string\"\n        ? options.priority.toLowerCase()\n        : undefined;\n    switch (priority) {\n      case \"low\":\n        str += \"; Priority=Low\";\n        break;\n      case \"medium\":\n        str += \"; Priority=Medium\";\n        break;\n      case \"high\":\n        str += \"; Priority=High\";\n        break;\n      default:\n        throw new TypeError(`option priority is invalid: ${options.priority}`);\n    }\n  }\n\n  if (options.sameSite) {\n    const sameSite =\n      typeof options.sameSite === \"string\"\n        ? options.sameSite.toLowerCase()\n        : options.sameSite;\n    switch (sameSite) {\n      case true:\n      case \"strict\":\n        str += \"; SameSite=Strict\";\n        break;\n      case \"lax\":\n        str += \"; SameSite=Lax\";\n        break;\n      case \"none\":\n        str += \"; SameSite=None\";\n        break;\n      default:\n        throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */\nfunction decode(str: string): string {\n  if (str.indexOf(\"%\") === -1) return str;\n\n  try {\n    return decodeURIComponent(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n/**\n * Determine if value is a Date.\n */\nfunction isDate(val: any): val is Date {\n  return __toString.call(val) === \"[object Date]\";\n}\n", "/* eslint-disable no-redeclare, curly */\n\nfunction _(r) {\n  for (var n = [], e = 0; e < r.length; ) {\n    var a = r[e];\n    if (a === '*' || a === '+' || a === '?') {\n      n.push({\n        type: 'MODIFIER',\n        index: e,\n        value: r[e++],\n      });\n      continue;\n    }\n    if (a === '\\\\') {\n      n.push({\n        type: 'ESCAPED_CHAR',\n        index: e++,\n        value: r[e++],\n      });\n      continue;\n    }\n    if (a === '{') {\n      n.push({\n        type: 'OPEN',\n        index: e,\n        value: r[e++],\n      });\n      continue;\n    }\n    if (a === '}') {\n      n.push({\n        type: 'CLOSE',\n        index: e,\n        value: r[e++],\n      });\n      continue;\n    }\n    if (a === ':') {\n      for (var u = '', t = e + 1; t < r.length; ) {\n        var c = r.charCodeAt(t);\n        if ((c >= 48 && c <= 57) || (c >= 65 && c <= 90) || (c >= 97 && c <= 122) || c === 95) {\n          u += r[t++];\n          continue;\n        }\n        break;\n      }\n      if (!u) throw new TypeError('Missing parameter name at '.concat(e));\n      n.push({\n        type: 'NAME',\n        index: e,\n        value: u,\n      }),\n        (e = t);\n      continue;\n    }\n    if (a === '(') {\n      var o = 1,\n        m = '',\n        t = e + 1;\n      if (r[t] === '?') throw new TypeError('Pattern cannot start with \"?\" at '.concat(t));\n      for (; t < r.length; ) {\n        if (r[t] === '\\\\') {\n          m += r[t++] + r[t++];\n          continue;\n        }\n        if (r[t] === ')') {\n          if ((o--, o === 0)) {\n            t++;\n            break;\n          }\n        } else if (r[t] === '(' && (o++, r[t + 1] !== '?'))\n          throw new TypeError('Capturing groups are not allowed at '.concat(t));\n        m += r[t++];\n      }\n      if (o) throw new TypeError('Unbalanced pattern at '.concat(e));\n      if (!m) throw new TypeError('Missing pattern at '.concat(e));\n      n.push({\n        type: 'PATTERN',\n        index: e,\n        value: m,\n      }),\n        (e = t);\n      continue;\n    }\n    n.push({\n      type: 'CHAR',\n      index: e,\n      value: r[e++],\n    });\n  }\n  return (\n    n.push({\n      type: 'END',\n      index: e,\n      value: '',\n    }),\n    n\n  );\n}\n\nfunction F(r, n) {\n  n === void 0 && (n = {});\n  for (\n    var e = _(r),\n      a = n.prefixes,\n      u = a === void 0 ? './' : a,\n      t = n.delimiter,\n      c = t === void 0 ? '/#?' : t,\n      o = [],\n      m = 0,\n      h = 0,\n      p = '',\n      f = function (l) {\n        if (h < e.length && e[h].type === l) return e[h++].value;\n      },\n      w = function (l) {\n        var v = f(l);\n        if (v !== void 0) return v;\n        var E = e[h],\n          N = E.type,\n          S = E.index;\n        throw new TypeError('Unexpected '.concat(N, ' at ').concat(S, ', expected ').concat(l));\n      },\n      d = function () {\n        for (var l = '', v; (v = f('CHAR') || f('ESCAPED_CHAR')); ) l += v;\n        return l;\n      },\n      M = function (l) {\n        for (var v = 0, E = c; v < E.length; v++) {\n          var N = E[v];\n          if (l.indexOf(N) > -1) return !0;\n        }\n        return !1;\n      },\n      A = function (l) {\n        var v = o[o.length - 1],\n          E = l || (v && typeof v == 'string' ? v : '');\n        if (v && !E)\n          throw new TypeError('Must have text between two parameters, missing text after \"'.concat(v.name, '\"'));\n        return !E || M(E) ? '[^'.concat(s(c), ']+?') : '(?:(?!'.concat(s(E), ')[^').concat(s(c), '])+?');\n      };\n    h < e.length;\n\n  ) {\n    var T = f('CHAR'),\n      x = f('NAME'),\n      C = f('PATTERN');\n    if (x || C) {\n      var g = T || '';\n      u.indexOf(g) === -1 && ((p += g), (g = '')),\n        p && (o.push(p), (p = '')),\n        o.push({\n          name: x || m++,\n          prefix: g,\n          suffix: '',\n          pattern: C || A(g),\n          modifier: f('MODIFIER') || '',\n        });\n      continue;\n    }\n    var i = T || f('ESCAPED_CHAR');\n    if (i) {\n      p += i;\n      continue;\n    }\n    p && (o.push(p), (p = ''));\n    var R = f('OPEN');\n    if (R) {\n      var g = d(),\n        y = f('NAME') || '',\n        O = f('PATTERN') || '',\n        b = d();\n      w('CLOSE'),\n        o.push({\n          name: y || (O ? m++ : ''),\n          pattern: y && !O ? A(g) : O,\n          prefix: g,\n          suffix: b,\n          modifier: f('MODIFIER') || '',\n        });\n      continue;\n    }\n    w('END');\n  }\n  return o;\n}\n\nfunction H(r, n) {\n  var e = [],\n    a = P(r, e, n);\n  return I(a, e, n);\n}\n\nfunction I(r, n, e) {\n  e === void 0 && (e = {});\n  var a = e.decode,\n    u =\n      a === void 0\n        ? function (t) {\n            return t;\n          }\n        : a;\n  return function (t) {\n    var c = r.exec(t);\n    if (!c) return !1;\n    for (\n      var o = c[0],\n        m = c.index,\n        h = Object.create(null),\n        p = function (w) {\n          if (c[w] === void 0) return 'continue';\n          var d = n[w - 1];\n          d.modifier === '*' || d.modifier === '+'\n            ? (h[d.name] = c[w].split(d.prefix + d.suffix).map(function (M) {\n                return u(M, d);\n              }))\n            : (h[d.name] = u(c[w], d));\n        },\n        f = 1;\n      f < c.length;\n      f++\n    )\n      p(f);\n    return {\n      path: o,\n      index: m,\n      params: h,\n    };\n  };\n}\n\nfunction s(r) {\n  return r.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n}\n\nfunction D(r) {\n  return r && r.sensitive ? '' : 'i';\n}\n\nfunction $(r, n) {\n  if (!n) return r;\n  for (var e = /\\((?:\\?<(.*?)>)?(?!\\?)/g, a = 0, u = e.exec(r.source); u; )\n    n.push({\n      name: u[1] || a++,\n      prefix: '',\n      suffix: '',\n      modifier: '',\n      pattern: '',\n    }),\n      (u = e.exec(r.source));\n  return r;\n}\n\nfunction W(r, n, e) {\n  var a = r.map(function (u) {\n    return P(u, n, e).source;\n  });\n  return new RegExp('(?:'.concat(a.join('|'), ')'), D(e));\n}\n\nfunction L(r, n, e) {\n  return U(F(r, e), n, e);\n}\n\nfunction U(r, n, e) {\n  e === void 0 && (e = {});\n  for (\n    var a = e.strict,\n      u = a === void 0 ? !1 : a,\n      t = e.start,\n      c = t === void 0 ? !0 : t,\n      o = e.end,\n      m = o === void 0 ? !0 : o,\n      h = e.encode,\n      p =\n        h === void 0\n          ? function (v) {\n              return v;\n            }\n          : h,\n      f = e.delimiter,\n      w = f === void 0 ? '/#?' : f,\n      d = e.endsWith,\n      M = d === void 0 ? '' : d,\n      A = '['.concat(s(M), ']|$'),\n      T = '['.concat(s(w), ']'),\n      x = c ? '^' : '',\n      C = 0,\n      g = r;\n    C < g.length;\n    C++\n  ) {\n    var i = g[C];\n    if (typeof i == 'string') x += s(p(i));\n    else {\n      var R = s(p(i.prefix)),\n        y = s(p(i.suffix));\n      if (i.pattern)\n        if ((n && n.push(i), R || y))\n          if (i.modifier === '+' || i.modifier === '*') {\n            var O = i.modifier === '*' ? '?' : '';\n            x += '(?:'\n              .concat(R, '((?:')\n              .concat(i.pattern, ')(?:')\n              .concat(y)\n              .concat(R, '(?:')\n              .concat(i.pattern, '))*)')\n              .concat(y, ')')\n              .concat(O);\n          } else x += '(?:'.concat(R, '(').concat(i.pattern, ')').concat(y, ')').concat(i.modifier);\n        else {\n          if (i.modifier === '+' || i.modifier === '*')\n            throw new TypeError('Can not repeat \"'.concat(i.name, '\" without a prefix and suffix'));\n          x += '('.concat(i.pattern, ')').concat(i.modifier);\n        }\n      else x += '(?:'.concat(R).concat(y, ')').concat(i.modifier);\n    }\n  }\n  if (m) u || (x += ''.concat(T, '?')), (x += e.endsWith ? '(?='.concat(A, ')') : '$');\n  else {\n    var b = r[r.length - 1],\n      l = typeof b == 'string' ? T.indexOf(b[b.length - 1]) > -1 : b === void 0;\n    u || (x += '(?:'.concat(T, '(?=').concat(A, '))?')), l || (x += '(?='.concat(T, '|').concat(A, ')'));\n  }\n  return new RegExp(x, D(e));\n}\n\nfunction P(r, n, e) {\n  return r instanceof RegExp ? $(r, n) : Array.isArray(r) ? W(r, n, e) : L(r, n, e);\n}\nexport { H as match, P as pathToRegexp };\n", "import type {\n  Match,\n  MatchFunction,\n  ParseOptions,\n  Path,\n  RegexpToFunctionOptions,\n  TokensToRegexpOptions,\n} from './compiled/path-to-regexp';\nimport { match as matchBase, pathToRegexp as pathToRegexpBase } from './compiled/path-to-regexp';\n\nexport const pathToRegexp = (path: string) => {\n  try {\n    // @ts-ignore no types exists for the pre-compiled package\n    return pathToRegexpBase(path);\n  } catch (e: any) {\n    throw new Error(\n      `Invalid path: ${path}.\\nConsult the documentation of path-to-regexp here: https://github.com/pillarjs/path-to-regexp/tree/6.x\\n${e.message}`,\n    );\n  }\n};\n\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n): MatchFunction<P> {\n  try {\n    // @ts-ignore no types exists for the pre-compiled package\n    return matchBase(str, options);\n  } catch (e: any) {\n    throw new Error(\n      `Invalid path and options: Consult the documentation of path-to-regexp here: https://github.com/pillarjs/path-to-regexp/tree/6.x\\n${e.message}`,\n    );\n  }\n}\n\nexport { type Match, type MatchFunction };\n", "import {\n  match,\n  pathToRegexp\n} from \"./chunk-JJHTUJGL.mjs\";\nimport \"./chunk-7ELT755Q.mjs\";\nexport {\n  match,\n  pathToRegexp\n};\n//# sourceMappingURL=pathToRegexp.mjs.map", "import {\n  isReverificationHint,\n  reverificationError,\n  reverificationErrorResponse\n} from \"./chunk-43A5F2IE.mjs\";\nimport \"./chunk-7ELT755Q.mjs\";\nexport {\n  isReverificationHint,\n  reverificationError,\n  reverificationErrorResponse\n};\n//# sourceMappingURL=authorization-errors.mjs.map", "export const API_URL = 'https://api.clerk.com';\nexport const API_VERSION = 'v1';\n\nexport const USER_AGENT = `${PACKAGE_NAME}@${PACKAGE_VERSION}`;\nexport const MAX_CACHE_LAST_UPDATED_AT_SECONDS = 5 * 60;\nexport const SUPPORTED_BAPI_VERSION = '2025-04-10';\n\nconst Attributes = {\n  AuthToken: '__clerkAuthToken',\n  AuthSignature: '__clerkAuthSignature',\n  AuthStatus: '__clerkAuthStatus',\n  AuthReason: '__clerkAuthReason',\n  AuthMessage: '__clerkAuthMessage',\n  ClerkUrl: '__clerkUrl',\n} as const;\n\nconst Cookies = {\n  Session: '__session',\n  Refresh: '__refresh',\n  ClientUat: '__client_uat',\n  Handshake: '__clerk_handshake',\n  DevBrowser: '__clerk_db_jwt',\n  RedirectCount: '__clerk_redirect_count',\n  HandshakeNonce: '__clerk_handshake_nonce',\n} as const;\n\nconst QueryParameters = {\n  ClerkSynced: '__clerk_synced',\n  SuffixedCookies: 'suffixed_cookies',\n  ClerkRedirectUrl: '__clerk_redirect_url',\n  // use the reference to Cookies to indicate that it's the same value\n  DevBrowser: Cookies.DevBrowser,\n  Handshake: Cookies.Handshake,\n  HandshakeHelp: '__clerk_help',\n  LegacyDevBrowser: '__dev_session',\n  HandshakeReason: '__clerk_hs_reason',\n  HandshakeNonce: Cookies.HandshakeNonce,\n  HandshakeFormat: 'format',\n} as const;\n\nconst Headers = {\n  Accept: 'accept',\n  AuthMessage: 'x-clerk-auth-message',\n  Authorization: 'authorization',\n  AuthReason: 'x-clerk-auth-reason',\n  AuthSignature: 'x-clerk-auth-signature',\n  AuthStatus: 'x-clerk-auth-status',\n  AuthToken: 'x-clerk-auth-token',\n  CacheControl: 'cache-control',\n  ClerkRedirectTo: 'x-clerk-redirect-to',\n  ClerkRequestData: 'x-clerk-request-data',\n  ClerkUrl: 'x-clerk-clerk-url',\n  CloudFrontForwardedProto: 'cloudfront-forwarded-proto',\n  ContentType: 'content-type',\n  ContentSecurityPolicy: 'content-security-policy',\n  ContentSecurityPolicyReportOnly: 'content-security-policy-report-only',\n  EnableDebug: 'x-clerk-debug',\n  ForwardedHost: 'x-forwarded-host',\n  ForwardedPort: 'x-forwarded-port',\n  ForwardedProto: 'x-forwarded-proto',\n  Host: 'host',\n  Location: 'location',\n  Nonce: 'x-nonce',\n  Origin: 'origin',\n  Referrer: 'referer',\n  SecFetchDest: 'sec-fetch-dest',\n  SecFetchSite: 'sec-fetch-site',\n  UserAgent: 'user-agent',\n  ReportingEndpoints: 'reporting-endpoints',\n} as const;\n\nconst ContentTypes = {\n  Json: 'application/json',\n} as const;\n\n/**\n * @internal\n */\nexport const constants = {\n  Attributes,\n  Cookies,\n  Headers,\n  ContentTypes,\n  QueryParameters,\n} as const;\n\nexport type Constants = typeof constants;\n", "import { buildAccountsBaseUrl } from '@clerk/shared/buildAccountsBaseUrl';\nimport type { SessionStatusClaim } from '@clerk/types';\n\nimport { constants } from './constants';\nimport { errorThrower, parsePublishableKey } from './util/shared';\n\nconst buildUrl = (\n  _baseUrl: string | URL,\n  _targetUrl: string | URL,\n  _returnBackUrl?: string | URL | null,\n  _devBrowserToken?: string | null,\n) => {\n  if (_baseUrl === '') {\n    return legacyBuildUrl(_targetUrl.toString(), _returnBackUrl?.toString());\n  }\n\n  const baseUrl = new URL(_baseUrl);\n  const returnBackUrl = _returnBackUrl ? new URL(_returnBackUrl, baseUrl) : undefined;\n  const res = new URL(_targetUrl, baseUrl);\n  const isCrossOriginRedirect = `${baseUrl.hostname}:${baseUrl.port}` !== `${res.hostname}:${res.port}`;\n\n  if (returnBackUrl) {\n    if (isCrossOriginRedirect) {\n      returnBackUrl.searchParams.delete(constants.QueryParameters.ClerkSynced);\n    }\n\n    res.searchParams.set('redirect_url', returnBackUrl.toString());\n  }\n  // For cross-origin redirects, we need to pass the dev browser token for URL session syncing\n  if (isCrossOriginRedirect && _devBrowserToken) {\n    res.searchParams.set(constants.QueryParameters.DevBrowser, _devBrowserToken);\n  }\n  return res.toString();\n};\n\n/**\n * In v5, we deprecated the top-level redirectToSignIn and redirectToSignUp functions\n * in favor of the new auth().redirectToSignIn helpers\n * In order to allow for a smooth transition, we need to support the legacy redirectToSignIn for now\n * as we will remove it in v6.\n * In order to make sure that the legacy function works as expected, we will use legacyBuildUrl\n * to build the url if baseUrl is not provided (which is the case for legacy redirectToSignIn)\n * This function can be safely removed when we remove the legacy redirectToSignIn function\n */\nconst legacyBuildUrl = (targetUrl: string, redirectUrl?: string) => {\n  let url;\n  if (!targetUrl.startsWith('http')) {\n    if (!redirectUrl || !redirectUrl.startsWith('http')) {\n      throw new Error('destination url or return back url should be an absolute path url!');\n    }\n\n    const baseURL = new URL(redirectUrl);\n    url = new URL(targetUrl, baseURL.origin);\n  } else {\n    url = new URL(targetUrl);\n  }\n\n  if (redirectUrl) {\n    url.searchParams.set('redirect_url', redirectUrl);\n  }\n\n  return url.toString();\n};\n\ntype RedirectAdapter<RedirectReturn> = (url: string) => RedirectReturn;\ntype RedirectToParams = { returnBackUrl?: string | URL | null };\nexport type RedirectFun<ReturnType> = (params?: RedirectToParams) => ReturnType;\n\n/**\n * @internal\n */\ntype CreateRedirect = <ReturnType>(params: {\n  publishableKey: string;\n  devBrowserToken?: string;\n  redirectAdapter: RedirectAdapter<ReturnType>;\n  baseUrl: URL | string;\n  signInUrl?: URL | string;\n  signUpUrl?: URL | string;\n  sessionStatus?: SessionStatusClaim | null;\n}) => {\n  redirectToSignIn: RedirectFun<ReturnType>;\n  redirectToSignUp: RedirectFun<ReturnType>;\n};\n\nexport const createRedirect: CreateRedirect = params => {\n  const { publishableKey, redirectAdapter, signInUrl, signUpUrl, baseUrl, sessionStatus } = params;\n  const parsedPublishableKey = parsePublishableKey(publishableKey);\n  const frontendApi = parsedPublishableKey?.frontendApi;\n  const isDevelopment = parsedPublishableKey?.instanceType === 'development';\n  const accountsBaseUrl = buildAccountsBaseUrl(frontendApi);\n  const hasPendingStatus = sessionStatus === 'pending';\n\n  const redirectToTasks = (url: string | URL, { returnBackUrl }: RedirectToParams) => {\n    return redirectAdapter(\n      buildUrl(baseUrl, `${url}/tasks`, returnBackUrl, isDevelopment ? params.devBrowserToken : null),\n    );\n  };\n\n  const redirectToSignUp = ({ returnBackUrl }: RedirectToParams = {}) => {\n    if (!signUpUrl && !accountsBaseUrl) {\n      errorThrower.throwMissingPublishableKeyError();\n    }\n\n    const accountsSignUpUrl = `${accountsBaseUrl}/sign-up`;\n\n    // Allows redirection to SignInOrUp path\n    function buildSignUpUrl(signIn: string | URL | undefined) {\n      if (!signIn) {\n        return;\n      }\n      const url = new URL(signIn, baseUrl);\n      url.pathname = `${url.pathname}/create`;\n      return url.toString();\n    }\n\n    const targetUrl = signUpUrl || buildSignUpUrl(signInUrl) || accountsSignUpUrl;\n\n    if (hasPendingStatus) {\n      return redirectToTasks(targetUrl, { returnBackUrl });\n    }\n\n    return redirectAdapter(buildUrl(baseUrl, targetUrl, returnBackUrl, isDevelopment ? params.devBrowserToken : null));\n  };\n\n  const redirectToSignIn = ({ returnBackUrl }: RedirectToParams = {}) => {\n    if (!signInUrl && !accountsBaseUrl) {\n      errorThrower.throwMissingPublishableKeyError();\n    }\n\n    const accountsSignInUrl = `${accountsBaseUrl}/sign-in`;\n    const targetUrl = signInUrl || accountsSignInUrl;\n\n    if (hasPendingStatus) {\n      return redirectToTasks(targetUrl, { returnBackUrl });\n    }\n\n    return redirectAdapter(buildUrl(baseUrl, targetUrl, returnBackUrl, isDevelopment ? params.devBrowserToken : null));\n  };\n\n  return { redirectToSignUp, redirectToSignIn };\n};\n", "export function mergePreDefinedOptions<T extends Record<string, any>>(preDefinedOptions: T, options: Partial<T>): T {\n  return Object.keys(preDefinedOptions).reduce(\n    (obj: T, key: string) => {\n      return { ...obj, [key]: options[key] || obj[key] };\n    },\n    { ...preDefinedOptions },\n  );\n}\n", "import { parsePublishableKey } from './shared';\n\nexport function assertValidSecretKey(val: unknown): asserts val is string {\n  if (!val || typeof val !== 'string') {\n    throw Error('Missing Clerk Secret Key. Go to https://dashboard.clerk.com and get your key for your instance.');\n  }\n\n  //TODO: Check if the key is invalid and throw error\n}\n\nexport function assertValidPublishableKey(val: unknown): asserts val is string {\n  parsePublishableKey(val as string | undefined, { fatal: true });\n}\n", "import { buildAccountsBaseUrl } from '@clerk/shared/buildAccountsBaseUrl';\nimport { isCurrentDevAccountPortalOrigin, isLegacyDevAccountPortalOrigin } from '@clerk/shared/url';\nimport type { Jwt } from '@clerk/types';\n\nimport { constants } from '../constants';\nimport { decodeJwt } from '../jwt/verifyJwt';\nimport { runtime } from '../runtime';\nimport { assertValidPublishableKey } from '../util/optionsAssertions';\nimport { getCookieSuffix, getSuffixedCookieName, parsePublishableKey } from '../util/shared';\nimport type { ClerkRequest } from './clerkRequest';\nimport { TokenType } from './tokenTypes';\nimport type { AuthenticateRequestOptions } from './types';\n\ninterface AuthenticateContext extends AuthenticateRequestOptions {\n  // header-based values\n  accept: string | undefined;\n  forwardedHost: string | undefined;\n  forwardedProto: string | undefined;\n  host: string | undefined;\n  origin: string | undefined;\n  referrer: string | undefined;\n  secFetchDest: string | undefined;\n  tokenInHeader: string | undefined;\n  userAgent: string | undefined;\n\n  // cookie-based values\n  clientUat: number;\n  refreshTokenInCookie: string | undefined;\n  sessionTokenInCookie: string | undefined;\n\n  // handshake-related values\n  devBrowserToken: string | undefined;\n  handshakeNonce: string | undefined;\n  handshakeRedirectLoopCounter: number;\n  handshakeToken: string | undefined;\n\n  // url derived from headers\n  clerkUrl: URL;\n  // enforce existence of the following props\n  frontendApi: string;\n  instanceType: string;\n  publishableKey: string;\n}\n\n/**\n * All data required to authenticate a request.\n * This is the data we use to decide whether a request\n * is in a signed in or signed out state or if we need\n * to perform a handshake.\n */\nclass AuthenticateContext implements AuthenticateContext {\n  /**\n   * The original Clerk frontend API URL, extracted from publishable key before proxy URL override.\n   * Used for backend operations like token validation and issuer checking.\n   */\n  private originalFrontendApi: string = '';\n\n  /**\n   * Retrieves the session token from either the cookie or the header.\n   *\n   * @returns {string | undefined} The session token if available, otherwise undefined.\n   */\n  public get sessionToken(): string | undefined {\n    return this.sessionTokenInCookie || this.tokenInHeader;\n  }\n\n  public constructor(\n    private cookieSuffix: string,\n    private clerkRequest: ClerkRequest,\n    options: AuthenticateRequestOptions,\n  ) {\n    if (options.acceptsToken === TokenType.M2MToken || options.acceptsToken === TokenType.ApiKey) {\n      // For non-session tokens, we only want to set the header values.\n      this.initHeaderValues();\n    } else {\n      // Even though the options are assigned to this later in this function\n      // we set the publishableKey here because it is being used in cookies/headers/handshake-values\n      // as part of getMultipleAppsCookie.\n      this.initPublishableKeyValues(options);\n      this.initHeaderValues();\n      // initCookieValues should be used before initHandshakeValues because it depends on suffixedCookies\n      this.initCookieValues();\n      this.initHandshakeValues();\n    }\n\n    Object.assign(this, options);\n    this.clerkUrl = this.clerkRequest.clerkUrl;\n  }\n\n  public usesSuffixedCookies(): boolean {\n    const suffixedClientUat = this.getSuffixedCookie(constants.Cookies.ClientUat);\n    const clientUat = this.getCookie(constants.Cookies.ClientUat);\n    const suffixedSession = this.getSuffixedCookie(constants.Cookies.Session) || '';\n    const session = this.getCookie(constants.Cookies.Session) || '';\n\n    // In the case of malformed session cookies (eg missing the iss claim), we should\n    // use the un-suffixed cookies to return signed-out state instead of triggering\n    // handshake\n    if (session && !this.tokenHasIssuer(session)) {\n      return false;\n    }\n\n    // If there's a token in un-suffixed, and it doesn't belong to this\n    // instance, then we must trust suffixed\n    if (session && !this.tokenBelongsToInstance(session)) {\n      return true;\n    }\n\n    // If there are no suffixed cookies use un-suffixed\n    if (!suffixedClientUat && !suffixedSession) {\n      return false;\n    }\n\n    const { data: sessionData } = decodeJwt(session);\n    const sessionIat = sessionData?.payload.iat || 0;\n    const { data: suffixedSessionData } = decodeJwt(suffixedSession);\n    const suffixedSessionIat = suffixedSessionData?.payload.iat || 0;\n\n    // Both indicate signed in, but un-suffixed is newer\n    // Trust un-suffixed because it's newer\n    if (suffixedClientUat !== '0' && clientUat !== '0' && sessionIat > suffixedSessionIat) {\n      return false;\n    }\n\n    // Suffixed indicates signed out, but un-suffixed indicates signed in\n    // Trust un-suffixed because it gets set with both new and old clerk.js,\n    // so we can assume it's newer\n    if (suffixedClientUat === '0' && clientUat !== '0') {\n      return false;\n    }\n\n    // Suffixed indicates signed in, un-suffixed indicates signed out\n    // This is the tricky one\n\n    // In production, suffixed_uat should be set reliably, since it's\n    // set by FAPI and not clerk.js. So in the scenario where a developer\n    // downgrades, the state will look like this:\n    // - un-suffixed session cookie: empty\n    // - un-suffixed uat: 0\n    // - suffixed session cookie: (possibly filled, possibly empty)\n    // - suffixed uat: 0\n\n    // Our SDK honors client_uat over the session cookie, so we don't\n    // need a special case for production. We can rely on suffixed,\n    // and the fact that the suffixed uat is set properly means and\n    // suffixed session cookie will be ignored.\n\n    // The important thing to make sure we have a test that confirms\n    // the user ends up as signed out in this scenario, and the suffixed\n    // session cookie is ignored\n\n    // In development, suffixed_uat is not set reliably, since it's done\n    // by clerk.js. If the developer downgrades to a pinned version of\n    // clerk.js, the suffixed uat will no longer be updated\n\n    // The best we can do is look to see if the suffixed token is expired.\n    // This means that, if a developer downgrades, and then immediately\n    // signs out, all in the span of 1 minute, then they will inadvertently\n    // remain signed in for the rest of that minute. This is a known\n    // limitation of the strategy but seems highly unlikely.\n    if (this.instanceType !== 'production') {\n      const isSuffixedSessionExpired = this.sessionExpired(suffixedSessionData);\n      if (suffixedClientUat !== '0' && clientUat === '0' && isSuffixedSessionExpired) {\n        return false;\n      }\n    }\n\n    // If a suffixed session cookie exists but the corresponding client_uat cookie is missing, fallback to using\n    // unsuffixed cookies.\n    // This handles the scenario where an app has been deployed using an SDK version that supports suffixed\n    // cookies, but FAPI for its Clerk instance has the feature disabled (eg: if we need to temporarily disable the feature).\n    if (!suffixedClientUat && suffixedSession) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Determines if the request came from a different origin based on the referrer header.\n   * Used for cross-origin detection in multi-domain authentication flows.\n   *\n   * @returns {boolean} True if referrer exists and is from a different origin, false otherwise.\n   */\n  public isCrossOriginReferrer(): boolean {\n    if (!this.referrer || !this.clerkUrl.origin) {\n      return false;\n    }\n\n    try {\n      const referrerOrigin = new URL(this.referrer).origin;\n      return referrerOrigin !== this.clerkUrl.origin;\n    } catch {\n      // Invalid referrer URL format\n      return false;\n    }\n  }\n\n  /**\n   * Determines if the referrer URL is from a Clerk domain (accounts portal or FAPI).\n   * This includes both development and production account portal domains, as well as FAPI domains\n   * used for redirect-based authentication flows.\n   *\n   * @returns {boolean} True if the referrer is from a Clerk accounts portal or FAPI domain, false otherwise\n   */\n  public isKnownClerkReferrer(): boolean {\n    if (!this.referrer) {\n      return false;\n    }\n\n    try {\n      const referrerOrigin = new URL(this.referrer);\n      const referrerHost = referrerOrigin.hostname;\n\n      // Check if referrer is the FAPI domain itself (redirect-based auth flows)\n      if (this.frontendApi) {\n        const fapiHost = this.frontendApi.startsWith('http') ? new URL(this.frontendApi).hostname : this.frontendApi;\n        if (referrerHost === fapiHost) {\n          return true;\n        }\n      }\n\n      // Check for development account portal patterns\n      if (isLegacyDevAccountPortalOrigin(referrerHost) || isCurrentDevAccountPortalOrigin(referrerHost)) {\n        return true;\n      }\n\n      // Check for production account portal by comparing with expected accounts URL\n      const expectedAccountsUrl = buildAccountsBaseUrl(this.frontendApi);\n      if (expectedAccountsUrl) {\n        const expectedAccountsOrigin = new URL(expectedAccountsUrl).origin;\n        if (referrerOrigin.origin === expectedAccountsOrigin) {\n          return true;\n        }\n      }\n\n      // Check for generic production accounts patterns (accounts.*)\n      if (referrerHost.startsWith('accounts.')) {\n        return true;\n      }\n\n      return false;\n    } catch {\n      // Invalid URL format\n      return false;\n    }\n  }\n\n  private initPublishableKeyValues(options: AuthenticateRequestOptions) {\n    assertValidPublishableKey(options.publishableKey);\n    this.publishableKey = options.publishableKey;\n\n    const originalPk = parsePublishableKey(this.publishableKey, {\n      fatal: true,\n      domain: options.domain,\n      isSatellite: options.isSatellite,\n    });\n    this.originalFrontendApi = originalPk.frontendApi;\n\n    const pk = parsePublishableKey(this.publishableKey, {\n      fatal: true,\n      proxyUrl: options.proxyUrl,\n      domain: options.domain,\n      isSatellite: options.isSatellite,\n    });\n    this.instanceType = pk.instanceType;\n    this.frontendApi = pk.frontendApi;\n  }\n\n  private initHeaderValues() {\n    this.tokenInHeader = this.parseAuthorizationHeader(this.getHeader(constants.Headers.Authorization));\n    this.origin = this.getHeader(constants.Headers.Origin);\n    this.host = this.getHeader(constants.Headers.Host);\n    this.forwardedHost = this.getHeader(constants.Headers.ForwardedHost);\n    this.forwardedProto =\n      this.getHeader(constants.Headers.CloudFrontForwardedProto) || this.getHeader(constants.Headers.ForwardedProto);\n    this.referrer = this.getHeader(constants.Headers.Referrer);\n    this.userAgent = this.getHeader(constants.Headers.UserAgent);\n    this.secFetchDest = this.getHeader(constants.Headers.SecFetchDest);\n    this.accept = this.getHeader(constants.Headers.Accept);\n  }\n\n  private initCookieValues() {\n    // suffixedCookies needs to be set first because it's used in getMultipleAppsCookie\n    this.sessionTokenInCookie = this.getSuffixedOrUnSuffixedCookie(constants.Cookies.Session);\n    this.refreshTokenInCookie = this.getSuffixedCookie(constants.Cookies.Refresh);\n    this.clientUat = Number.parseInt(this.getSuffixedOrUnSuffixedCookie(constants.Cookies.ClientUat) || '') || 0;\n  }\n\n  private initHandshakeValues() {\n    this.devBrowserToken =\n      this.getQueryParam(constants.QueryParameters.DevBrowser) ||\n      this.getSuffixedOrUnSuffixedCookie(constants.Cookies.DevBrowser);\n    // Using getCookie since we don't suffix the handshake token cookie\n    this.handshakeToken =\n      this.getQueryParam(constants.QueryParameters.Handshake) || this.getCookie(constants.Cookies.Handshake);\n    this.handshakeRedirectLoopCounter = Number(this.getCookie(constants.Cookies.RedirectCount)) || 0;\n    this.handshakeNonce =\n      this.getQueryParam(constants.QueryParameters.HandshakeNonce) || this.getCookie(constants.Cookies.HandshakeNonce);\n  }\n\n  private getQueryParam(name: string) {\n    return this.clerkRequest.clerkUrl.searchParams.get(name);\n  }\n\n  private getHeader(name: string) {\n    return this.clerkRequest.headers.get(name) || undefined;\n  }\n\n  private getCookie(name: string) {\n    return this.clerkRequest.cookies.get(name) || undefined;\n  }\n\n  private getSuffixedCookie(name: string) {\n    return this.getCookie(getSuffixedCookieName(name, this.cookieSuffix)) || undefined;\n  }\n\n  private getSuffixedOrUnSuffixedCookie(cookieName: string) {\n    if (this.usesSuffixedCookies()) {\n      return this.getSuffixedCookie(cookieName);\n    }\n    return this.getCookie(cookieName);\n  }\n\n  private parseAuthorizationHeader(authorizationHeader: string | undefined | null): string | undefined {\n    if (!authorizationHeader) {\n      return undefined;\n    }\n\n    const [scheme, token] = authorizationHeader.split(' ', 2);\n\n    if (!token) {\n      // No scheme specified, treat the entire value as the token\n      return scheme;\n    }\n\n    if (scheme === 'Bearer') {\n      return token;\n    }\n\n    // Skip all other schemes\n    return undefined;\n  }\n\n  private tokenHasIssuer(token: string): boolean {\n    const { data, errors } = decodeJwt(token);\n    if (errors) {\n      return false;\n    }\n    return !!data.payload.iss;\n  }\n\n  private tokenBelongsToInstance(token: string): boolean {\n    if (!token) {\n      return false;\n    }\n\n    const { data, errors } = decodeJwt(token);\n    if (errors) {\n      return false;\n    }\n    const tokenIssuer = data.payload.iss.replace(/https?:\\/\\//gi, '');\n    // Use original frontend API for token validation since tokens are issued by the actual Clerk API, not proxy\n    return this.originalFrontendApi === tokenIssuer;\n  }\n\n  private sessionExpired(jwt: Jwt | undefined): boolean {\n    return !!jwt && jwt?.payload.exp <= (Date.now() / 1000) >> 0;\n  }\n}\n\nexport type { AuthenticateContext };\n\nexport const createAuthenticateContext = async (\n  clerkRequest: ClerkRequest,\n  options: AuthenticateRequestOptions,\n): Promise<AuthenticateContext> => {\n  const cookieSuffix = options.publishableKey\n    ? await getCookieSuffix(options.publishableKey, runtime.crypto.subtle)\n    : '';\n  return new AuthenticateContext(cookieSuffix, clerkRequest, options);\n};\n", "export const TokenType = {\n  SessionToken: 'session_token',\n  ApiKey: 'api_key',\n  M2MToken: 'm2m_token',\n  OAuthToken: 'oauth_token',\n} as const;\n\n/**\n * @inline\n */\nexport type TokenType = (typeof TokenType)[keyof typeof TokenType];\n\n/**\n * @inline\n */\nexport type SessionTokenType = typeof TokenType.SessionToken;\n/**\n * @inline\n */\nexport type MachineTokenType = Exclude<TokenType, SessionTokenType>;\n", "import { createCheckAuthorization } from '@clerk/shared/authorization';\nimport { __experimental_JWTPayloadToAuthObjectProperties } from '@clerk/shared/jwtPayloadParser';\nimport type {\n  CheckAuthorizationFromSessionClaims,\n  Jwt,\n  JwtPayload,\n  PendingSessionOptions,\n  ServerGetToken,\n  ServerGetTokenOptions,\n  SessionStatusClaim,\n  SharedSignedInAuthObjectProperties,\n} from '@clerk/types';\n\nimport type { APIKey, CreateBackendApiOptions, IdPOAuthAccessToken, M2MToken } from '../api';\nimport { createBackendApiClient } from '../api';\nimport { isTokenTypeAccepted } from '../internal';\nimport type { AuthenticateContext } from './authenticateContext';\nimport { isMachineTokenType } from './machine';\nimport type { MachineTokenType, SessionTokenType } from './tokenTypes';\nimport { TokenType } from './tokenTypes';\nimport type { AuthenticateRequestOptions, MachineAuthType } from './types';\n\n/**\n * @inline\n */\ntype AuthObjectDebugData = Record<string, any>;\n/**\n * @inline\n */\ntype AuthObjectDebug = () => AuthObjectDebugData;\n\ntype Claims = Record<string, any>;\n\n/**\n * @internal\n */\nexport type SignedInAuthObjectOptions = CreateBackendApiOptions & {\n  token: string;\n};\n\n/**\n * @internal\n */\nexport type SignedInAuthObject = SharedSignedInAuthObjectProperties & {\n  /**\n   * The allowed token type.\n   */\n  tokenType: SessionTokenType;\n  /**\n   * A function that gets the current user's [session token](https://clerk.com/docs/backend-requests/resources/session-tokens) or a [custom JWT template](https://clerk.com/docs/backend-requests/jwt-templates).\n   */\n  getToken: ServerGetToken;\n  /**\n   * A function that checks if the user has an organization role or custom permission.\n   */\n  has: CheckAuthorizationFromSessionClaims;\n  /**\n   * Used to help debug issues when using Clerk in development.\n   */\n  debug: AuthObjectDebug;\n  isAuthenticated: true;\n};\n\n/**\n * @internal\n */\nexport type SignedOutAuthObject = {\n  sessionClaims: null;\n  sessionId: null;\n  sessionStatus: SessionStatusClaim | null;\n  actor: null;\n  tokenType: SessionTokenType;\n  userId: null;\n  orgId: null;\n  orgRole: null;\n  orgSlug: null;\n  orgPermissions: null;\n  factorVerificationAge: null;\n  getToken: ServerGetToken;\n  has: CheckAuthorizationFromSessionClaims;\n  debug: AuthObjectDebug;\n  isAuthenticated: false;\n};\n\n/**\n * Extended properties specific to each machine token type.\n * While all machine token types share common properties (id, name, subject, etc),\n * this type defines the additional properties that are unique to each token type.\n *\n * @template TAuthenticated - Whether the machine object is authenticated or not\n */\ntype MachineObjectExtendedProperties<TAuthenticated extends boolean> = {\n  api_key: TAuthenticated extends true\n    ?\n        | { name: string; claims: Claims | null; userId: string; orgId: null }\n        | { name: string; claims: Claims | null; userId: null; orgId: string }\n    : { name: null; claims: null; userId: null; orgId: null };\n  m2m_token: {\n    claims: TAuthenticated extends true ? Claims | null : null;\n    machineId: TAuthenticated extends true ? string : null;\n  };\n  oauth_token: {\n    userId: TAuthenticated extends true ? string : null;\n    clientId: TAuthenticated extends true ? string : null;\n  };\n};\n\n/**\n * @internal\n *\n * Uses `T extends any` to create a distributive conditional type.\n * This ensures that union types like `'api_key' | 'oauth_token'` are processed\n * individually, creating proper discriminated unions where each token type\n * gets its own distinct properties (e.g., oauth_token won't have claims).\n */\nexport type AuthenticatedMachineObject<T extends MachineTokenType = MachineTokenType> = T extends any\n  ? {\n      id: string;\n      subject: string;\n      scopes: string[];\n      getToken: () => Promise<string>;\n      has: CheckAuthorizationFromSessionClaims;\n      debug: AuthObjectDebug;\n      tokenType: T;\n      isAuthenticated: true;\n    } & MachineObjectExtendedProperties<true>[T]\n  : never;\n\n/**\n * @internal\n *\n * Uses `T extends any` to create a distributive conditional type.\n * This ensures that union types like `'api_key' | 'oauth_token'` are processed\n * individually, creating proper discriminated unions where each token type\n * gets its own distinct properties (e.g., oauth_token won't have claims).\n */\nexport type UnauthenticatedMachineObject<T extends MachineTokenType = MachineTokenType> = T extends any\n  ? {\n      id: null;\n      subject: null;\n      scopes: null;\n      getToken: () => Promise<null>;\n      has: CheckAuthorizationFromSessionClaims;\n      debug: AuthObjectDebug;\n      tokenType: T;\n      isAuthenticated: false;\n    } & MachineObjectExtendedProperties<false>[T]\n  : never;\n\nexport type InvalidTokenAuthObject = {\n  isAuthenticated: false;\n  tokenType: null;\n  getToken: () => Promise<null>;\n  has: () => false;\n  debug: AuthObjectDebug;\n};\n\n/**\n * @interface\n */\nexport type AuthObject =\n  | SignedInAuthObject\n  | SignedOutAuthObject\n  | AuthenticatedMachineObject\n  | UnauthenticatedMachineObject\n  | InvalidTokenAuthObject;\n\nconst createDebug = (data: AuthObjectDebugData | undefined) => {\n  return () => {\n    const res = { ...data };\n    res.secretKey = (res.secretKey || '').substring(0, 7);\n    res.jwtKey = (res.jwtKey || '').substring(0, 7);\n    return { ...res };\n  };\n};\n\n/**\n * @internal\n */\nexport function signedInAuthObject(\n  authenticateContext: Partial<AuthenticateContext>,\n  sessionToken: string,\n  sessionClaims: JwtPayload,\n): SignedInAuthObject {\n  const { actor, sessionId, sessionStatus, userId, orgId, orgRole, orgSlug, orgPermissions, factorVerificationAge } =\n    __experimental_JWTPayloadToAuthObjectProperties(sessionClaims);\n  const apiClient = createBackendApiClient(authenticateContext);\n  const getToken = createGetToken({\n    sessionId,\n    sessionToken,\n    fetcher: async (sessionId, template, expiresInSeconds) =>\n      (await apiClient.sessions.getToken(sessionId, template || '', expiresInSeconds)).jwt,\n  });\n  return {\n    tokenType: TokenType.SessionToken,\n    actor,\n    sessionClaims,\n    sessionId,\n    sessionStatus,\n    userId,\n    orgId,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    factorVerificationAge,\n    getToken,\n    has: createCheckAuthorization({\n      orgId,\n      orgRole,\n      orgPermissions,\n      userId,\n      factorVerificationAge,\n      features: (sessionClaims.fea as string) || '',\n      plans: (sessionClaims.pla as string) || '',\n    }),\n    debug: createDebug({ ...authenticateContext, sessionToken }),\n    isAuthenticated: true,\n  };\n}\n\n/**\n * @internal\n */\nexport function signedOutAuthObject(\n  debugData?: AuthObjectDebugData,\n  initialSessionStatus?: SessionStatusClaim,\n): SignedOutAuthObject {\n  return {\n    tokenType: TokenType.SessionToken,\n    sessionClaims: null,\n    sessionId: null,\n    sessionStatus: initialSessionStatus ?? null,\n    userId: null,\n    actor: null,\n    orgId: null,\n    orgRole: null,\n    orgSlug: null,\n    orgPermissions: null,\n    factorVerificationAge: null,\n    getToken: () => Promise.resolve(null),\n    has: () => false,\n    debug: createDebug(debugData),\n    isAuthenticated: false,\n  };\n}\n\n/**\n * @internal\n */\nexport function authenticatedMachineObject<T extends MachineTokenType>(\n  tokenType: T,\n  token: string,\n  verificationResult: MachineAuthType,\n  debugData?: AuthObjectDebugData,\n): AuthenticatedMachineObject<T> {\n  const baseObject = {\n    id: verificationResult.id,\n    subject: verificationResult.subject,\n    getToken: () => Promise.resolve(token),\n    has: () => false,\n    debug: createDebug(debugData),\n    isAuthenticated: true,\n  };\n\n  // Type assertions are safe here since we know the verification result type matches the tokenType.\n  // We need these assertions because TS can't infer the specific type\n  // just from the tokenType discriminator.\n\n  switch (tokenType) {\n    case TokenType.ApiKey: {\n      const result = verificationResult as APIKey;\n      return {\n        ...baseObject,\n        tokenType,\n        name: result.name,\n        claims: result.claims,\n        scopes: result.scopes,\n        userId: result.subject.startsWith('user_') ? result.subject : null,\n        orgId: result.subject.startsWith('org_') ? result.subject : null,\n      } as unknown as AuthenticatedMachineObject<T>;\n    }\n    case TokenType.M2MToken: {\n      const result = verificationResult as M2MToken;\n      return {\n        ...baseObject,\n        tokenType,\n        claims: result.claims,\n        scopes: result.scopes,\n        machineId: result.subject,\n      } as unknown as AuthenticatedMachineObject<T>;\n    }\n    case TokenType.OAuthToken: {\n      const result = verificationResult as IdPOAuthAccessToken;\n      return {\n        ...baseObject,\n        tokenType,\n        scopes: result.scopes,\n        userId: result.subject,\n        clientId: result.clientId,\n      } as unknown as AuthenticatedMachineObject<T>;\n    }\n    default:\n      throw new Error(`Invalid token type: ${tokenType}`);\n  }\n}\n\n/**\n * @internal\n */\nexport function unauthenticatedMachineObject<T extends MachineTokenType>(\n  tokenType: T,\n  debugData?: AuthObjectDebugData,\n): UnauthenticatedMachineObject<T> {\n  const baseObject = {\n    id: null,\n    subject: null,\n    scopes: null,\n    has: () => false,\n    getToken: () => Promise.resolve(null),\n    debug: createDebug(debugData),\n    isAuthenticated: false,\n  };\n\n  switch (tokenType) {\n    case TokenType.ApiKey: {\n      return {\n        ...baseObject,\n        tokenType,\n        name: null,\n        claims: null,\n        scopes: null,\n        userId: null,\n        orgId: null,\n      } as unknown as UnauthenticatedMachineObject<T>;\n    }\n    case TokenType.M2MToken: {\n      return {\n        ...baseObject,\n        tokenType,\n        claims: null,\n        scopes: null,\n        machineId: null,\n      } as unknown as UnauthenticatedMachineObject<T>;\n    }\n    case TokenType.OAuthToken: {\n      return {\n        ...baseObject,\n        tokenType,\n        scopes: null,\n        userId: null,\n        clientId: null,\n      } as unknown as UnauthenticatedMachineObject<T>;\n    }\n    default:\n      throw new Error(`Invalid token type: ${tokenType}`);\n  }\n}\n\n/**\n * @internal\n */\nexport function invalidTokenAuthObject(): InvalidTokenAuthObject {\n  return {\n    isAuthenticated: false,\n    tokenType: null,\n    getToken: () => Promise.resolve(null),\n    has: () => false,\n    debug: () => ({}),\n  };\n}\n\n/**\n * Auth objects moving through the server -> client boundary need to be serializable\n * as we need to ensure that they can be transferred via the network as pure strings.\n * Some frameworks like Remix or Next (/pages dir only) handle this serialization by simply\n * ignoring any non-serializable keys, however Nextjs /app directory is stricter and\n * throws an error if a non-serializable value is found.\n *\n * @internal\n */\nexport const makeAuthObjectSerializable = <T extends Record<string, unknown>>(obj: T): T => {\n  // remove any non-serializable props from the returned object\n\n  const { debug, getToken, has, ...rest } = obj as unknown as AuthObject;\n  return rest as unknown as T;\n};\n\n/**\n * A function that fetches a session token from the Clerk API.\n *\n * @param sessionId - The ID of the session\n * @param template - The JWT template name to use for token generation\n * @param expiresInSeconds - Optional expiration time in seconds for the token\n * @returns A promise that resolves to the token string\n */\ntype TokenFetcher = (sessionId: string, template?: string, expiresInSeconds?: number) => Promise<string>;\n\n/**\n * Factory function type that creates a getToken function for auth objects.\n *\n * @param params - Configuration object containing session information and token fetcher\n * @returns A ServerGetToken function that can be used to retrieve tokens\n */\ntype CreateGetToken = (params: { sessionId: string; sessionToken: string; fetcher: TokenFetcher }) => ServerGetToken;\n\n/**\n * Creates a token retrieval function for authenticated sessions.\n *\n * This factory function returns a getToken function that can either return the raw session token\n * or generate a JWT using a specified template with optional custom expiration.\n *\n * @param params - Configuration object\n * @param params.sessionId - The session ID for token generation\n * @param params.sessionToken - The raw session token to return when no template is specified\n * @param params.fetcher - Function to fetch tokens from the Clerk API\n *\n * @returns A function that retrieves tokens based on the provided options\n */\nconst createGetToken: CreateGetToken = params => {\n  const { fetcher, sessionToken, sessionId } = params || {};\n\n  return async (options: ServerGetTokenOptions = {}) => {\n    if (!sessionId) {\n      return null;\n    }\n\n    if (options.template || options.expiresInSeconds !== undefined) {\n      return fetcher(sessionId, options.template, options.expiresInSeconds);\n    }\n\n    return sessionToken;\n  };\n};\n\n/**\n * @internal\n */\nexport const getAuthObjectFromJwt = (\n  jwt: Jwt,\n  { treatPendingAsSignedOut = true, ...options }: PendingSessionOptions & Partial<AuthenticateContext>,\n) => {\n  const authObject = signedInAuthObject(options, jwt.raw.text, jwt.payload);\n\n  if (treatPendingAsSignedOut && authObject.sessionStatus === 'pending') {\n    return signedOutAuthObject(options, authObject.sessionStatus);\n  }\n\n  return authObject;\n};\n\n/**\n * @internal\n * Returns an auth object matching the requested token type(s).\n *\n * If the parsed token type does not match any in acceptsToken, returns:\n *   - an invalid token auth object if the token is not in the accepted array\n *   - an unauthenticated machine object for machine tokens, or\n *   - a signed-out session object otherwise.\n *\n * This ensures the returned object always matches the developer's intent.\n */\nexport const getAuthObjectForAcceptedToken = ({\n  authObject,\n  acceptsToken = TokenType.SessionToken,\n}: {\n  authObject: AuthObject;\n  acceptsToken: AuthenticateRequestOptions['acceptsToken'];\n}): AuthObject => {\n  // 1. any token: return as-is\n  if (acceptsToken === 'any') {\n    return authObject;\n  }\n\n  // 2. array of tokens: must match one of the accepted types\n  if (Array.isArray(acceptsToken)) {\n    if (!isTokenTypeAccepted(authObject.tokenType, acceptsToken)) {\n      return invalidTokenAuthObject();\n    }\n    return authObject;\n  }\n\n  // 3. single token: must match exactly, else return appropriate unauthenticated object\n  if (!isTokenTypeAccepted(authObject.tokenType, acceptsToken)) {\n    if (isMachineTokenType(acceptsToken)) {\n      return unauthenticatedMachineObject(acceptsToken, authObject.debug);\n    }\n    return signedOutAuthObject(authObject.debug);\n  }\n\n  // 4. default: return as-is\n  return authObject;\n};\n", "const SEPARATOR = '/';\nconst MULTIPLE_SEPARATOR_REGEX = new RegExp('(?<!:)' + SEPARATOR + '{1,}', 'g');\n\ntype PathString = string | null | undefined;\n\nexport function joinPaths(...args: PathString[]): string {\n  return args\n    .filter(p => p)\n    .join(SEPARATOR)\n    .replace(MULTIPLE_SEPARATOR_REGEX, SEPARATOR);\n}\n", "import type { RequestFunction } from '../request';\n\nexport abstract class AbstractAPI {\n  constructor(protected request: RequestFunction) {}\n\n  protected requireId(id: string) {\n    if (!id) {\n      throw new Error('A valid resource ID is required.');\n    }\n  }\n}\n", "import { joinPaths } from '../../util/path';\nimport type { ActorToken } from '../resources/ActorToken';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/actor_tokens';\n\ntype ActorTokenActorCreateParams = {\n  /**\n   * The ID of the actor.\n   */\n  sub: string;\n  /**\n   * Additional properties of the actor.\n   */\n  additionalProperties?: { [k: string]: any };\n};\n\ntype ActorTokenCreateParams = {\n  /**\n   * The ID of the user being impersonated.\n   */\n  userId: string;\n  /**\n   * The actor payload. It needs to include a sub property which should contain the ID of the actor.\n   *\n   * @remarks\n   * This whole payload will be also included in the JWT session token.\n   */\n  actor: ActorTokenActorCreateParams;\n  /**\n   * Optional parameter to specify the life duration of the actor token in seconds.\n   *\n   * @remarks\n   * By default, the duration is 1 hour.\n   */\n  expiresInSeconds?: number | undefined;\n  /**\n   * The maximum duration that the session which will be created by the generated actor token should last.\n   *\n   * @remarks\n   * By default, the duration of a session created via an actor token, lasts 30 minutes.\n   */\n  sessionMaxDurationInSeconds?: number | undefined;\n};\n\nexport class ActorTokenAPI extends AbstractAPI {\n  public async create(params: ActorTokenCreateParams) {\n    return this.request<ActorToken>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  public async revoke(actorTokenId: string) {\n    this.requireId(actorTokenId);\n    return this.request<ActorToken>({\n      method: 'POST',\n      path: joinPaths(basePath, actorTokenId, 'revoke'),\n    });\n  }\n}\n", "import { joinPaths } from '../../util/path';\nimport type { AccountlessApplication } from '../resources/AccountlessApplication';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/accountless_applications';\n\nexport class AccountlessApplicationAPI extends AbstractAPI {\n  public async createAccountlessApplication(params?: { requestHeaders?: Headers }) {\n    const headerParams = params?.requestHeaders ? Object.fromEntries(params.requestHeaders.entries()) : undefined;\n    return this.request<AccountlessApplication>({\n      method: 'POST',\n      path: basePath,\n      headerParams,\n    });\n  }\n\n  public async completeAccountlessApplicationOnboarding(params?: { requestHeaders?: Headers }) {\n    const headerParams = params?.requestHeaders ? Object.fromEntries(params.requestHeaders.entries()) : undefined;\n    return this.request<AccountlessApplication>({\n      method: 'POST',\n      path: joinPaths(basePath, 'complete'),\n      headerParams,\n    });\n  }\n}\n", "import type { ClerkPaginationRequest } from '@clerk/types';\n\nimport { joinPaths } from '../../util/path';\nimport type { AllowlistIdentifier } from '../resources/AllowlistIdentifier';\nimport type { DeletedObject } from '../resources/DeletedObject';\nimport type { PaginatedResourceResponse } from '../resources/Deserializer';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/allowlist_identifiers';\n\ntype AllowlistIdentifierCreateParams = {\n  identifier: string;\n  notify: boolean;\n};\n\nexport class AllowlistIdentifierAPI extends AbstractAPI {\n  public async getAllowlistIdentifierList(params: ClerkPaginationRequest = {}) {\n    return this.request<PaginatedResourceResponse<AllowlistIdentifier[]>>({\n      method: 'GET',\n      path: basePath,\n      queryParams: { ...params, paginated: true },\n    });\n  }\n\n  public async createAllowlistIdentifier(params: AllowlistIdentifierCreateParams) {\n    return this.request<AllowlistIdentifier>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  public async deleteAllowlistIdentifier(allowlistIdentifierId: string) {\n    this.requireId(allowlistIdentifierId);\n    return this.request<DeletedObject>({\n      method: 'DELETE',\n      path: joinPaths(basePath, allowlistIdentifierId),\n    });\n  }\n}\n", "import { joinPaths } from '../../util/path';\nimport type { APIKey } from '../resources/APIKey';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/api_keys';\n\ntype CreateAPIKeyParams = {\n  type?: 'api_key';\n  /**\n   * API key name\n   */\n  name: string;\n  /**\n   * user or organization ID the API key is associated with\n   */\n  subject: string;\n  /**\n   * API key description\n   */\n  description?: string | null;\n  claims?: Record<string, any> | null;\n  scopes?: string[];\n  createdBy?: string | null;\n  secondsUntilExpiration?: number | null;\n};\n\ntype RevokeAPIKeyParams = {\n  /**\n   * API key ID\n   */\n  apiKeyId: string;\n  /**\n   * Reason for revocation\n   */\n  revocationReason?: string | null;\n};\n\nexport class APIKeysAPI extends AbstractAPI {\n  async create(params: CreateAPIKeyParams) {\n    return this.request<APIKey>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  async revoke(params: RevokeAPIKeyParams) {\n    const { apiKeyId, ...bodyParams } = params;\n\n    this.requireId(apiKeyId);\n\n    return this.request<APIKey>({\n      method: 'POST',\n      path: joinPaths(basePath, apiKeyId, 'revoke'),\n      bodyParams,\n    });\n  }\n\n  async getSecret(apiKeyId: string) {\n    this.requireId(apiKeyId);\n\n    return this.request<{ secret: string }>({\n      method: 'GET',\n      path: joinPaths(basePath, apiKeyId, 'secret'),\n    });\n  }\n\n  async verifySecret(secret: string) {\n    return this.request<APIKey>({\n      method: 'POST',\n      path: joinPaths(basePath, 'verify'),\n      bodyParams: { secret },\n    });\n  }\n}\n", "import { joinPaths } from '../../util/path';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/beta_features';\n\ntype ChangeDomainParams = {\n  /**\n   * The new home URL of the production instance e.g. https://www.example.com\n   */\n  homeUrl?: string;\n  /**\n   * Whether this is a domain for a secondary app, meaning that any subdomain\n   * provided is significant and will be stored as part of the domain. This is\n   * useful for supporting multiple apps (one primary and multiple secondaries)\n   * on the same root domain (eTLD+1).\n   */\n  isSecondary?: boolean;\n};\n\nexport class BetaFeaturesAPI extends AbstractAPI {\n  /**\n   * Change the domain of a production instance.\n   *\n   * Changing the domain requires updating the DNS records accordingly, deploying new SSL certificates,\n   * updating your Social Connection's redirect URLs and setting the new keys in your code.\n   *\n   * @remarks\n   * WARNING: Changing your domain will invalidate all current user sessions (i.e. users will be logged out).\n   *          Also, while your application is being deployed, a small downtime is expected to occur.\n   */\n  public async changeDomain(params: ChangeDomainParams) {\n    return this.request<void>({\n      method: 'POST',\n      path: joinPaths(basePath, 'change_domain'),\n      bodyParams: params,\n    });\n  }\n}\n", "import type { ClerkPaginationRequest } from '@clerk/types';\n\nimport { joinPaths } from '../../util/path';\nimport type { BlocklistIdentifier } from '../resources/BlocklistIdentifier';\nimport type { DeletedObject } from '../resources/DeletedObject';\nimport type { PaginatedResourceResponse } from '../resources/Deserializer';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/blocklist_identifiers';\n\ntype BlocklistIdentifierCreateParams = {\n  identifier: string;\n};\n\nexport class BlocklistIdentifierAPI extends AbstractAPI {\n  public async getBlocklistIdentifierList(params: ClerkPaginationRequest = {}) {\n    return this.request<PaginatedResourceResponse<BlocklistIdentifier[]>>({\n      method: 'GET',\n      path: basePath,\n      queryParams: params,\n    });\n  }\n\n  public async createBlocklistIdentifier(params: BlocklistIdentifierCreateParams) {\n    return this.request<BlocklistIdentifier>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  public async deleteBlocklistIdentifier(blocklistIdentifierId: string) {\n    this.requireId(blocklistIdentifierId);\n    return this.request<DeletedObject>({\n      method: 'DELETE',\n      path: joinPaths(basePath, blocklistIdentifierId),\n    });\n  }\n}\n", "import type { ClerkPaginationRequest } from '@clerk/types';\n\nimport { joinPaths } from '../../util/path';\nimport type { Client } from '../resources/Client';\nimport type { PaginatedResourceResponse } from '../resources/Deserializer';\nimport type { HandshakePayload } from '../resources/HandshakePayload';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/clients';\n\ntype GetHandshakePayloadParams = {\n  nonce: string;\n};\n\nexport class ClientAPI extends AbstractAPI {\n  public async getClientList(params: ClerkPaginationRequest = {}) {\n    return this.request<PaginatedResourceResponse<Client[]>>({\n      method: 'GET',\n      path: basePath,\n      queryParams: { ...params, paginated: true },\n    });\n  }\n\n  public async getClient(clientId: string) {\n    this.requireId(clientId);\n    return this.request<Client>({\n      method: 'GET',\n      path: joinPaths(basePath, clientId),\n    });\n  }\n\n  public verifyClient(token: string) {\n    return this.request<Client>({\n      method: 'POST',\n      path: joinPaths(basePath, 'verify'),\n      bodyParams: { token },\n    });\n  }\n\n  public async getHandshakePayload(queryParams: GetHandshakePayloadParams) {\n    return this.request<HandshakePayload>({\n      method: 'GET',\n      path: joinPaths(basePath, 'handshake_payload'),\n      queryParams,\n    });\n  }\n}\n", "import { joinPaths } from '../../util/path';\nimport type { DeletedObject } from '../resources/DeletedObject';\nimport type { PaginatedResourceResponse } from '../resources/Deserializer';\nimport type { Domain } from '../resources/Domain';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/domains';\n\ntype AddDomainParams = {\n  /**\n   * The new domain name. For development instances, can contain the port, i.e myhostname:3000. For production instances, must be a valid FQDN, i.e mysite.com. Cannot contain protocol scheme.\n   */\n  name: string;\n  /**\n   * Marks the new domain as satellite. Only true is accepted at the moment.\n   */\n  is_satellite: boolean;\n  /**\n   * The full URL of the proxy which will forward requests to the Clerk Frontend API for this domain. Applicable only to production instances.\n   */\n  proxy_url?: string | null;\n};\n\ntype UpdateDomainParams = Partial<Pick<AddDomainParams, 'name' | 'proxy_url'>> & {\n  /**\n   * The ID of the domain that will be updated.\n   */\n  domainId: string;\n  /**\n   * Whether this is a domain for a secondary app, meaning that any subdomain provided is significant\n   * and will be stored as part of the domain. This is useful for supporting multiple apps\n   * (one primary and multiple secondaries) on the same root domain (eTLD+1).\n   */\n  is_secondary?: boolean | null;\n};\n\nexport class DomainAPI extends AbstractAPI {\n  public async list() {\n    return this.request<PaginatedResourceResponse<Domain[]>>({\n      method: 'GET',\n      path: basePath,\n    });\n  }\n\n  public async add(params: AddDomainParams) {\n    return this.request<Domain>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  public async update(params: UpdateDomainParams) {\n    const { domainId, ...bodyParams } = params;\n\n    this.requireId(domainId);\n\n    return this.request<Domain>({\n      method: 'PATCH',\n      path: joinPaths(basePath, domainId),\n      bodyParams: bodyParams,\n    });\n  }\n\n  /**\n   * Deletes a satellite domain for the instance.\n   * It is currently not possible to delete the instance's primary domain.\n   */\n  public async delete(satelliteDomainId: string) {\n    return this.deleteDomain(satelliteDomainId);\n  }\n\n  /**\n   * @deprecated Use `delete` instead\n   */\n  public async deleteDomain(satelliteDomainId: string) {\n    this.requireId(satelliteDomainId);\n    return this.request<DeletedObject>({\n      method: 'DELETE',\n      path: joinPaths(basePath, satelliteDomainId),\n    });\n  }\n}\n", "import { joinPaths } from '../../util/path';\nimport type { DeletedObject, EmailAddress } from '../resources';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/email_addresses';\n\ntype CreateEmailAddressParams = {\n  userId: string;\n  emailAddress: string;\n  verified?: boolean;\n  primary?: boolean;\n};\n\ntype UpdateEmailAddressParams = {\n  verified?: boolean;\n  primary?: boolean;\n};\n\nexport class EmailAddressAPI extends AbstractAPI {\n  public async getEmailAddress(emailAddressId: string) {\n    this.requireId(emailAddressId);\n\n    return this.request<EmailAddress>({\n      method: 'GET',\n      path: joinPaths(basePath, emailAddressId),\n    });\n  }\n\n  public async createEmailAddress(params: CreateEmailAddressParams) {\n    return this.request<EmailAddress>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  public async updateEmailAddress(emailAddressId: string, params: UpdateEmailAddressParams = {}) {\n    this.requireId(emailAddressId);\n\n    return this.request<EmailAddress>({\n      method: 'PATCH',\n      path: joinPaths(basePath, emailAddressId),\n      bodyParams: params,\n    });\n  }\n\n  public async deleteEmailAddress(emailAddressId: string) {\n    this.requireId(emailAddressId);\n\n    return this.request<DeletedObject>({\n      method: 'DELETE',\n      path: joinPaths(basePath, emailAddressId),\n    });\n  }\n}\n", "import { joinPaths } from '../../util/path';\nimport type { IdPOAuthAccessToken } from '../resources';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/oauth_applications/access_tokens';\n\nexport class IdPOAuthAccessTokenApi extends AbstractAPI {\n  async verifyAccessToken(accessToken: string) {\n    return this.request<IdPOAuthAccessToken>({\n      method: 'POST',\n      path: joinPaths(basePath, 'verify'),\n      bodyParams: { access_token: accessToken },\n    });\n  }\n}\n", "import { joinPaths } from '../../util/path';\nimport type { Instance } from '../resources/Instance';\nimport type { InstanceRestrictions } from '../resources/InstanceRestrictions';\nimport type { OrganizationSettings } from '../resources/OrganizationSettings';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/instance';\n\ntype UpdateParams = {\n  /**\n   * Toggles test mode for this instance, allowing the use of test email addresses and phone numbers.\n   *\n   * @remarks Defaults to true for development instances.\n   */\n  testMode?: boolean | null | undefined;\n  /**\n   * Whether the instance should be using the HIBP service to check passwords for breaches\n   */\n  hibp?: boolean | null | undefined;\n  /**\n   * The \"enhanced_email_deliverability\" feature will send emails from \"verifications@clerk.dev\" instead of your domain.\n   *\n   * @remarks This can be helpful if you do not have a high domain reputation.\n   */\n  enhancedEmailDeliverability?: boolean | null | undefined;\n  supportEmail?: string | null | undefined;\n  clerkJsVersion?: string | null | undefined;\n  developmentOrigin?: string | null | undefined;\n  /**\n   * For browser-like stacks such as browser extensions, Electron, or Capacitor.js the instance allowed origins need to be updated with the request origin value.\n   *\n   * @remarks For Chrome extensions popup, background, or service worker pages the origin is chrome-extension://extension_uiid. For Electron apps the default origin is http://localhost:3000. For Capacitor, the origin is capacitor://localhost.\n   */\n  allowedOrigins?: Array<string> | undefined;\n  /**\n   * Whether the instance should use URL-based session syncing in development mode (i.e. without third-party cookies).\n   */\n  urlBasedSessionSyncing?: boolean | null | undefined;\n};\n\ntype UpdateRestrictionsParams = {\n  allowlist?: boolean | null | undefined;\n  blocklist?: boolean | null | undefined;\n  blockEmailSubaddresses?: boolean | null | undefined;\n  blockDisposableEmailDomains?: boolean | null | undefined;\n  ignoreDotsForGmailAddresses?: boolean | null | undefined;\n};\n\ntype UpdateOrganizationSettingsParams = {\n  enabled?: boolean | null | undefined;\n  maxAllowedMemberships?: number | null | undefined;\n  adminDeleteEnabled?: boolean | null | undefined;\n  domainsEnabled?: boolean | null | undefined;\n  /**\n   * Specifies which [enrollment modes](https://clerk.com/docs/organizations/verified-domains#enrollment-mode) to enable for your Organization Domains.\n   *\n   * @remarks Supported modes are 'automatic_invitation' & 'automatic_suggestion'.\n   */\n  domainsEnrollmentModes?: Array<string> | undefined;\n  /**\n   * Specifies what the default organization role is for an organization creator.\n   */\n  creatorRoleId?: string | null | undefined;\n  /**\n   * Specifies what the default organization role is for the organization domains.\n   */\n  domainsDefaultRoleId?: string | null | undefined;\n};\n\nexport class InstanceAPI extends AbstractAPI {\n  public async get() {\n    return this.request<Instance>({\n      method: 'GET',\n      path: basePath,\n    });\n  }\n\n  public async update(params: UpdateParams) {\n    return this.request<void>({\n      method: 'PATCH',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  public async updateRestrictions(params: UpdateRestrictionsParams) {\n    return this.request<InstanceRestrictions>({\n      method: 'PATCH',\n      path: joinPaths(basePath, 'restrictions'),\n      bodyParams: params,\n    });\n  }\n\n  public async updateOrganizationSettings(params: UpdateOrganizationSettingsParams) {\n    return this.request<OrganizationSettings>({\n      method: 'PATCH',\n      path: joinPaths(basePath, 'organization_settings'),\n      bodyParams: params,\n    });\n  }\n}\n", "import type { ClerkPaginationRequest } from '@clerk/types';\n\nimport { joinPaths } from '../../util/path';\nimport type { PaginatedResourceResponse } from '../resources/Deserializer';\nimport type { InvitationStatus } from '../resources/Enums';\nimport type { Invitation } from '../resources/Invitation';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/invitations';\n\ntype TemplateSlug = 'invitation' | 'waitlist_invitation';\n\ntype CreateParams = {\n  emailAddress: string;\n  expiresInDays?: number;\n  ignoreExisting?: boolean;\n  notify?: boolean;\n  publicMetadata?: UserPublicMetadata;\n  redirectUrl?: string;\n  templateSlug?: TemplateSlug;\n};\n\ntype CreateBulkParams = Array<CreateParams>;\n\ntype GetInvitationListParams = ClerkPaginationRequest<{\n  /**\n   * Filters invitations based on their status.\n   *\n   * @example\n   * Get all revoked invitations\n   * ```ts\n   * import { createClerkClient } from '@clerk/backend';\n   * const clerkClient = createClerkClient(...)\n   * await clerkClient.invitations.getInvitationList({ status: 'revoked' })\n   * ```\n   */\n  status?: InvitationStatus;\n  /**\n   * Filters invitations based on `email_address` or `id`.\n   *\n   * @example\n   * Get all invitations for a specific email address\n   * ```ts\n   * import { createClerkClient } from '@clerk/backend';\n   * const clerkClient = createClerkClient(...)\n   * await clerkClient.invitations.getInvitationList({ query: 'user@example.com' })\n   * ```\n   */\n  query?: string;\n}>;\n\nexport class InvitationAPI extends AbstractAPI {\n  public async getInvitationList(params: GetInvitationListParams = {}) {\n    return this.request<PaginatedResourceResponse<Invitation[]>>({\n      method: 'GET',\n      path: basePath,\n      queryParams: { ...params, paginated: true },\n    });\n  }\n\n  public async createInvitation(params: CreateParams) {\n    return this.request<Invitation>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  public async createInvitationBulk(params: CreateBulkParams) {\n    return this.request<Invitation>({\n      method: 'POST',\n      path: joinPaths(basePath, 'bulk'),\n      bodyParams: params,\n    });\n  }\n\n  public async revokeInvitation(invitationId: string) {\n    this.requireId(invitationId);\n    return this.request<Invitation>({\n      method: 'POST',\n      path: joinPaths(basePath, invitationId, 'revoke'),\n    });\n  }\n}\n", "import { joinPaths } from '../../util/path';\nimport type { PaginatedResourceResponse } from '../resources/Deserializer';\nimport type { Machine } from '../resources/Machine';\nimport type { MachineScope } from '../resources/MachineScope';\nimport type { MachineSecretKey } from '../resources/MachineSecretKey';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/machines';\n\ntype CreateMachineParams = {\n  /**\n   * The name of the machine.\n   */\n  name: string;\n  /**\n   * Array of machine IDs that this machine will have access to.\n   */\n  scopedMachines?: string[];\n  /**\n   * The default time-to-live (TTL) in seconds for tokens created by this machine.\n   */\n  defaultTokenTtl?: number;\n};\n\ntype UpdateMachineParams = {\n  /**\n   * The ID of the machine to update.\n   */\n  machineId: string;\n  /**\n   * The name of the machine.\n   */\n  name?: string;\n  /**\n   * The default time-to-live (TTL) in seconds for tokens created by this machine.\n   */\n  defaultTokenTtl?: number;\n};\n\ntype GetMachineListParams = {\n  limit?: number;\n  offset?: number;\n  query?: string;\n};\n\ntype RotateMachineSecretKeyParams = {\n  /**\n   * The ID of the machine to rotate the secret key for.\n   */\n  machineId: string;\n  /**\n   * The time in seconds that the previous secret key will remain valid after rotation.\n   */\n  previousTokenTtl: number;\n};\n\nexport class MachineApi extends AbstractAPI {\n  async get(machineId: string) {\n    this.requireId(machineId);\n    return this.request<Machine>({\n      method: 'GET',\n      path: joinPaths(basePath, machineId),\n    });\n  }\n\n  async list(queryParams: GetMachineListParams = {}) {\n    return this.request<PaginatedResourceResponse<Machine[]>>({\n      method: 'GET',\n      path: basePath,\n      queryParams,\n    });\n  }\n\n  async create(bodyParams: CreateMachineParams) {\n    return this.request<Machine>({\n      method: 'POST',\n      path: basePath,\n      bodyParams,\n    });\n  }\n\n  async update(params: UpdateMachineParams) {\n    const { machineId, ...bodyParams } = params;\n    this.requireId(machineId);\n    return this.request<Machine>({\n      method: 'PATCH',\n      path: joinPaths(basePath, machineId),\n      bodyParams,\n    });\n  }\n\n  async delete(machineId: string) {\n    this.requireId(machineId);\n    return this.request<Machine>({\n      method: 'DELETE',\n      path: joinPaths(basePath, machineId),\n    });\n  }\n\n  async getSecretKey(machineId: string) {\n    this.requireId(machineId);\n    return this.request<MachineSecretKey>({\n      method: 'GET',\n      path: joinPaths(basePath, machineId, 'secret_key'),\n    });\n  }\n\n  async rotateSecretKey(params: RotateMachineSecretKeyParams) {\n    const { machineId, previousTokenTtl } = params;\n    this.requireId(machineId);\n    return this.request<MachineSecretKey>({\n      method: 'POST',\n      path: joinPaths(basePath, machineId, 'secret_key', 'rotate'),\n      bodyParams: {\n        previousTokenTtl,\n      },\n    });\n  }\n\n  /**\n   * Creates a new machine scope, allowing the specified machine to access another machine.\n   *\n   * @param machineId - The ID of the machine that will have access to another machine.\n   * @param toMachineId - The ID of the machine that will be scoped to the current machine.\n   */\n  async createScope(machineId: string, toMachineId: string) {\n    this.requireId(machineId);\n    return this.request<MachineScope>({\n      method: 'POST',\n      path: joinPaths(basePath, machineId, 'scopes'),\n      bodyParams: {\n        toMachineId,\n      },\n    });\n  }\n\n  /**\n   * Deletes a machine scope, removing access from one machine to another.\n   *\n   * @param machineId - The ID of the machine that has access to another machine.\n   * @param otherMachineId - The ID of the machine that is being accessed.\n   */\n  async deleteScope(machineId: string, otherMachineId: string) {\n    this.requireId(machineId);\n    return this.request<MachineScope>({\n      method: 'DELETE',\n      path: joinPaths(basePath, machineId, 'scopes', otherMachineId),\n    });\n  }\n}\n", "import { joinPaths } from '../../util/path';\nimport type { ClerkBackendApiRequestOptions } from '../request';\nimport type { M2MToken } from '../resources/M2MToken';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/m2m_tokens';\n\ntype CreateM2MTokenParams = {\n  /**\n   * Custom machine secret key for authentication.\n   */\n  machineSecretKey?: string;\n  /**\n   * Number of seconds until the token expires.\n   *\n   * @default null - Token does not expire\n   */\n  secondsUntilExpiration?: number | null;\n  claims?: Record<string, unknown> | null;\n};\n\ntype RevokeM2MTokenParams = {\n  /**\n   * Custom machine secret key for authentication.\n   */\n  machineSecretKey?: string;\n  /**\n   * Machine-to-machine token ID to revoke.\n   */\n  m2mTokenId: string;\n  revocationReason?: string | null;\n};\n\ntype VerifyM2MTokenParams = {\n  /**\n   * Custom machine secret key for authentication.\n   */\n  machineSecretKey?: string;\n  /**\n   * Machine-to-machine token to verify.\n   */\n  token: string;\n};\n\nexport class M2MTokenApi extends AbstractAPI {\n  #createRequestOptions(options: ClerkBackendApiRequestOptions, machineSecretKey?: string) {\n    if (machineSecretKey) {\n      return {\n        ...options,\n        headerParams: {\n          ...options.headerParams,\n          Authorization: `Bearer ${machineSecretKey}`,\n        },\n      };\n    }\n\n    return options;\n  }\n\n  async createToken(params?: CreateM2MTokenParams) {\n    const { claims = null, machineSecretKey, secondsUntilExpiration = null } = params || {};\n\n    const requestOptions = this.#createRequestOptions(\n      {\n        method: 'POST',\n        path: basePath,\n        bodyParams: {\n          secondsUntilExpiration,\n          claims,\n        },\n      },\n      machineSecretKey,\n    );\n\n    return this.request<M2MToken>(requestOptions);\n  }\n\n  async revokeToken(params: RevokeM2MTokenParams) {\n    const { m2mTokenId, revocationReason = null, machineSecretKey } = params;\n\n    this.requireId(m2mTokenId);\n\n    const requestOptions = this.#createRequestOptions(\n      {\n        method: 'POST',\n        path: joinPaths(basePath, m2mTokenId, 'revoke'),\n        bodyParams: {\n          revocationReason,\n        },\n      },\n      machineSecretKey,\n    );\n\n    return this.request<M2MToken>(requestOptions);\n  }\n\n  async verifyToken(params: VerifyM2MTokenParams) {\n    const { token, machineSecretKey } = params;\n\n    const requestOptions = this.#createRequestOptions(\n      {\n        method: 'POST',\n        path: joinPaths(basePath, 'verify'),\n        bodyParams: { token },\n      },\n      machineSecretKey,\n    );\n\n    return this.request<M2MToken>(requestOptions);\n  }\n}\n", "import type { JwksJSON } from '../resources/JSON';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/jwks';\n\nexport class JwksAPI extends AbstractAPI {\n  public async getJwks() {\n    return this.request<JwksJSON>({\n      method: 'GET',\n      path: basePath,\n    });\n  }\n}\n", "import type { ClerkPaginationRequest } from '@clerk/types';\nimport { joinPaths } from 'src/util/path';\n\nimport type { DeletedObject, JwtTemplate } from '../resources';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/jwt_templates';\n\ntype Claims = object;\n\ntype CreateJWTTemplateParams = {\n  /**\n   * JWT template name\n   */\n  name: string;\n  /**\n   * JWT template claims in JSON format\n   */\n  claims: Claims;\n  /**\n   * JWT token lifetime\n   */\n  lifetime?: number | null | undefined;\n  /**\n   * JWT token allowed clock skew\n   */\n  allowedClockSkew?: number | null | undefined;\n  /**\n   * Whether a custom signing key/algorithm is also provided for this template\n   */\n  customSigningKey?: boolean | undefined;\n  /**\n   * The custom signing algorithm to use when minting JWTs. Required if `custom_signing_key` is `true`.\n   */\n  signingAlgorithm?: string | null | undefined;\n  /**\n   * The custom signing private key to use when minting JWTs. Required if `custom_signing_key` is `true`.\n   */\n  signingKey?: string | null | undefined;\n};\n\ntype UpdateJWTTemplateParams = CreateJWTTemplateParams & {\n  /**\n   * JWT template ID\n   */\n  templateId: string;\n};\n\nexport class JwtTemplatesApi extends AbstractAPI {\n  public async list(params: ClerkPaginationRequest = {}) {\n    return this.request<JwtTemplate[]>({\n      method: 'GET',\n      path: basePath,\n      queryParams: { ...params, paginated: true },\n    });\n  }\n\n  public async get(templateId: string) {\n    this.requireId(templateId);\n\n    return this.request<JwtTemplate>({\n      method: 'GET',\n      path: joinPaths(basePath, templateId),\n    });\n  }\n\n  public async create(params: CreateJWTTemplateParams) {\n    return this.request<JwtTemplate>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  public async update(params: UpdateJWTTemplateParams) {\n    const { templateId, ...bodyParams } = params;\n\n    this.requireId(templateId);\n    return this.request<JwtTemplate>({\n      method: 'PATCH',\n      path: joinPaths(basePath, templateId),\n      bodyParams,\n    });\n  }\n\n  public async delete(templateId: string) {\n    this.requireId(templateId);\n\n    return this.request<DeletedObject>({\n      method: 'DELETE',\n      path: joinPaths(basePath, templateId),\n    });\n  }\n}\n", "import type { ClerkPaginationRequest, OrganizationEnrollmentMode } from '@clerk/types';\n\nimport { runtime } from '../../runtime';\nimport { joinPaths } from '../../util/path';\nimport type {\n  Organization,\n  OrganizationDomain,\n  OrganizationInvitation,\n  OrganizationInvitationStatus,\n  OrganizationMembership,\n} from '../resources';\nimport type { PaginatedResourceResponse } from '../resources/Deserializer';\nimport type { OrganizationMembershipRole } from '../resources/Enums';\nimport { AbstractAPI } from './AbstractApi';\nimport type { WithSign } from './util-types';\n\nconst basePath = '/organizations';\n\ntype MetadataParams<TPublic = OrganizationPublicMetadata, TPrivate = OrganizationPrivateMetadata> = {\n  publicMetadata?: TPublic;\n  privateMetadata?: TPrivate;\n};\n\ntype GetOrganizationListParams = ClerkPaginationRequest<{\n  includeMembersCount?: boolean;\n  query?: string;\n  orderBy?: WithSign<'name' | 'created_at' | 'members_count'>;\n  organizationId?: string[];\n}>;\n\ntype CreateParams = {\n  name: string;\n  slug?: string;\n  /* The User id for the user creating the organization. The user will become an administrator for the organization. */\n  createdBy?: string;\n  maxAllowedMemberships?: number;\n} & MetadataParams;\n\ntype GetOrganizationParams = ({ organizationId: string } | { slug: string }) & {\n  includeMembersCount?: boolean;\n};\n\ntype UpdateParams = {\n  name?: string;\n  slug?: string;\n  maxAllowedMemberships?: number;\n} & MetadataParams;\n\ntype UpdateLogoParams = {\n  file: Blob | File;\n  uploaderUserId?: string;\n};\n\ntype UpdateMetadataParams = MetadataParams;\n\ntype GetOrganizationMembershipListParams = ClerkPaginationRequest<{\n  organizationId: string;\n\n  /**\n   * Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\n   * By prepending one of those values with + or -, we can choose to sort in ascending (ASC) or descending (DESC) order.\n   */\n  orderBy?: WithSign<'phone_number' | 'email_address' | 'created_at' | 'first_name' | 'last_name' | 'username'>;\n\n  /**\n   * Returns users with the user ids specified. For each user id, the `+` and `-` can be\n   * prepended to the id, which denote whether the respective user id should be included or\n   * excluded from the result set. Accepts up to 100 user ids. Any user ids not found are ignored.\n   */\n  userId?: string[];\n\n  /* Returns users with the specified email addresses. Accepts up to 100 email addresses. Any email addresses not found are ignored. */\n  emailAddress?: string[];\n\n  /* Returns users with the specified phone numbers. Accepts up to 100 phone numbers. Any phone numbers not found are ignored. */\n  phoneNumber?: string[];\n\n  /* Returns users with the specified usernames. Accepts up to 100 usernames. Any usernames not found are ignored. */\n  username?: string[];\n\n  /* Returns users with the specified web3 wallet addresses. Accepts up to 100 web3 wallet addresses. Any web3 wallet addressed not found are ignored. */\n  web3Wallet?: string[];\n\n  /* Returns users with the specified roles. Accepts up to 100 roles. Any roles not found are ignored. */\n  role?: OrganizationMembershipRole[];\n\n  /**\n   * Returns users that match the given query.\n   * For possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user ids, first and last names.\n   * The query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well.\n   */\n  query?: string;\n\n  /**\n   * Returns users with emails that match the given query, via case-insensitive partial match.\n   * For example, `email_address_query=ello` will match a user with the email `HELLO@example.com`.\n   */\n  emailAddressQuery?: string;\n\n  /**\n   * Returns users with phone numbers that match the given query, via case-insensitive partial match.\n   * For example, `phone_number_query=555` will match a user with the phone number `+1555xxxxxxx`.\n   */\n  phoneNumberQuery?: string;\n\n  /**\n   * Returns users with usernames that match the given query, via case-insensitive partial match.\n   * For example, `username_query=CoolUser` will match a user with the username `SomeCoolUser`.\n   */\n  usernameQuery?: string;\n\n  /* Returns users with names that match the given query, via case-insensitive partial match. */\n  nameQuery?: string;\n\n  /**\n   * Returns users whose last session activity was before the given date (with millisecond precision).\n   * Example: use 1700690400000 to retrieve users whose last session activity was before 2023-11-23.\n   */\n  lastActiveAtBefore?: number;\n  /**\n   * Returns users whose last session activity was after the given date (with millisecond precision).\n   * Example: use 1700690400000 to retrieve users whose last session activity was after 2023-11-23.\n   */\n  lastActiveAtAfter?: number;\n\n  /**\n   * Returns users who have been created before the given date (with millisecond precision).\n   * Example: use 1730160000000 to retrieve users who have been created before 2024-10-29.\n   */\n  createdAtBefore?: number;\n\n  /**\n   * Returns users who have been created after the given date (with millisecond precision).\n   * Example: use 1730160000000 to retrieve users who have been created after 2024-10-29.\n   */\n  createdAtAfter?: number;\n}>;\n\ntype GetInstanceOrganizationMembershipListParams = ClerkPaginationRequest<{\n  /**\n   * Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\n   * By prepending one of those values with + or -, we can choose to sort in ascending (ASC) or descending (DESC) order.\n   */\n  orderBy?: WithSign<'phone_number' | 'email_address' | 'created_at' | 'first_name' | 'last_name' | 'username'>;\n}>;\n\ntype CreateOrganizationMembershipParams = {\n  organizationId: string;\n  userId: string;\n  role: OrganizationMembershipRole;\n};\n\ntype UpdateOrganizationMembershipParams = CreateOrganizationMembershipParams;\n\ntype UpdateOrganizationMembershipMetadataParams = {\n  organizationId: string;\n  userId: string;\n} & MetadataParams<OrganizationMembershipPublicMetadata>;\n\ntype DeleteOrganizationMembershipParams = {\n  organizationId: string;\n  userId: string;\n};\n\ntype CreateOrganizationInvitationParams = {\n  organizationId: string;\n  emailAddress: string;\n  role: OrganizationMembershipRole;\n  expiresInDays?: number;\n  inviterUserId?: string;\n  privateMetadata?: OrganizationInvitationPrivateMetadata;\n  publicMetadata?: OrganizationInvitationPublicMetadata;\n  redirectUrl?: string;\n};\n\ntype CreateBulkOrganizationInvitationParams = Array<{\n  emailAddress: string;\n  role: OrganizationMembershipRole;\n  expiresInDays?: number;\n  inviterUserId?: string;\n  privateMetadata?: OrganizationInvitationPrivateMetadata;\n  publicMetadata?: OrganizationInvitationPublicMetadata;\n  redirectUrl?: string;\n}>;\n\ntype GetOrganizationInvitationListParams = ClerkPaginationRequest<{\n  organizationId: string;\n  status?: OrganizationInvitationStatus[];\n}>;\n\ntype GetOrganizationInvitationParams = {\n  organizationId: string;\n  invitationId: string;\n};\n\ntype RevokeOrganizationInvitationParams = {\n  organizationId: string;\n  invitationId: string;\n  requestingUserId?: string;\n};\n\ntype GetOrganizationDomainListParams = {\n  organizationId: string;\n  limit?: number;\n  offset?: number;\n};\n\ntype CreateOrganizationDomainParams = {\n  organizationId: string;\n  name: string;\n  enrollmentMode: OrganizationEnrollmentMode;\n  verified?: boolean;\n};\n\ntype UpdateOrganizationDomainParams = {\n  organizationId: string;\n  domainId: string;\n} & Partial<CreateOrganizationDomainParams>;\n\ntype DeleteOrganizationDomainParams = {\n  organizationId: string;\n  domainId: string;\n};\n\nexport class OrganizationAPI extends AbstractAPI {\n  public async getOrganizationList(params?: GetOrganizationListParams) {\n    return this.request<PaginatedResourceResponse<Organization[]>>({\n      method: 'GET',\n      path: basePath,\n      queryParams: params,\n    });\n  }\n\n  public async createOrganization(params: CreateParams) {\n    return this.request<Organization>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  public async getOrganization(params: GetOrganizationParams) {\n    const { includeMembersCount } = params;\n    const organizationIdOrSlug = 'organizationId' in params ? params.organizationId : params.slug;\n    this.requireId(organizationIdOrSlug);\n\n    return this.request<Organization>({\n      method: 'GET',\n      path: joinPaths(basePath, organizationIdOrSlug),\n      queryParams: {\n        includeMembersCount,\n      },\n    });\n  }\n\n  public async updateOrganization(organizationId: string, params: UpdateParams) {\n    this.requireId(organizationId);\n    return this.request<Organization>({\n      method: 'PATCH',\n      path: joinPaths(basePath, organizationId),\n      bodyParams: params,\n    });\n  }\n\n  public async updateOrganizationLogo(organizationId: string, params: UpdateLogoParams) {\n    this.requireId(organizationId);\n\n    const formData = new runtime.FormData();\n    formData.append('file', params?.file);\n    if (params?.uploaderUserId) {\n      formData.append('uploader_user_id', params?.uploaderUserId);\n    }\n\n    return this.request<Organization>({\n      method: 'PUT',\n      path: joinPaths(basePath, organizationId, 'logo'),\n      formData,\n    });\n  }\n\n  public async deleteOrganizationLogo(organizationId: string) {\n    this.requireId(organizationId);\n\n    return this.request<Organization>({\n      method: 'DELETE',\n      path: joinPaths(basePath, organizationId, 'logo'),\n    });\n  }\n\n  public async updateOrganizationMetadata(organizationId: string, params: UpdateMetadataParams) {\n    this.requireId(organizationId);\n\n    return this.request<Organization>({\n      method: 'PATCH',\n      path: joinPaths(basePath, organizationId, 'metadata'),\n      bodyParams: params,\n    });\n  }\n\n  public async deleteOrganization(organizationId: string) {\n    return this.request<Organization>({\n      method: 'DELETE',\n      path: joinPaths(basePath, organizationId),\n    });\n  }\n\n  public async getOrganizationMembershipList(params: GetOrganizationMembershipListParams) {\n    const { organizationId, ...queryParams } = params;\n    this.requireId(organizationId);\n\n    return this.request<PaginatedResourceResponse<OrganizationMembership[]>>({\n      method: 'GET',\n      path: joinPaths(basePath, organizationId, 'memberships'),\n      queryParams,\n    });\n  }\n\n  public async getInstanceOrganizationMembershipList(params: GetInstanceOrganizationMembershipListParams) {\n    return this.request<PaginatedResourceResponse<OrganizationMembership[]>>({\n      method: 'GET',\n      path: '/organization_memberships',\n      queryParams: params,\n    });\n  }\n\n  public async createOrganizationMembership(params: CreateOrganizationMembershipParams) {\n    const { organizationId, ...bodyParams } = params;\n    this.requireId(organizationId);\n\n    return this.request<OrganizationMembership>({\n      method: 'POST',\n      path: joinPaths(basePath, organizationId, 'memberships'),\n      bodyParams,\n    });\n  }\n\n  public async updateOrganizationMembership(params: UpdateOrganizationMembershipParams) {\n    const { organizationId, userId, ...bodyParams } = params;\n    this.requireId(organizationId);\n\n    return this.request<OrganizationMembership>({\n      method: 'PATCH',\n      path: joinPaths(basePath, organizationId, 'memberships', userId),\n      bodyParams,\n    });\n  }\n\n  public async updateOrganizationMembershipMetadata(params: UpdateOrganizationMembershipMetadataParams) {\n    const { organizationId, userId, ...bodyParams } = params;\n\n    return this.request<OrganizationMembership>({\n      method: 'PATCH',\n      path: joinPaths(basePath, organizationId, 'memberships', userId, 'metadata'),\n      bodyParams,\n    });\n  }\n\n  public async deleteOrganizationMembership(params: DeleteOrganizationMembershipParams) {\n    const { organizationId, userId } = params;\n    this.requireId(organizationId);\n\n    return this.request<OrganizationMembership>({\n      method: 'DELETE',\n      path: joinPaths(basePath, organizationId, 'memberships', userId),\n    });\n  }\n\n  public async getOrganizationInvitationList(params: GetOrganizationInvitationListParams) {\n    const { organizationId, ...queryParams } = params;\n    this.requireId(organizationId);\n\n    return this.request<PaginatedResourceResponse<OrganizationInvitation[]>>({\n      method: 'GET',\n      path: joinPaths(basePath, organizationId, 'invitations'),\n      queryParams,\n    });\n  }\n\n  public async createOrganizationInvitation(params: CreateOrganizationInvitationParams) {\n    const { organizationId, ...bodyParams } = params;\n    this.requireId(organizationId);\n\n    return this.request<OrganizationInvitation>({\n      method: 'POST',\n      path: joinPaths(basePath, organizationId, 'invitations'),\n      bodyParams,\n    });\n  }\n\n  public async createOrganizationInvitationBulk(\n    organizationId: string,\n    params: CreateBulkOrganizationInvitationParams,\n  ) {\n    this.requireId(organizationId);\n\n    return this.request<OrganizationInvitation[]>({\n      method: 'POST',\n      path: joinPaths(basePath, organizationId, 'invitations', 'bulk'),\n      bodyParams: params,\n    });\n  }\n\n  public async getOrganizationInvitation(params: GetOrganizationInvitationParams) {\n    const { organizationId, invitationId } = params;\n    this.requireId(organizationId);\n    this.requireId(invitationId);\n\n    return this.request<OrganizationInvitation>({\n      method: 'GET',\n      path: joinPaths(basePath, organizationId, 'invitations', invitationId),\n    });\n  }\n\n  public async revokeOrganizationInvitation(params: RevokeOrganizationInvitationParams) {\n    const { organizationId, invitationId, ...bodyParams } = params;\n    this.requireId(organizationId);\n\n    return this.request<OrganizationInvitation>({\n      method: 'POST',\n      path: joinPaths(basePath, organizationId, 'invitations', invitationId, 'revoke'),\n      bodyParams,\n    });\n  }\n\n  public async getOrganizationDomainList(params: GetOrganizationDomainListParams) {\n    const { organizationId, ...queryParams } = params;\n    this.requireId(organizationId);\n\n    return this.request<PaginatedResourceResponse<OrganizationDomain[]>>({\n      method: 'GET',\n      path: joinPaths(basePath, organizationId, 'domains'),\n      queryParams,\n    });\n  }\n\n  public async createOrganizationDomain(params: CreateOrganizationDomainParams) {\n    const { organizationId, ...bodyParams } = params;\n    this.requireId(organizationId);\n\n    return this.request<OrganizationDomain>({\n      method: 'POST',\n      path: joinPaths(basePath, organizationId, 'domains'),\n      bodyParams: {\n        ...bodyParams,\n        verified: bodyParams.verified ?? true,\n      },\n    });\n  }\n\n  public async updateOrganizationDomain(params: UpdateOrganizationDomainParams) {\n    const { organizationId, domainId, ...bodyParams } = params;\n    this.requireId(organizationId);\n    this.requireId(domainId);\n\n    return this.request<OrganizationDomain>({\n      method: 'PATCH',\n      path: joinPaths(basePath, organizationId, 'domains', domainId),\n      bodyParams,\n    });\n  }\n\n  public async deleteOrganizationDomain(params: DeleteOrganizationDomainParams) {\n    const { organizationId, domainId } = params;\n    this.requireId(organizationId);\n    this.requireId(domainId);\n\n    return this.request<OrganizationDomain>({\n      method: 'DELETE',\n      path: joinPaths(basePath, organizationId, 'domains', domainId),\n    });\n  }\n}\n", "import type { ClerkPaginationRequest } from '@clerk/types';\n\nimport { joinPaths } from '../../util/path';\nimport type { DeletedObject } from '../resources';\nimport type { PaginatedResourceResponse } from '../resources/Deserializer';\nimport type { OAuthApplication } from '../resources/OAuthApplication';\nimport { AbstractAPI } from './AbstractApi';\nimport type { WithSign } from './util-types';\n\nconst basePath = '/oauth_applications';\n\ntype CreateOAuthApplicationParams = {\n  /**\n   * The name of the new OAuth application.\n   *\n   * @remarks Max length: 256\n   */\n  name: string;\n  /**\n   * An array of redirect URIs of the new OAuth application\n   */\n  redirectUris?: Array<string> | null | undefined;\n  /**\n   * Define the allowed scopes for the new OAuth applications that dictate the user payload of the OAuth user info endpoint. Available scopes are `profile`, `email`, `public_metadata`, `private_metadata`. Provide the requested scopes as a string, separated by spaces.\n   */\n  scopes?: string | null | undefined;\n  /**\n   * If true, this client is public and you can use the Proof Key of Code Exchange (PKCE) flow.\n   */\n  public?: boolean | null | undefined;\n};\n\ntype UpdateOAuthApplicationParams = CreateOAuthApplicationParams & {\n  /**\n   * The ID of the OAuth application to update\n   */\n  oauthApplicationId: string;\n};\n\ntype GetOAuthApplicationListParams = ClerkPaginationRequest<{\n  /**\n   * Sorts OAuth applications by name or created_at.\n   * By prepending one of those values with + or -, we can choose to sort in ascending (ASC) or descending (DESC) order.\n   */\n  orderBy?: WithSign<'name' | 'created_at'>;\n}>;\n\nexport class OAuthApplicationsApi extends AbstractAPI {\n  public async list(params: GetOAuthApplicationListParams = {}) {\n    return this.request<PaginatedResourceResponse<OAuthApplication[]>>({\n      method: 'GET',\n      path: basePath,\n      queryParams: params,\n    });\n  }\n\n  public async get(oauthApplicationId: string) {\n    this.requireId(oauthApplicationId);\n\n    return this.request<OAuthApplication>({\n      method: 'GET',\n      path: joinPaths(basePath, oauthApplicationId),\n    });\n  }\n\n  public async create(params: CreateOAuthApplicationParams) {\n    return this.request<OAuthApplication>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  public async update(params: UpdateOAuthApplicationParams) {\n    const { oauthApplicationId, ...bodyParams } = params;\n\n    this.requireId(oauthApplicationId);\n\n    return this.request<OAuthApplication>({\n      method: 'PATCH',\n      path: joinPaths(basePath, oauthApplicationId),\n      bodyParams,\n    });\n  }\n\n  public async delete(oauthApplicationId: string) {\n    this.requireId(oauthApplicationId);\n\n    return this.request<DeletedObject>({\n      method: 'DELETE',\n      path: joinPaths(basePath, oauthApplicationId),\n    });\n  }\n\n  public async rotateSecret(oauthApplicationId: string) {\n    this.requireId(oauthApplicationId);\n\n    return this.request<OAuthApplication>({\n      method: 'POST',\n      path: joinPaths(basePath, oauthApplicationId, 'rotate_secret'),\n    });\n  }\n}\n", "import { joinPaths } from '../../util/path';\nimport type { DeletedObject, PhoneNumber } from '../resources';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/phone_numbers';\n\ntype CreatePhoneNumberParams = {\n  userId: string;\n  phoneNumber: string;\n  verified?: boolean;\n  primary?: boolean;\n  reservedForSecondFactor?: boolean;\n};\n\ntype UpdatePhoneNumberParams = {\n  verified?: boolean;\n  primary?: boolean;\n  reservedForSecondFactor?: boolean;\n};\n\nexport class PhoneNumberAPI extends AbstractAPI {\n  public async getPhoneNumber(phoneNumberId: string) {\n    this.requireId(phoneNumberId);\n\n    return this.request<PhoneNumber>({\n      method: 'GET',\n      path: joinPaths(basePath, phoneNumberId),\n    });\n  }\n\n  public async createPhoneNumber(params: CreatePhoneNumberParams) {\n    return this.request<PhoneNumber>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  public async updatePhoneNumber(phoneNumberId: string, params: UpdatePhoneNumberParams = {}) {\n    this.requireId(phoneNumberId);\n\n    return this.request<PhoneNumber>({\n      method: 'PATCH',\n      path: joinPaths(basePath, phoneNumberId),\n      bodyParams: params,\n    });\n  }\n\n  public async deletePhoneNumber(phoneNumberId: string) {\n    this.requireId(phoneNumberId);\n\n    return this.request<DeletedObject>({\n      method: 'DELETE',\n      path: joinPaths(basePath, phoneNumberId),\n    });\n  }\n}\n", "import type { ProxyCheck } from '../resources';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/proxy_checks';\n\ntype VerifyParams = {\n  domainId: string;\n  proxyUrl: string;\n};\n\nexport class ProxyCheckAPI extends AbstractAPI {\n  public async verify(params: VerifyParams) {\n    return this.request<ProxyCheck>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n}\n", "import { joinPaths } from '../../util/path';\nimport type { PaginatedResourceResponse } from '../resources/Deserializer';\nimport type { RedirectUrl } from '../resources/RedirectUrl';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/redirect_urls';\n\ntype CreateRedirectUrlParams = {\n  url: string;\n};\n\nexport class RedirectUrlAPI extends AbstractAPI {\n  public async getRedirectUrlList() {\n    return this.request<PaginatedResourceResponse<RedirectUrl[]>>({\n      method: 'GET',\n      path: basePath,\n      queryParams: { paginated: true },\n    });\n  }\n\n  public async getRedirectUrl(redirectUrlId: string) {\n    this.requireId(redirectUrlId);\n    return this.request<RedirectUrl>({\n      method: 'GET',\n      path: joinPaths(basePath, redirectUrlId),\n    });\n  }\n\n  public async createRedirectUrl(params: CreateRedirectUrlParams) {\n    return this.request<RedirectUrl>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  public async deleteRedirectUrl(redirectUrlId: string) {\n    this.requireId(redirectUrlId);\n    return this.request<RedirectUrl>({\n      method: 'DELETE',\n      path: joinPaths(basePath, redirectUrlId),\n    });\n  }\n}\n", "import type { ClerkPaginationRequest, SamlIdpSlug } from '@clerk/types';\n\nimport { joinPaths } from '../../util/path';\nimport type { SamlConnection } from '../resources';\nimport type { PaginatedResourceResponse } from '../resources/Deserializer';\nimport { AbstractAPI } from './AbstractApi';\nimport type { WithSign } from './util-types';\n\nconst basePath = '/saml_connections';\n\ntype SamlConnectionListParams = ClerkPaginationRequest<{\n  /**\n   * Returns SAML connections that have a name that matches the given query, via case-insensitive partial match.\n   */\n  query?: string;\n\n  /**\n   * Sorts SAML connections by phone_number, email_address, created_at, first_name, last_name or username.\n   * By prepending one of those values with + or -, we can choose to sort in ascending (ASC) or descending (DESC) order.\n   */\n  orderBy?: WithSign<'phone_number' | 'email_address' | 'created_at' | 'first_name' | 'last_name' | 'username'>;\n\n  /**\n   * Returns SAML connections that have an associated organization ID to the given organizations.\n   * For each organization id, the + and - can be prepended to the id, which denote whether the\n   * respective organization should be included or excluded from the result set. Accepts up to 100 organization ids.\n   */\n  organizationId?: WithSign<string>[];\n}>;\n\ntype CreateSamlConnectionParams = {\n  name: string;\n  provider: SamlIdpSlug;\n  domain: string;\n  organizationId?: string;\n  idpEntityId?: string;\n  idpSsoUrl?: string;\n  idpCertificate?: string;\n  idpMetadataUrl?: string;\n  idpMetadata?: string;\n  attributeMapping?: {\n    emailAddress?: string;\n    firstName?: string;\n    lastName?: string;\n    userId?: string;\n  };\n};\n\ntype UpdateSamlConnectionParams = {\n  name?: string;\n  provider?: SamlIdpSlug;\n  domain?: string;\n  organizationId?: string;\n  idpEntityId?: string;\n  idpSsoUrl?: string;\n  idpCertificate?: string;\n  idpMetadataUrl?: string;\n  idpMetadata?: string;\n  attributeMapping?: {\n    emailAddress?: string;\n    firstName?: string;\n    lastName?: string;\n    userId?: string;\n  };\n  active?: boolean;\n  syncUserAttributes?: boolean;\n  allowSubdomains?: boolean;\n  allowIdpInitiated?: boolean;\n};\n\nexport class SamlConnectionAPI extends AbstractAPI {\n  public async getSamlConnectionList(params: SamlConnectionListParams = {}) {\n    return this.request<PaginatedResourceResponse<SamlConnection[]>>({\n      method: 'GET',\n      path: basePath,\n      queryParams: params,\n    });\n  }\n\n  public async createSamlConnection(params: CreateSamlConnectionParams) {\n    return this.request<SamlConnection>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n      options: {\n        deepSnakecaseBodyParamKeys: true,\n      },\n    });\n  }\n\n  public async getSamlConnection(samlConnectionId: string) {\n    this.requireId(samlConnectionId);\n    return this.request<SamlConnection>({\n      method: 'GET',\n      path: joinPaths(basePath, samlConnectionId),\n    });\n  }\n\n  public async updateSamlConnection(samlConnectionId: string, params: UpdateSamlConnectionParams = {}) {\n    this.requireId(samlConnectionId);\n\n    return this.request<SamlConnection>({\n      method: 'PATCH',\n      path: joinPaths(basePath, samlConnectionId),\n      bodyParams: params,\n      options: {\n        deepSnakecaseBodyParamKeys: true,\n      },\n    });\n  }\n  public async deleteSamlConnection(samlConnectionId: string) {\n    this.requireId(samlConnectionId);\n    return this.request<SamlConnection>({\n      method: 'DELETE',\n      path: joinPaths(basePath, samlConnectionId),\n    });\n  }\n}\n", "import type { ClerkPaginationRequest, SessionStatus } from '@clerk/types';\n\nimport { joinPaths } from '../../util/path';\nimport type { Cookies } from '../resources/Cookies';\nimport type { PaginatedResourceResponse } from '../resources/Deserializer';\nimport type { Session } from '../resources/Session';\nimport type { Token } from '../resources/Token';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/sessions';\n\ntype SessionListParams = ClerkPaginationRequest<{\n  clientId?: string;\n  userId?: string;\n  status?: SessionStatus;\n}>;\n\ntype RefreshTokenParams = {\n  expired_token: string;\n  refresh_token: string;\n  request_origin: string;\n  request_originating_ip?: string;\n  request_headers?: Record<string, string[]>;\n  suffixed_cookies?: boolean;\n  format?: 'token' | 'cookie';\n};\n\ntype CreateSessionParams = {\n  userId: string;\n};\n\nexport class SessionAPI extends AbstractAPI {\n  public async getSessionList(params: SessionListParams = {}) {\n    return this.request<PaginatedResourceResponse<Session[]>>({\n      method: 'GET',\n      path: basePath,\n      queryParams: { ...params, paginated: true },\n    });\n  }\n\n  public async getSession(sessionId: string) {\n    this.requireId(sessionId);\n    return this.request<Session>({\n      method: 'GET',\n      path: joinPaths(basePath, sessionId),\n    });\n  }\n\n  public async createSession(params: CreateSessionParams) {\n    return this.request<Session>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  public async revokeSession(sessionId: string) {\n    this.requireId(sessionId);\n    return this.request<Session>({\n      method: 'POST',\n      path: joinPaths(basePath, sessionId, 'revoke'),\n    });\n  }\n\n  public async verifySession(sessionId: string, token: string) {\n    this.requireId(sessionId);\n    return this.request<Session>({\n      method: 'POST',\n      path: joinPaths(basePath, sessionId, 'verify'),\n      bodyParams: { token },\n    });\n  }\n\n  /**\n   * Retrieves a session token or generates a JWT using a specified template.\n   *\n   * @param sessionId - The ID of the session for which to generate the token\n   * @param template - Optional name of the JWT template configured in the Clerk Dashboard.\n   * @param expiresInSeconds - Optional expiration time for the token in seconds.\n   *   If not provided, uses the default expiration.\n   *\n   * @returns A promise that resolves to the generated token\n   *\n   * @throws {Error} When sessionId is invalid or empty\n   */\n  public async getToken(sessionId: string, template?: string, expiresInSeconds?: number) {\n    this.requireId(sessionId);\n\n    const path = template\n      ? joinPaths(basePath, sessionId, 'tokens', template)\n      : joinPaths(basePath, sessionId, 'tokens');\n\n    const requestOptions: any = {\n      method: 'POST',\n      path,\n    };\n\n    if (expiresInSeconds !== undefined) {\n      requestOptions.bodyParams = { expires_in_seconds: expiresInSeconds };\n    }\n\n    return this.request<Token>(requestOptions);\n  }\n\n  public async refreshSession(sessionId: string, params: RefreshTokenParams & { format: 'token' }): Promise<Token>;\n  public async refreshSession(sessionId: string, params: RefreshTokenParams & { format: 'cookie' }): Promise<Cookies>;\n  public async refreshSession(sessionId: string, params: RefreshTokenParams): Promise<Token>;\n  public async refreshSession(sessionId: string, params: RefreshTokenParams): Promise<Token | Cookies> {\n    this.requireId(sessionId);\n    const { suffixed_cookies, ...restParams } = params;\n    return this.request({\n      method: 'POST',\n      path: joinPaths(basePath, sessionId, 'refresh'),\n      bodyParams: restParams,\n      queryParams: { suffixed_cookies },\n    });\n  }\n}\n", "import { joinPaths } from '../../util/path';\nimport type { SignInToken } from '../resources/SignInTokens';\nimport { AbstractAPI } from './AbstractApi';\n\ntype CreateSignInTokensParams = {\n  userId: string;\n  expiresInSeconds: number;\n};\n\nconst basePath = '/sign_in_tokens';\n\nexport class SignInTokenAPI extends AbstractAPI {\n  public async createSignInToken(params: CreateSignInTokensParams) {\n    return this.request<SignInToken>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  public async revokeSignInToken(signInTokenId: string) {\n    this.requireId(signInTokenId);\n    return this.request<SignInToken>({\n      method: 'POST',\n      path: joinPaths(basePath, signInTokenId, 'revoke'),\n    });\n  }\n}\n", "import { joinPaths } from '../../util/path';\nimport type { SignUpAttempt } from '../resources/SignUpAttempt';\nimport { AbstractAPI } from './AbstractApi';\n\ntype UpdateSignUpParams = {\n  signUpAttemptId: string;\n  externalId?: string | null;\n  customAction?: boolean | null;\n};\n\nconst basePath = '/sign_ups';\n\nexport class SignUpAPI extends AbstractAPI {\n  public async get(signUpAttemptId: string) {\n    this.requireId(signUpAttemptId);\n\n    return this.request<SignUpAttempt>({\n      method: 'GET',\n      path: joinPaths(basePath, signUpAttemptId),\n    });\n  }\n\n  public async update(params: UpdateSignUpParams) {\n    const { signUpAttemptId, ...bodyParams } = params;\n\n    return this.request<SignUpAttempt>({\n      method: 'PATCH',\n      path: joinPaths(basePath, signUpAttemptId),\n      bodyParams,\n    });\n  }\n}\n", "import type { TestingToken } from '../resources/TestingToken';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/testing_tokens';\n\nexport class TestingTokenAPI extends AbstractAPI {\n  public async createTestingToken() {\n    return this.request<TestingToken>({\n      method: 'POST',\n      path: basePath,\n    });\n  }\n}\n", "import type { ClerkPaginationRequest, OAuthProvider, OrganizationInvitationStatus } from '@clerk/types';\n\nimport { runtime } from '../../runtime';\nimport { joinPaths } from '../../util/path';\nimport { deprecated } from '../../util/shared';\nimport type {\n  DeletedObject,\n  OauthAccessToken,\n  OrganizationInvitation,\n  OrganizationMembership,\n  User,\n} from '../resources';\nimport type { PaginatedResourceResponse } from '../resources/Deserializer';\nimport { AbstractAPI } from './AbstractApi';\nimport type { WithSign } from './util-types';\n\nconst basePath = '/users';\n\ntype UserCountParams = {\n  emailAddress?: string[];\n  phoneNumber?: string[];\n  username?: string[];\n  web3Wallet?: string[];\n  query?: string;\n  userId?: string[];\n  externalId?: string[];\n};\n\ntype UserListParams = ClerkPaginationRequest<\n  UserCountParams & {\n    orderBy?: WithSign<\n      | 'created_at'\n      | 'updated_at'\n      | 'email_address'\n      | 'web3wallet'\n      | 'first_name'\n      | 'last_name'\n      | 'phone_number'\n      | 'username'\n      | 'last_active_at'\n      | 'last_sign_in_at'\n    >;\n    last_active_at_since?: number;\n    organizationId?: string[];\n  }\n>;\n\ntype UserMetadataParams = {\n  publicMetadata?: UserPublicMetadata;\n  privateMetadata?: UserPrivateMetadata;\n  unsafeMetadata?: UserUnsafeMetadata;\n};\n\ntype PasswordHasher =\n  | 'argon2i'\n  | 'argon2id'\n  | 'awscognito'\n  | 'bcrypt'\n  | 'bcrypt_sha256_django'\n  | 'md5'\n  | 'pbkdf2_sha256'\n  | 'pbkdf2_sha256_django'\n  | 'pbkdf2_sha1'\n  | 'phpass'\n  | 'scrypt_firebase'\n  | 'scrypt_werkzeug'\n  | 'sha256'\n  | 'md5_phpass'\n  | 'ldap_ssha';\n\ntype UserPasswordHashingParams = {\n  passwordDigest: string;\n  passwordHasher: PasswordHasher;\n};\n\ntype CreateUserParams = {\n  externalId?: string;\n  emailAddress?: string[];\n  phoneNumber?: string[];\n  username?: string;\n  password?: string;\n  firstName?: string;\n  lastName?: string;\n  skipPasswordChecks?: boolean;\n  skipPasswordRequirement?: boolean;\n  skipLegalChecks?: boolean;\n  legalAcceptedAt?: Date;\n  totpSecret?: string;\n  backupCodes?: string[];\n  createdAt?: Date;\n} & UserMetadataParams &\n  (UserPasswordHashingParams | object);\n\ntype UpdateUserParams = {\n  /** The first name to assign to the user. */\n  firstName?: string;\n\n  /** The last name of the user. */\n  lastName?: string;\n\n  /** The username to give to the user. It must be unique across your instance. */\n  username?: string;\n\n  /** The plaintext password to give the user. Must be at least 8 characters long, and can not be in any list of hacked passwords. */\n  password?: string;\n\n  /** Set it to true if you're updating the user's password and want to skip any password policy settings check. This parameter can only be used when providing a password. */\n  skipPasswordChecks?: boolean;\n\n  /** Set to true to sign out the user from all their active sessions once their password is updated. This parameter can only be used when providing a password. */\n  signOutOfOtherSessions?: boolean;\n\n  /** The ID of the email address to set as primary. It must be verified, and present on the current user. */\n  primaryEmailAddressID?: string;\n\n  /** If set to true, the user will be notified that their primary email address has changed. By default, no notification is sent. */\n  notifyPrimaryEmailAddressChanged?: boolean;\n\n  /** The ID of the phone number to set as primary. It must be verified, and present on the current user. */\n  primaryPhoneNumberID?: string;\n\n  /** The ID of the web3 wallets to set as primary. It must be verified, and present on the current user. */\n  primaryWeb3WalletID?: string;\n\n  /** The ID of the image to set as the user's profile image */\n  profileImageID?: string;\n\n  /**\n   * In case TOTP is configured on the instance, you can provide the secret to enable it on the specific user without the need to reset it.\n   * Please note that currently the supported options are:\n   * - Period: 30 seconds\n   * - Code length: 6 digits\n   * - Algorithm: SHA1\n   */\n  totpSecret?: string;\n\n  /** If Backup Codes are configured on the instance, you can provide them to enable it on the specific user without the need to reset them. You must provide the backup codes in plain format or the corresponding bcrypt digest. */\n  backupCodes?: string[];\n\n  /** The ID of the user as used in your external systems or your previous authentication solution. Must be unique across your instance. */\n  externalId?: string;\n\n  /** A custom timestamp denoting when the user signed up to the application, specified in RFC3339 format (e.g. 2012-10-20T07:15:20.902Z). */\n  createdAt?: Date;\n\n  /** When set to true all legal checks are skipped. It is not recommended to skip legal checks unless you are migrating a user to Clerk. */\n  skipLegalChecks?: boolean;\n\n  /** A custom timestamp denoting when the user accepted legal requirements, specified in RFC3339 format (e.g. 2012-10-20T07:15:20.902Z). */\n  legalAcceptedAt?: Date;\n\n  /** If true, the user can delete themselves with the Frontend API. */\n  deleteSelfEnabled?: boolean;\n\n  /** If true, the user can create organizations with the Frontend API. */\n  createOrganizationEnabled?: boolean;\n\n  /** The maximum number of organizations the user can create. 0 means unlimited. */\n  createOrganizationsLimit?: number;\n} & UserMetadataParams &\n  (UserPasswordHashingParams | object);\n\ntype GetOrganizationMembershipListParams = ClerkPaginationRequest<{\n  userId: string;\n}>;\n\ntype GetOrganizationInvitationListParams = ClerkPaginationRequest<{\n  userId: string;\n  status?: OrganizationInvitationStatus;\n}>;\n\ntype VerifyPasswordParams = {\n  userId: string;\n  password: string;\n};\n\ntype VerifyTOTPParams = {\n  userId: string;\n  code: string;\n};\n\ntype DeleteUserPasskeyParams = {\n  userId: string;\n  passkeyIdentificationId: string;\n};\n\ntype DeleteWeb3WalletParams = {\n  userId: string;\n  web3WalletIdentificationId: string;\n};\n\ntype DeleteUserExternalAccountParams = {\n  userId: string;\n  externalAccountId: string;\n};\n\ntype UserID = {\n  userId: string;\n};\n\nexport class UserAPI extends AbstractAPI {\n  public async getUserList(params: UserListParams = {}) {\n    const { limit, offset, orderBy, ...userCountParams } = params;\n    // TODO(dimkl): Temporary change to populate totalCount using a 2nd BAPI call to /users/count endpoint\n    // until we update the /users endpoint to be paginated in a next BAPI version.\n    // In some edge cases the data.length != totalCount due to a creation of a user between the 2 api responses\n    const [data, totalCount] = await Promise.all([\n      this.request<User[]>({\n        method: 'GET',\n        path: basePath,\n        queryParams: params,\n      }),\n      this.getCount(userCountParams),\n    ]);\n    return { data, totalCount } as PaginatedResourceResponse<User[]>;\n  }\n\n  public async getUser(userId: string) {\n    this.requireId(userId);\n    return this.request<User>({\n      method: 'GET',\n      path: joinPaths(basePath, userId),\n    });\n  }\n\n  public async createUser(params: CreateUserParams) {\n    return this.request<User>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n\n  public async updateUser(userId: string, params: UpdateUserParams = {}) {\n    this.requireId(userId);\n\n    return this.request<User>({\n      method: 'PATCH',\n      path: joinPaths(basePath, userId),\n      bodyParams: params,\n    });\n  }\n\n  public async updateUserProfileImage(userId: string, params: { file: Blob | File }) {\n    this.requireId(userId);\n\n    const formData = new runtime.FormData();\n    formData.append('file', params?.file);\n\n    return this.request<User>({\n      method: 'POST',\n      path: joinPaths(basePath, userId, 'profile_image'),\n      formData,\n    });\n  }\n\n  public async updateUserMetadata(userId: string, params: UserMetadataParams) {\n    this.requireId(userId);\n\n    return this.request<User>({\n      method: 'PATCH',\n      path: joinPaths(basePath, userId, 'metadata'),\n      bodyParams: params,\n    });\n  }\n\n  public async deleteUser(userId: string) {\n    this.requireId(userId);\n    return this.request<User>({\n      method: 'DELETE',\n      path: joinPaths(basePath, userId),\n    });\n  }\n\n  public async getCount(params: UserCountParams = {}) {\n    return this.request<number>({\n      method: 'GET',\n      path: joinPaths(basePath, 'count'),\n      queryParams: params,\n    });\n  }\n\n  /** @deprecated Use `getUserOauthAccessToken` without the `oauth_` provider prefix . */\n  public async getUserOauthAccessToken(\n    userId: string,\n    provider: `oauth_${OAuthProvider}`,\n  ): Promise<PaginatedResourceResponse<OauthAccessToken[]>>;\n  public async getUserOauthAccessToken(\n    userId: string,\n    provider: OAuthProvider,\n  ): Promise<PaginatedResourceResponse<OauthAccessToken[]>>;\n  public async getUserOauthAccessToken(userId: string, provider: `oauth_${OAuthProvider}` | OAuthProvider) {\n    this.requireId(userId);\n    const hasPrefix = provider.startsWith('oauth_');\n    const _provider = hasPrefix ? provider : `oauth_${provider}`;\n\n    if (hasPrefix) {\n      deprecated(\n        'getUserOauthAccessToken(userId, provider)',\n        'Remove the `oauth_` prefix from the `provider` argument.',\n      );\n    }\n\n    return this.request<PaginatedResourceResponse<OauthAccessToken[]>>({\n      method: 'GET',\n      path: joinPaths(basePath, userId, 'oauth_access_tokens', _provider),\n      queryParams: { paginated: true },\n    });\n  }\n\n  public async disableUserMFA(userId: string) {\n    this.requireId(userId);\n    return this.request<UserID>({\n      method: 'DELETE',\n      path: joinPaths(basePath, userId, 'mfa'),\n    });\n  }\n\n  public async getOrganizationMembershipList(params: GetOrganizationMembershipListParams) {\n    const { userId, limit, offset } = params;\n    this.requireId(userId);\n\n    return this.request<PaginatedResourceResponse<OrganizationMembership[]>>({\n      method: 'GET',\n      path: joinPaths(basePath, userId, 'organization_memberships'),\n      queryParams: { limit, offset },\n    });\n  }\n\n  public async getOrganizationInvitationList(params: GetOrganizationInvitationListParams) {\n    const { userId, ...queryParams } = params;\n    this.requireId(userId);\n\n    return this.request<PaginatedResourceResponse<OrganizationInvitation[]>>({\n      method: 'GET',\n      path: joinPaths(basePath, userId, 'organization_invitations'),\n      queryParams,\n    });\n  }\n\n  public async verifyPassword(params: VerifyPasswordParams) {\n    const { userId, password } = params;\n    this.requireId(userId);\n\n    return this.request<{ verified: true }>({\n      method: 'POST',\n      path: joinPaths(basePath, userId, 'verify_password'),\n      bodyParams: { password },\n    });\n  }\n\n  public async verifyTOTP(params: VerifyTOTPParams) {\n    const { userId, code } = params;\n    this.requireId(userId);\n\n    return this.request<{ verified: true; code_type: 'totp' }>({\n      method: 'POST',\n      path: joinPaths(basePath, userId, 'verify_totp'),\n      bodyParams: { code },\n    });\n  }\n\n  public async banUser(userId: string) {\n    this.requireId(userId);\n    return this.request<User>({\n      method: 'POST',\n      path: joinPaths(basePath, userId, 'ban'),\n    });\n  }\n\n  public async unbanUser(userId: string) {\n    this.requireId(userId);\n    return this.request<User>({\n      method: 'POST',\n      path: joinPaths(basePath, userId, 'unban'),\n    });\n  }\n\n  public async lockUser(userId: string) {\n    this.requireId(userId);\n    return this.request<User>({\n      method: 'POST',\n      path: joinPaths(basePath, userId, 'lock'),\n    });\n  }\n\n  public async unlockUser(userId: string) {\n    this.requireId(userId);\n    return this.request<User>({\n      method: 'POST',\n      path: joinPaths(basePath, userId, 'unlock'),\n    });\n  }\n\n  public async deleteUserProfileImage(userId: string) {\n    this.requireId(userId);\n    return this.request<User>({\n      method: 'DELETE',\n      path: joinPaths(basePath, userId, 'profile_image'),\n    });\n  }\n\n  public async deleteUserPasskey(params: DeleteUserPasskeyParams) {\n    this.requireId(params.userId);\n    this.requireId(params.passkeyIdentificationId);\n    return this.request<DeletedObject>({\n      method: 'DELETE',\n      path: joinPaths(basePath, params.userId, 'passkeys', params.passkeyIdentificationId),\n    });\n  }\n\n  public async deleteUserWeb3Wallet(params: DeleteWeb3WalletParams) {\n    this.requireId(params.userId);\n    this.requireId(params.web3WalletIdentificationId);\n    return this.request<DeletedObject>({\n      method: 'DELETE',\n      path: joinPaths(basePath, params.userId, 'web3_wallets', params.web3WalletIdentificationId),\n    });\n  }\n\n  public async deleteUserExternalAccount(params: DeleteUserExternalAccountParams) {\n    this.requireId(params.userId);\n    this.requireId(params.externalAccountId);\n    return this.request<DeletedObject>({\n      method: 'DELETE',\n      path: joinPaths(basePath, params.userId, 'external_accounts', params.externalAccountId),\n    });\n  }\n\n  public async deleteUserBackupCodes(userId: string) {\n    this.requireId(userId);\n    return this.request<UserID>({\n      method: 'DELETE',\n      path: joinPaths(basePath, userId, 'backup_code'),\n    });\n  }\n\n  public async deleteUserTOTP(userId: string) {\n    this.requireId(userId);\n    return this.request<UserID>({\n      method: 'DELETE',\n      path: joinPaths(basePath, userId, 'totp'),\n    });\n  }\n}\n", "import type { ClerkPaginationRequest } from '@clerk/types';\n\nimport type { PaginatedResourceResponse } from '../resources/Deserializer';\nimport type { WaitlistEntryStatus } from '../resources/Enums';\nimport type { WaitlistEntry } from '../resources/WaitlistEntry';\nimport { AbstractAPI } from './AbstractApi';\nimport type { WithSign } from './util-types';\n\nconst basePath = '/waitlist_entries';\n\ntype WaitlistEntryListParams = ClerkPaginationRequest<{\n  /**\n   * Filter waitlist entries by `email_address` or `id`\n   */\n  query?: string;\n  status?: WaitlistEntryStatus;\n  orderBy?: WithSign<'created_at' | 'invited_at' | 'email_address'>;\n}>;\n\ntype WaitlistEntryCreateParams = {\n  emailAddress: string;\n  notify?: boolean;\n};\n\nexport class WaitlistEntryAPI extends AbstractAPI {\n  public async list(params: WaitlistEntryListParams = {}) {\n    return this.request<PaginatedResourceResponse<WaitlistEntry>>({\n      method: 'GET',\n      path: basePath,\n      queryParams: params,\n    });\n  }\n\n  public async create(params: WaitlistEntryCreateParams) {\n    return this.request<WaitlistEntry>({\n      method: 'POST',\n      path: basePath,\n      bodyParams: params,\n    });\n  }\n}\n", "import { joinPaths } from '../../util/path';\nimport type { WebhooksSvixJSON } from '../resources/JSON';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/webhooks';\n\nexport class WebhookAPI extends AbstractAPI {\n  public async createSvixApp() {\n    return this.request<WebhooksSvixJSON>({\n      method: 'POST',\n      path: joinPaths(basePath, 'svix'),\n    });\n  }\n\n  public async generateSvixAuthURL() {\n    return this.request<WebhooksSvixJSON>({\n      method: 'POST',\n      path: joinPaths(basePath, 'svix_url'),\n    });\n  }\n\n  public async deleteSvixApp() {\n    return this.request<void>({\n      method: 'DELETE',\n      path: joinPaths(basePath, 'svix'),\n    });\n  }\n}\n", "import type { ClerkPaginationRequest } from '@clerk/types';\n\nimport { joinPaths } from '../../util/path';\nimport type { CommercePlan } from '../resources/CommercePlan';\nimport type { CommerceSubscription } from '../resources/CommerceSubscription';\nimport type { CommerceSubscriptionItem } from '../resources/CommerceSubscriptionItem';\nimport type { PaginatedResourceResponse } from '../resources/Deserializer';\nimport { AbstractAPI } from './AbstractApi';\n\nconst basePath = '/commerce';\nconst organizationBasePath = '/organizations';\nconst userBasePath = '/users';\n\ntype GetOrganizationListParams = ClerkPaginationRequest<{\n  payerType: 'org' | 'user';\n}>;\n\ntype CancelSubscriptionItemParams = {\n  /**\n   * If true, the subscription item will be canceled immediately. If false or undefined, the subscription item will be canceled at the end of the current billing period.\n   * @default undefined\n   */\n  endNow?: boolean;\n};\n\ntype ExtendSubscriptionItemFreeTrialParams = {\n  /**\n   * RFC3339 timestamp to extend the free trial to.\n   * Must be in the future and not more than 365 days from the current trial end.\n   */\n  extendTo: Date;\n};\n\nexport class BillingAPI extends AbstractAPI {\n  /**\n   * @experimental This is an experimental API for the Billing feature that is available under a public beta, and the API is subject to change.\n   * It is advised to pin the SDK version to avoid breaking changes.\n   */\n  public async getPlanList(params?: GetOrganizationListParams) {\n    return this.request<PaginatedResourceResponse<CommercePlan[]>>({\n      method: 'GET',\n      path: joinPaths(basePath, 'plans'),\n      queryParams: params,\n    });\n  }\n\n  /**\n   * @experimental This is an experimental API for the Billing feature that is available under a public beta, and the API is subject to change.\n   * It is advised to pin the SDK version to avoid breaking changes.\n   */\n  public async cancelSubscriptionItem(subscriptionItemId: string, params?: CancelSubscriptionItemParams) {\n    this.requireId(subscriptionItemId);\n    return this.request<CommerceSubscriptionItem>({\n      method: 'DELETE',\n      path: joinPaths(basePath, 'subscription_items', subscriptionItemId),\n      queryParams: params,\n    });\n  }\n\n  /**\n   * @experimental This is an experimental API for the Billing feature that is available under a public beta, and the API is subject to change.\n   * It is advised to pin the SDK version to avoid breaking changes.\n   */\n  public async extendSubscriptionItemFreeTrial(\n    subscriptionItemId: string,\n    params: ExtendSubscriptionItemFreeTrialParams,\n  ) {\n    this.requireId(subscriptionItemId);\n    return this.request<CommerceSubscriptionItem>({\n      method: 'POST',\n      path: joinPaths('/billing', 'subscription_items', subscriptionItemId, 'extend_free_trial'),\n      bodyParams: params,\n    });\n  }\n\n  /**\n   * @experimental This is an experimental API for the Billing feature that is available under a public beta, and the API is subject to change.\n   * It is advised to pin the SDK version to avoid breaking changes.\n   */\n  public async getOrganizationBillingSubscription(organizationId: string) {\n    this.requireId(organizationId);\n    return this.request<CommerceSubscription>({\n      method: 'GET',\n      path: joinPaths(organizationBasePath, organizationId, 'billing', 'subscription'),\n    });\n  }\n\n  /**\n   * @experimental This is an experimental API for the Billing feature that is available under a public beta, and the API is subject to change.\n   * It is advised to pin the SDK version to avoid breaking changes.\n   */\n  public async getUserBillingSubscription(userId: string) {\n    this.requireId(userId);\n    return this.request<CommerceSubscription>({\n      method: 'GET',\n      path: joinPaths(userBasePath, userId, 'billing', 'subscription'),\n    });\n  }\n}\n", "import { ClerkAPIResponseError, parseError } from '@clerk/shared/error';\nimport type { ClerkAPIError, ClerkAPIErrorJSON } from '@clerk/types';\nimport snakecaseKeys from 'snakecase-keys';\n\nimport { API_URL, API_VERSION, constants, SUPPORTED_BAPI_VERSION, USER_AGENT } from '../constants';\nimport { runtime } from '../runtime';\nimport { assertValidSecretKey } from '../util/optionsAssertions';\nimport { joinPaths } from '../util/path';\nimport { deserialize } from './resources/Deserializer';\n\ntype ClerkBackendApiRequestOptionsUrlOrPath =\n  | {\n      url: string;\n      path?: string;\n    }\n  | {\n      url?: string;\n      path: string;\n    };\n\ntype ClerkBackendApiRequestOptionsBodyParams =\n  | {\n      bodyParams: Record<string, unknown> | Array<Record<string, unknown>>;\n      options?: {\n        /**\n         * If true, snakecases the keys of the bodyParams object recursively.\n         * @default false\n         */\n        deepSnakecaseBodyParamKeys?: boolean;\n      };\n    }\n  | {\n      bodyParams?: never;\n      options?: {\n        deepSnakecaseBodyParamKeys?: never;\n      };\n    };\n\nexport type ClerkBackendApiRequestOptions = {\n  method: 'GET' | 'POST' | 'PATCH' | 'DELETE' | 'PUT';\n  queryParams?: Record<string, unknown>;\n  headerParams?: Record<string, string>;\n  formData?: FormData;\n} & ClerkBackendApiRequestOptionsUrlOrPath &\n  ClerkBackendApiRequestOptionsBodyParams;\n\nexport type ClerkBackendApiResponse<T> =\n  | {\n      data: T;\n      errors: null;\n      totalCount?: number;\n    }\n  | {\n      data: null;\n      errors: ClerkAPIError[];\n      totalCount?: never;\n      clerkTraceId?: string;\n      status?: number;\n      statusText?: string;\n      retryAfter?: number;\n    };\n\nexport type RequestFunction = ReturnType<typeof buildRequest>;\n\ntype BuildRequestOptions = {\n  /* Secret Key */\n  secretKey?: string;\n  /* Backend API URL */\n  apiUrl?: string;\n  /* Backend API version */\n  apiVersion?: string;\n  /* Library/SDK name */\n  userAgent?: string;\n  /**\n   * Allow requests without specifying a secret key. In most cases this should be set to `false`.\n   * @default true\n   */\n  requireSecretKey?: boolean;\n  /**\n   * If true, omits the API version from the request URL path.\n   * This is required for bapi-proxy endpoints, which do not use versioning in the URL.\n   *\n   * Note: API versioning for these endpoints is instead handled via the `Clerk-API-Version` HTTP header.\n   *\n   * @default false\n   */\n  skipApiVersionInUrl?: boolean;\n  /* Machine secret key */\n  machineSecretKey?: string;\n  /**\n   * If true, uses machineSecretKey for authorization instead of secretKey.\n   *\n   * Note: This is only used for machine-to-machine tokens.\n   *\n   * @default false\n   */\n  useMachineSecretKey?: boolean;\n};\n\nexport function buildRequest(options: BuildRequestOptions) {\n  const requestFn = async <T>(requestOptions: ClerkBackendApiRequestOptions): Promise<ClerkBackendApiResponse<T>> => {\n    const {\n      secretKey,\n      machineSecretKey,\n      useMachineSecretKey = false,\n      requireSecretKey = true,\n      apiUrl = API_URL,\n      apiVersion = API_VERSION,\n      userAgent = USER_AGENT,\n      skipApiVersionInUrl = false,\n    } = options;\n    const { path, method, queryParams, headerParams, bodyParams, formData, options: opts } = requestOptions;\n    const { deepSnakecaseBodyParamKeys = false } = opts || {};\n\n    if (requireSecretKey) {\n      assertValidSecretKey(secretKey);\n    }\n\n    const url = skipApiVersionInUrl ? joinPaths(apiUrl, path) : joinPaths(apiUrl, apiVersion, path);\n\n    // Build final URL with search parameters\n    const finalUrl = new URL(url);\n\n    if (queryParams) {\n      // Snakecase query parameters\n      const snakecasedQueryParams = snakecaseKeys({ ...queryParams });\n\n      // Support array values for queryParams such as { foo: [42, 43] }\n      for (const [key, val] of Object.entries(snakecasedQueryParams)) {\n        if (val) {\n          [val].flat().forEach(v => finalUrl.searchParams.append(key, v as string));\n        }\n      }\n    }\n\n    // Build headers\n    const headers = new Headers({\n      'Clerk-API-Version': SUPPORTED_BAPI_VERSION,\n      [constants.Headers.UserAgent]: userAgent,\n      ...headerParams,\n    });\n\n    // If Authorization header already exists, preserve it.\n    // Otherwise, use machine secret key if enabled, or fall back to regular secret key\n    const authorizationHeader = constants.Headers.Authorization;\n    if (!headers.has(authorizationHeader)) {\n      if (useMachineSecretKey && machineSecretKey) {\n        headers.set(authorizationHeader, `Bearer ${machineSecretKey}`);\n      } else if (secretKey) {\n        headers.set(authorizationHeader, `Bearer ${secretKey}`);\n      }\n    }\n\n    let res: Response | undefined;\n    try {\n      if (formData) {\n        res = await runtime.fetch(finalUrl.href, {\n          method,\n          headers,\n          body: formData,\n        });\n      } else {\n        // Enforce application/json for all non form-data requests\n        headers.set('Content-Type', 'application/json');\n\n        const buildBody = () => {\n          const hasBody = method !== 'GET' && bodyParams && Object.keys(bodyParams).length > 0;\n          if (!hasBody) {\n            return null;\n          }\n\n          const formatKeys = (object: Parameters<typeof snakecaseKeys>[0]) =>\n            snakecaseKeys(object, { deep: deepSnakecaseBodyParamKeys });\n\n          return {\n            body: JSON.stringify(Array.isArray(bodyParams) ? bodyParams.map(formatKeys) : formatKeys(bodyParams)),\n          };\n        };\n\n        res = await runtime.fetch(finalUrl.href, {\n          method,\n          headers,\n          ...buildBody(),\n        });\n      }\n\n      // TODO: Parse JSON or Text response based on a response header\n      const isJSONResponse =\n        res?.headers && res.headers?.get(constants.Headers.ContentType) === constants.ContentTypes.Json;\n      const responseBody = await (isJSONResponse ? res.json() : res.text());\n\n      if (!res.ok) {\n        return {\n          data: null,\n          errors: parseErrors(responseBody),\n          status: res?.status,\n          statusText: res?.statusText,\n          clerkTraceId: getTraceId(responseBody, res?.headers),\n          retryAfter: getRetryAfter(res?.headers),\n        };\n      }\n\n      return {\n        ...deserialize<T>(responseBody),\n        errors: null,\n      };\n    } catch (err) {\n      if (err instanceof Error) {\n        return {\n          data: null,\n          errors: [\n            {\n              code: 'unexpected_error',\n              message: err.message || 'Unexpected error',\n            },\n          ],\n          clerkTraceId: getTraceId(err, res?.headers),\n        };\n      }\n\n      return {\n        data: null,\n        errors: parseErrors(err),\n        status: res?.status,\n        statusText: res?.statusText,\n        clerkTraceId: getTraceId(err, res?.headers),\n        retryAfter: getRetryAfter(res?.headers),\n      };\n    }\n  };\n\n  return withLegacyRequestReturn(requestFn);\n}\n\n// Returns either clerk_trace_id if present in response json, otherwise defaults to CF-Ray header\n// If the request failed before receiving a response, returns undefined\nfunction getTraceId(data: unknown, headers?: Headers): string {\n  if (data && typeof data === 'object' && 'clerk_trace_id' in data && typeof data.clerk_trace_id === 'string') {\n    return data.clerk_trace_id;\n  }\n\n  const cfRay = headers?.get('cf-ray');\n  return cfRay || '';\n}\n\nfunction getRetryAfter(headers?: Headers): number | undefined {\n  const retryAfter = headers?.get('Retry-After');\n  if (!retryAfter) {\n    return;\n  }\n\n  const value = parseInt(retryAfter, 10);\n  if (isNaN(value)) {\n    return;\n  }\n\n  return value;\n}\n\nfunction parseErrors(data: unknown): ClerkAPIError[] {\n  if (!!data && typeof data === 'object' && 'errors' in data) {\n    const errors = data.errors as ClerkAPIErrorJSON[];\n    return errors.length > 0 ? errors.map(parseError) : [];\n  }\n  return [];\n}\n\ntype LegacyRequestFunction = <T>(requestOptions: ClerkBackendApiRequestOptions) => Promise<T>;\n\n// TODO(dimkl): Will be probably be dropped in next major version\nfunction withLegacyRequestReturn(cb: any): LegacyRequestFunction {\n  return async (...args) => {\n    const { data, errors, totalCount, status, statusText, clerkTraceId, retryAfter } = await cb(...args);\n    if (errors) {\n      // instead of passing `data: errors`, we have set the `error.errors` because\n      // the errors returned from callback is already parsed and passing them as `data`\n      // will not be able to assign them to the instance\n      const error = new ClerkAPIResponseError(statusText || '', {\n        data: [],\n        status,\n        clerkTraceId,\n        retryAfter,\n      });\n      error.errors = errors;\n      throw error;\n    }\n\n    if (typeof totalCount !== 'undefined') {\n      return { data, totalCount };\n    }\n\n    return data;\n  };\n}\n", "const isObject = value => typeof value === 'object' && value !== null;\n\n// Customized for this use-case\nconst isObjectCustom = value =>\n\tisObject(value)\n\t&& !(value instanceof RegExp)\n\t&& !(value instanceof Error)\n\t&& !(value instanceof Date)\n\t&& !(globalThis.Blob && value instanceof globalThis.Blob);\n\nexport const mapObjectSkip = Symbol('mapObjectSkip');\n\nconst _mapObject = (object, mapper, options, isSeen = new WeakMap()) => {\n\toptions = {\n\t\tdeep: false,\n\t\ttarget: {},\n\t\t...options,\n\t};\n\n\tif (isSeen.has(object)) {\n\t\treturn isSeen.get(object);\n\t}\n\n\tisSeen.set(object, options.target);\n\n\tconst {target} = options;\n\tdelete options.target;\n\n\tconst mapArray = array => array.map(element => isObjectCustom(element) ? _mapObject(element, mapper, options, isSeen) : element);\n\tif (Array.isArray(object)) {\n\t\treturn mapArray(object);\n\t}\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tconst mapResult = mapper(key, value, object);\n\n\t\tif (mapResult === mapObjectSkip) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [newKey, newValue, {shouldRecurse = true} = {}] = mapResult;\n\n\t\t// Drop `__proto__` keys.\n\t\tif (newKey === '__proto__') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (options.deep && shouldRecurse && isObjectCustom(newValue)) {\n\t\t\tnewValue = Array.isArray(newValue)\n\t\t\t\t? mapArray(newValue)\n\t\t\t\t: _mapObject(newValue, mapper, options, isSeen);\n\t\t}\n\n\t\ttarget[newKey] = newValue;\n\t}\n\n\treturn target;\n};\n\nexport default function mapObject(object, mapper, options) {\n\tif (!isObject(object)) {\n\t\tthrow new TypeError(`Expected an object, got \\`${object}\\` (${typeof object})`);\n\t}\n\n\tif (Array.isArray(object)) {\n\t\tthrow new TypeError('Expected an object, got an array');\n\t}\n\n\treturn _mapObject(object, mapper, options);\n}\n", "// Regexps involved with splitting words in various case formats.\nconst SPLIT_LOWER_UPPER_RE = /([\\p{Ll}\\d])(\\p{Lu})/gu;\nconst SPLIT_UPPER_UPPER_RE = /(\\p{Lu})([\\p{Lu}][\\p{Ll}])/gu;\n\n// Used to iterate over the initial split result and separate numbers.\nconst SPLIT_SEPARATE_NUMBER_RE = /(\\d)\\p{Ll}|(\\p{L})\\d/u;\n\n// Regexp involved with stripping non-word characters from the result.\nconst DEFAULT_STRIP_REGEXP = /[^\\p{L}\\d]+/giu;\n\n// The replacement value for splits.\nconst SPLIT_REPLACE_VALUE = \"$1\\0$2\";\n\n// The default characters to keep after transforming case.\nconst DEFAULT_PREFIX_SUFFIX_CHARACTERS = \"\";\n\n/**\n * Supported locale values. Use `false` to ignore locale.\n * Defaults to `undefined`, which uses the host environment.\n */\nexport type Locale = string[] | string | false | undefined;\n\n/**\n * Options used for converting strings to pascal/camel case.\n */\nexport interface PascalCaseOptions extends Options {\n  mergeAmbiguousCharacters?: boolean;\n}\n\n/**\n * Options used for converting strings to any case.\n */\nexport interface Options {\n  locale?: Locale;\n  split?: (value: string) => string[];\n  /** @deprecated Pass `split: splitSeparateNumbers` instead. */\n  separateNumbers?: boolean;\n  delimiter?: string;\n  prefixCharacters?: string;\n  suffixCharacters?: string;\n}\n\n/**\n * Split any cased input strings into an array of words.\n */\nexport function split(value: string) {\n  let result = value.trim();\n\n  result = result\n    .replace(SPLIT_LOWER_UPPER_RE, SPLIT_REPLACE_VALUE)\n    .replace(SPLIT_UPPER_UPPER_RE, SPLIT_REPLACE_VALUE);\n\n  result = result.replace(DEFAULT_STRIP_REGEXP, \"\\0\");\n\n  let start = 0;\n  let end = result.length;\n\n  // Trim the delimiter from around the output string.\n  while (result.charAt(start) === \"\\0\") start++;\n  if (start === end) return [];\n  while (result.charAt(end - 1) === \"\\0\") end--;\n\n  return result.slice(start, end).split(/\\0/g);\n}\n\n/**\n * Split the input string into an array of words, separating numbers.\n */\nexport function splitSeparateNumbers(value: string) {\n  const words = split(value);\n  for (let i = 0; i < words.length; i++) {\n    const word = words[i];\n    const match = SPLIT_SEPARATE_NUMBER_RE.exec(word);\n    if (match) {\n      const offset = match.index + (match[1] ?? match[2]).length;\n      words.splice(i, 1, word.slice(0, offset), word.slice(offset));\n    }\n  }\n  return words;\n}\n\n/**\n * Convert a string to space separated lower case (`foo bar`).\n */\nexport function noCase(input: string, options?: Options) {\n  const [prefix, words, suffix] = splitPrefixSuffix(input, options);\n  return (\n    prefix +\n    words.map(lowerFactory(options?.locale)).join(options?.delimiter ?? \" \") +\n    suffix\n  );\n}\n\n/**\n * Convert a string to camel case (`fooBar`).\n */\nexport function camelCase(input: string, options?: PascalCaseOptions) {\n  const [prefix, words, suffix] = splitPrefixSuffix(input, options);\n  const lower = lowerFactory(options?.locale);\n  const upper = upperFactory(options?.locale);\n  const transform = options?.mergeAmbiguousCharacters\n    ? capitalCaseTransformFactory(lower, upper)\n    : pascalCaseTransformFactory(lower, upper);\n  return (\n    prefix +\n    words\n      .map((word, index) => {\n        if (index === 0) return lower(word);\n        return transform(word, index);\n      })\n      .join(options?.delimiter ?? \"\") +\n    suffix\n  );\n}\n\n/**\n * Convert a string to pascal case (`FooBar`).\n */\nexport function pascalCase(input: string, options?: PascalCaseOptions) {\n  const [prefix, words, suffix] = splitPrefixSuffix(input, options);\n  const lower = lowerFactory(options?.locale);\n  const upper = upperFactory(options?.locale);\n  const transform = options?.mergeAmbiguousCharacters\n    ? capitalCaseTransformFactory(lower, upper)\n    : pascalCaseTransformFactory(lower, upper);\n  return prefix + words.map(transform).join(options?.delimiter ?? \"\") + suffix;\n}\n\n/**\n * Convert a string to pascal snake case (`Foo_Bar`).\n */\nexport function pascalSnakeCase(input: string, options?: Options) {\n  return capitalCase(input, { delimiter: \"_\", ...options });\n}\n\n/**\n * Convert a string to capital case (`Foo Bar`).\n */\nexport function capitalCase(input: string, options?: Options) {\n  const [prefix, words, suffix] = splitPrefixSuffix(input, options);\n  const lower = lowerFactory(options?.locale);\n  const upper = upperFactory(options?.locale);\n  return (\n    prefix +\n    words\n      .map(capitalCaseTransformFactory(lower, upper))\n      .join(options?.delimiter ?? \" \") +\n    suffix\n  );\n}\n\n/**\n * Convert a string to constant case (`FOO_BAR`).\n */\nexport function constantCase(input: string, options?: Options) {\n  const [prefix, words, suffix] = splitPrefixSuffix(input, options);\n  return (\n    prefix +\n    words.map(upperFactory(options?.locale)).join(options?.delimiter ?? \"_\") +\n    suffix\n  );\n}\n\n/**\n * Convert a string to dot case (`foo.bar`).\n */\nexport function dotCase(input: string, options?: Options) {\n  return noCase(input, { delimiter: \".\", ...options });\n}\n\n/**\n * Convert a string to kebab case (`foo-bar`).\n */\nexport function kebabCase(input: string, options?: Options) {\n  return noCase(input, { delimiter: \"-\", ...options });\n}\n\n/**\n * Convert a string to path case (`foo/bar`).\n */\nexport function pathCase(input: string, options?: Options) {\n  return noCase(input, { delimiter: \"/\", ...options });\n}\n\n/**\n * Convert a string to path case (`Foo bar`).\n */\nexport function sentenceCase(input: string, options?: Options) {\n  const [prefix, words, suffix] = splitPrefixSuffix(input, options);\n  const lower = lowerFactory(options?.locale);\n  const upper = upperFactory(options?.locale);\n  const transform = capitalCaseTransformFactory(lower, upper);\n  return (\n    prefix +\n    words\n      .map((word, index) => {\n        if (index === 0) return transform(word);\n        return lower(word);\n      })\n      .join(options?.delimiter ?? \" \") +\n    suffix\n  );\n}\n\n/**\n * Convert a string to snake case (`foo_bar`).\n */\nexport function snakeCase(input: string, options?: Options) {\n  return noCase(input, { delimiter: \"_\", ...options });\n}\n\n/**\n * Convert a string to header case (`Foo-Bar`).\n */\nexport function trainCase(input: string, options?: Options) {\n  return capitalCase(input, { delimiter: \"-\", ...options });\n}\n\nfunction lowerFactory(locale: Locale): (input: string) => string {\n  return locale === false\n    ? (input: string) => input.toLowerCase()\n    : (input: string) => input.toLocaleLowerCase(locale);\n}\n\nfunction upperFactory(locale: Locale): (input: string) => string {\n  return locale === false\n    ? (input: string) => input.toUpperCase()\n    : (input: string) => input.toLocaleUpperCase(locale);\n}\n\nfunction capitalCaseTransformFactory(\n  lower: (input: string) => string,\n  upper: (input: string) => string,\n) {\n  return (word: string) => `${upper(word[0])}${lower(word.slice(1))}`;\n}\n\nfunction pascalCaseTransformFactory(\n  lower: (input: string) => string,\n  upper: (input: string) => string,\n) {\n  return (word: string, index: number) => {\n    const char0 = word[0];\n    const initial =\n      index > 0 && char0 >= \"0\" && char0 <= \"9\" ? \"_\" + char0 : upper(char0);\n    return initial + lower(word.slice(1));\n  };\n}\n\nfunction splitPrefixSuffix(\n  input: string,\n  options: Options = {},\n): [string, string[], string] {\n  const splitFn =\n    options.split ?? (options.separateNumbers ? splitSeparateNumbers : split);\n  const prefixCharacters =\n    options.prefixCharacters ?? DEFAULT_PREFIX_SUFFIX_CHARACTERS;\n  const suffixCharacters =\n    options.suffixCharacters ?? DEFAULT_PREFIX_SUFFIX_CHARACTERS;\n  let prefixIndex = 0;\n  let suffixIndex = input.length;\n\n  while (prefixIndex < input.length) {\n    const char = input.charAt(prefixIndex);\n    if (!prefixCharacters.includes(char)) break;\n    prefixIndex++;\n  }\n\n  while (suffixIndex > prefixIndex) {\n    const index = suffixIndex - 1;\n    const char = input.charAt(index);\n    if (!suffixCharacters.includes(char)) break;\n    suffixIndex = index;\n  }\n\n  return [\n    input.slice(0, prefixIndex),\n    splitFn(input.slice(prefixIndex, suffixIndex)),\n    input.slice(suffixIndex),\n  ];\n}\n", "'use strict'\n\nimport map from 'map-obj'\nimport { snakeCase } from 'change-case'\n\nconst PlainObjectConstructor = {}.constructor\n\nfunction snakecaseKeys (obj, options) {\n  if (Array.isArray(obj)) {\n    if (obj.some(item => item.constructor !== PlainObjectConstructor)) {\n      throw new Error('obj must be array of plain objects')\n    }\n\n    options = { deep: true, exclude: [], parsingOptions: {}, ...options }\n    const convertCase = options.snakeCase || ((key) => snakeCase(key, options.parsingOptions))\n\n    // Handle arrays by mapping each element\n    return obj.map(item => {\n      return map(item, (key, val) => {\n        return [\n          matches(options.exclude, key) ? key : convertCase(key),\n          val,\n          mapperOptions(key, val, options)\n        ]\n      }, options)\n    })\n  } else {\n    if (obj.constructor !== PlainObjectConstructor) {\n      throw new Error('obj must be an plain object')\n    }\n  }\n\n  options = { deep: true, exclude: [], parsingOptions: {}, ...options }\n\n  const convertCase = options.snakeCase || ((key) => snakeCase(key, options.parsingOptions))\n\n  return map(obj, (key, val) => {\n    return [\n      matches(options.exclude, key) ? key : convertCase(key),\n      val,\n      mapperOptions(key, val, options)\n    ]\n  }, options)\n}\n\nfunction matches (patterns, value) {\n  return patterns.some(pattern => {\n    return typeof pattern === 'string'\n      ? pattern === value\n      : pattern.test(value)\n  })\n}\n\nfunction mapperOptions (key, val, options) {\n  return options.shouldRecurse\n    ? { shouldRecurse: options.shouldRecurse(key, val) }\n    : undefined\n}\n\nexport default snakecaseKeys\n", "import type { AccountlessApplicationJSON } from './JSON';\n\nexport class AccountlessApplication {\n  constructor(\n    readonly publishableKey: string,\n    readonly secretKey: string,\n    readonly claimUrl: string,\n    readonly apiKeysUrl: string,\n  ) {}\n\n  static fromJSON(data: AccountlessApplicationJSON): AccountlessApplication {\n    return new AccountlessApplication(data.publishable_key, data.secret_key, data.claim_url, data.api_keys_url);\n  }\n}\n", "import type { ActorTokenStatus } from './Enums';\nimport type { ActorTokenJSON } from './JSON';\n\nexport class ActorToken {\n  constructor(\n    readonly id: string,\n    readonly status: ActorTokenStatus,\n    readonly userId: string,\n    readonly actor: Record<string, unknown> | null,\n    readonly token: string | null | undefined,\n    readonly url: string | null | undefined,\n    readonly createdAt: number,\n    readonly updatedAt: number,\n  ) {}\n\n  static fromJSON(data: ActorTokenJSON): ActorToken {\n    return new ActorToken(\n      data.id,\n      data.status,\n      data.user_id,\n      data.actor,\n      data.token,\n      data.url,\n      data.created_at,\n      data.updated_at,\n    );\n  }\n}\n", "import type { AllowlistIdentifierType } from './Enums';\nimport type { AllowlistIdentifierJSON } from './JSON';\n\n/**\n * The Backend `AllowlistIdentifier` object represents an identifier that has been added to the allowlist of your application. The Backend `AllowlistIdentifier` object is used in the [Backend API](https://clerk.com/docs/reference/backend-api/tag/Allow-list-Block-list#operation/ListAllowlistIdentifiers) and is not directly accessible from the Frontend API.\n */\nexport class AllowlistIdentifier {\n  constructor(\n    /**\n     * A unique ID for the allowlist identifier.\n     */\n    readonly id: string,\n    /**\n     * The [identifier](https://clerk.com/docs/authentication/configuration/sign-up-sign-in-options#identifiers) that was added to the allowlist.\n     */\n    readonly identifier: string,\n    /**\n     * The type of the allowlist identifier.\n     */\n    readonly identifierType: AllowlistIdentifierType,\n    /**\n     * The date when the allowlist identifier was first created.\n     */\n    readonly createdAt: number,\n    /**\n     * The date when the allowlist identifier was last updated.\n     */\n    readonly updatedAt: number,\n    /**\n     * The ID of the instance that this allowlist identifier belongs to.\n     */\n    readonly instanceId?: string,\n    /**\n     * The ID of the invitation sent to the identifier.\n     */\n    readonly invitationId?: string,\n  ) {}\n\n  static fromJSON(data: AllowlistIdentifierJSON): AllowlistIdentifier {\n    return new AllowlistIdentifier(\n      data.id,\n      data.identifier,\n      data.identifier_type,\n      data.created_at,\n      data.updated_at,\n      data.instance_id,\n      data.invitation_id,\n    );\n  }\n}\n", "import type { APIKeyJSON } from './JSON';\n\nexport class APIKey {\n  constructor(\n    readonly id: string,\n    readonly type: string,\n    readonly name: string,\n    readonly subject: string,\n    readonly scopes: string[],\n    readonly claims: Record<string, any> | null,\n    readonly revoked: boolean,\n    readonly revocationReason: string | null,\n    readonly expired: boolean,\n    readonly expiration: number | null,\n    readonly createdBy: string | null,\n    readonly description: string | null,\n    readonly lastUsedAt: number | null,\n    readonly createdAt: number,\n    readonly updatedAt: number,\n    readonly secret?: string,\n  ) {}\n\n  static fromJSON(data: APIKeyJSON) {\n    return new APIKey(\n      data.id,\n      data.type,\n      data.name,\n      data.subject,\n      data.scopes,\n      data.claims,\n      data.revoked,\n      data.revocation_reason,\n      data.expired,\n      data.expiration,\n      data.created_by,\n      data.description,\n      data.last_used_at,\n      data.created_at,\n      data.updated_at,\n      data.secret,\n    );\n  }\n}\n", "import type { BlocklistIdentifierType } from './Enums';\nimport type { BlocklistIdentifierJSON } from './JSON';\n\nexport class BlocklistIdentifier {\n  constructor(\n    readonly id: string,\n    readonly identifier: string,\n    readonly identifierType: BlocklistIdentifierType,\n    readonly createdAt: number,\n    readonly updatedAt: number,\n    readonly instanceId?: string,\n  ) {}\n\n  static fromJSON(data: BlocklistIdentifierJSON): BlocklistIdentifier {\n    return new BlocklistIdentifier(\n      data.id,\n      data.identifier,\n      data.identifier_type,\n      data.created_at,\n      data.updated_at,\n      data.instance_id,\n    );\n  }\n}\n", "import type { SessionActivityJSON, SessionJSON } from './JSON';\n\n/**\n * The Backend `SessionActivity` object models the activity of a user session, capturing details such as the device type, browser information, and geographical location.\n */\nexport class SessionActivity {\n  constructor(\n    /**\n     * The unique identifier for the session activity record.\n     */\n    readonly id: string,\n    /**\n     * Will be set to `true` if the session activity came from a mobile device. Set to `false` otherwise.\n     */\n    readonly isMobile: boolean,\n    /**\n     * The IP address from which this session activity originated.\n     */\n    readonly ipAddress?: string,\n    /**\n     * The city from which this session activity occurred. Resolved by IP address geo-location.\n     */\n    readonly city?: string,\n    /**\n     * The country from which this session activity occurred. Resolved by IP address geo-location.\n     */\n    readonly country?: string,\n    /**\n     * The version of the browser from which this session activity occurred.\n     */\n    readonly browserVersion?: string,\n    /**\n     * The name of the browser from which this session activity occurred.\n     */\n    readonly browserName?: string,\n    /**\n     * The type of the device which was used in this session activity.\n     */\n    readonly deviceType?: string,\n  ) {}\n\n  static fromJSON(data: SessionActivityJSON): SessionActivity {\n    return new SessionActivity(\n      data.id,\n      data.is_mobile,\n      data.ip_address,\n      data.city,\n      data.country,\n      data.browser_version,\n      data.browser_name,\n      data.device_type,\n    );\n  }\n}\n\n/**\n * The Backend `Session` object is similar to the [`Session`](https://clerk.com/docs/references/javascript/session) object as it is an abstraction over an HTTP session and models the period of information exchange between a user and the server. However, the Backend `Session` object is different as it is used in the [Backend API](https://clerk.com/docs/reference/backend-api/tag/Sessions#operation/GetSessionList) and is not directly accessible from the Frontend API.\n */\nexport class Session {\n  constructor(\n    /**\n     * The unique identifier for the `Session`.\n     */\n    readonly id: string,\n    /**\n     * The ID of the client associated with the `Session`.\n     */\n    readonly clientId: string,\n    /**\n     * The ID of the user associated with the `Session`.\n     */\n    readonly userId: string,\n    /**\n     * The current state of the `Session`.\n     */\n    readonly status: string,\n    /**\n     * The time the session was last active on the [`Client`](https://clerk.com/docs/references/backend/types/backend-client).\n     */\n    readonly lastActiveAt: number,\n    /**\n     * The date when the `Session` will expire.\n     */\n    readonly expireAt: number,\n    /**\n     * The date when the `Session` will be abandoned.\n     */\n    readonly abandonAt: number,\n    /**\n     * The date when the `Session` was first created.\n     */\n    readonly createdAt: number,\n    /**\n     * The date when the `Session` was last updated.\n     */\n    readonly updatedAt: number,\n    /**\n     * The ID of the last active organization.\n     */\n    readonly lastActiveOrganizationId?: string,\n    /**\n     * An object that provides additional information about this session, focused around user activity data.\n     */\n    readonly latestActivity?: SessionActivity,\n    /**\n     * The JWT actor for the session. Holds identifier for the user that is impersonating the current user. Read more about [impersonation](https://clerk.com/docs/users/user-impersonation).\n     */\n    readonly actor: Record<string, unknown> | null = null,\n  ) {}\n\n  static fromJSON(data: SessionJSON): Session {\n    return new Session(\n      data.id,\n      data.client_id,\n      data.user_id,\n      data.status,\n      data.last_active_at,\n      data.expire_at,\n      data.abandon_at,\n      data.created_at,\n      data.updated_at,\n      data.last_active_organization_id,\n      data.latest_activity && SessionActivity.fromJSON(data.latest_activity),\n      data.actor,\n    );\n  }\n}\n", "import type { LastAuthenticationStrategy } from '@clerk/types';\n\nimport type { ClientJSON } from './JSON';\nimport { Session } from './Session';\n\n/**\n * The Backend `Client` object is similar to the [`Client`](https://clerk.com/docs/references/javascript/client) object as it holds information about the authenticated sessions in the current device. However, the Backend `Client` object is different from the `Client` object in that it is used in the [Backend API](https://clerk.com/docs/reference/backend-api/tag/Clients#operation/GetClient) and is not directly accessible from the Frontend API.\n */\nexport class Client {\n  constructor(\n    /**\n     * The unique identifier for the `Client`.\n     */\n    readonly id: string,\n    /**\n     * An array of [Session](https://clerk.com/docs/references/backend/types/backend-session){{ target: '_blank' }} IDs associated with the `Client`.\n     */\n    readonly sessionIds: string[],\n    /**\n     * An array of [Session](https://clerk.com/docs/references/backend/types/backend-session){{ target: '_blank' }} objects associated with the `Client`.\n     */\n    readonly sessions: Session[],\n    /**\n     * The ID of the [`SignIn`](https://clerk.com/docs/references/javascript/sign-in){{ target: '_blank' }}.\n     */\n    readonly signInId: string | null,\n    /**\n     * The ID of the [`SignUp`](https://clerk.com/docs/references/javascript/sign-up){{ target: '_blank' }}.\n     */\n    readonly signUpId: string | null,\n    /**\n     * The ID of the last active [Session](https://clerk.com/docs/references/backend/types/backend-session).\n     */\n    readonly lastActiveSessionId: string | null,\n    /**\n     * The last authentication strategy used by the `Client`.\n     */\n    readonly lastAuthenticationStrategy: LastAuthenticationStrategy | null,\n    /**\n     * The date when the `Client` was first created.\n     */\n    readonly createdAt: number,\n    /**\n     * The date when the `Client` was last updated.\n     */\n    readonly updatedAt: number,\n  ) {}\n\n  static fromJSON(data: ClientJSON): Client {\n    return new Client(\n      data.id,\n      data.session_ids,\n      data.sessions.map(x => Session.fromJSON(x)),\n      data.sign_in_id,\n      data.sign_up_id,\n      data.last_active_session_id,\n      data.last_authentication_strategy,\n      data.created_at,\n      data.updated_at,\n    );\n  }\n}\n", "import type { CnameTargetJSON } from './JSON';\n\nexport class CnameTarget {\n  constructor(\n    readonly host: string,\n    readonly value: string,\n    readonly required: boolean,\n  ) {}\n\n  static fromJSON(data: CnameTargetJSON): CnameTarget {\n    return new CnameTarget(data.host, data.value, data.required);\n  }\n}\n", "import type { CookiesJSON } from './JSON';\n\nexport class Cookies {\n  constructor(readonly cookies: string[]) {}\n\n  static fromJSON(data: CookiesJSON): Cookies {\n    return new Cookies(data.cookies);\n  }\n}\n", "import type { DeletedObjectJSON } from './JSON';\n\nexport class DeletedObject {\n  constructor(\n    readonly object: string,\n    readonly id: string | null,\n    readonly slug: string | null,\n    readonly deleted: boolean,\n  ) {}\n\n  static fromJSON(data: DeletedObjectJSON) {\n    return new DeletedObject(data.object, data.id || null, data.slug || null, data.deleted);\n  }\n}\n", "import { CnameTarget } from './CnameTarget';\nimport type { DomainJSON } from './JSON';\n\nexport class Domain {\n  constructor(\n    readonly id: string,\n    readonly name: string,\n    readonly isSatellite: boolean,\n    readonly frontendApiUrl: string,\n    readonly developmentOrigin: string,\n    readonly cnameTargets: CnameTarget[],\n    readonly accountsPortalUrl?: string | null,\n    readonly proxyUrl?: string | null,\n  ) {}\n\n  static fromJSON(data: DomainJSON): Domain {\n    return new Domain(\n      data.id,\n      data.name,\n      data.is_satellite,\n      data.frontend_api_url,\n      data.development_origin,\n      data.cname_targets && data.cname_targets.map(x => CnameTarget.fromJSON(x)),\n      data.accounts_portal_url,\n      data.proxy_url,\n    );\n  }\n}\n", "import type { EmailJSON } from './JSON';\n\nexport class Email {\n  constructor(\n    readonly id: string,\n    readonly fromEmailName: string,\n    readonly emailAddressId: string | null,\n    readonly toEmailAddress?: string,\n    readonly subject?: string,\n    readonly body?: string,\n    readonly bodyPlain?: string | null,\n    readonly status?: string,\n    readonly slug?: string | null,\n    readonly data?: Record<string, any> | null,\n    readonly deliveredByClerk?: boolean,\n  ) {}\n\n  static fromJSON(data: EmailJSON): Email {\n    return new Email(\n      data.id,\n      data.from_email_name,\n      data.email_address_id,\n      data.to_email_address,\n      data.subject,\n      data.body,\n      data.body_plain,\n      data.status,\n      data.slug,\n      data.data,\n      data.delivered_by_clerk,\n    );\n  }\n}\n", "import type { IdentificationLinkJSON } from './JSON';\n\n/**\n * Contains information about any identifications that might be linked to the email address.\n */\nexport class IdentificationLink {\n  constructor(\n    /**\n     * The unique identifier for the identification link.\n     */\n    readonly id: string,\n    /**\n     * The type of the identification link, e.g., `\"email_address\"`, `\"phone_number\"`, etc.\n     */\n    readonly type: string,\n  ) {}\n\n  static fromJSON(data: IdentificationLinkJSON): IdentificationLink {\n    return new IdentificationLink(data.id, data.type);\n  }\n}\n", "import type { VerificationStatus } from '@clerk/types';\n\nimport type { OrganizationDomainVerificationJSON, VerificationJSON } from './JSON';\n\n/**\n * The Backend `Verification` object describes the state of the verification process of a sign-in or sign-up attempt.\n */\nexport class Verification {\n  constructor(\n    /**\n     * The state of the verification.\n     *\n     * <ul>\n     *  <li>`unverified`: The verification has not been verified yet.</li>\n     *  <li>`verified`: The verification has been verified.</li>\n     *  <li>`transferable`: The verification is transferable to between sign-in and sign-up flows.</li>\n     *  <li>`failed`: The verification has failed.</li>\n     *  <li>`expired`: The verification has expired.</li>\n     * </ul>\n     */\n    readonly status: VerificationStatus,\n    /**\n     * The strategy pertaining to the parent sign-up or sign-in attempt.\n     */\n    readonly strategy: string,\n    /**\n     * The redirect URL for an external verification.\n     */\n    readonly externalVerificationRedirectURL: URL | null = null,\n    /**\n     * The number of attempts related to the verification.\n     */\n    readonly attempts: number | null = null,\n    /**\n     * The time the verification will expire at.\n     */\n    readonly expireAt: number | null = null,\n    /**\n     * The [nonce](https://en.wikipedia.org/wiki/Cryptographic_nonce) pertaining to the verification.\n     */\n    readonly nonce: string | null = null,\n    /**\n     * The message that will be presented to the user's Web3 wallet for signing during authentication. This follows the [Sign-In with Ethereum (SIWE) protocol format](https://docs.login.xyz/general-information/siwe-overview/eip-4361#example-message-to-be-signed), which typically includes details like the requesting service, wallet address, terms acceptance, nonce, timestamp, and any additional resources.\n     */\n    readonly message: string | null = null,\n  ) {}\n\n  static fromJSON(data: VerificationJSON): Verification {\n    return new Verification(\n      data.status,\n      data.strategy,\n      data.external_verification_redirect_url ? new URL(data.external_verification_redirect_url) : null,\n      data.attempts,\n      data.expire_at,\n      data.nonce,\n    );\n  }\n}\n\nexport class OrganizationDomainVerification {\n  constructor(\n    readonly status: string,\n    readonly strategy: string,\n    readonly attempts: number | null = null,\n    readonly expireAt: number | null = null,\n  ) {}\n\n  static fromJSON(data: OrganizationDomainVerificationJSON): OrganizationDomainVerification {\n    return new OrganizationDomainVerification(data.status, data.strategy, data.attempts, data.expires_at);\n  }\n}\n", "import { IdentificationLink } from './IdentificationLink';\nimport type { EmailAddressJSON } from './JSON';\nimport { Verification } from './Verification';\n\n/**\n * The Backend `EmailAddress` object is a model around an email address. Email addresses are one of the [identifiers](https://clerk.com/docs/authentication/configuration/sign-up-sign-in-options#identifiers) used to provide identification for users.\n *\n * Email addresses must be **verified** to ensure that they are assigned to their rightful owners. The `EmailAddress` object holds all necessary state around the verification process.\n *\n * For implementation examples for adding and verifying email addresses, see the [email link custom flow](https://clerk.com/docs/custom-flows/email-links) and [email code custom flow](https://clerk.com/docs/custom-flows/add-email) guides.\n */\nexport class EmailAddress {\n  constructor(\n    /**\n     * The unique identifier for the email address.\n     */\n    readonly id: string,\n    /**\n     * The value of the email address.\n     */\n    readonly emailAddress: string,\n    /**\n     * An object holding information on the verification of the email address.\n     */\n    readonly verification: Verification | null,\n    /**\n     * An array of objects containing information about any identifications that might be linked to the email address.\n     */\n    readonly linkedTo: IdentificationLink[],\n  ) {}\n\n  static fromJSON(data: EmailAddressJSON): EmailAddress {\n    return new EmailAddress(\n      data.id,\n      data.email_address,\n      data.verification && Verification.fromJSON(data.verification),\n      data.linked_to.map(link => IdentificationLink.fromJSON(link)),\n    );\n  }\n}\n", "import type { ExternalAccountJSON } from './JSON';\nimport { Verification } from './Verification';\n\n/**\n * The Backend `ExternalAccount` object is a model around an identification obtained by an external provider (e.g. a social provider such as Google).\n *\n * External account must be verified, so that you can make sure they can be assigned to their rightful owners. The `ExternalAccount` object holds all necessary state around the verification process.\n */\nexport class ExternalAccount {\n  constructor(\n    /**\n     * The unique identifier for this external account.\n     */\n    readonly id: string,\n    /**\n     * The provider name (e.g., `google`).\n     */\n    readonly provider: string,\n    /**\n     * The identification with which this external account is associated.\n     */\n    readonly identificationId: string,\n    /**\n     * The unique ID of the user in the provider.\n     */\n    readonly externalId: string,\n    /**\n     * The scopes that the user has granted access to.\n     */\n    readonly approvedScopes: string,\n    /**\n     * The user's email address.\n     */\n    readonly emailAddress: string,\n    /**\n     * The user's first name.\n     */\n    readonly firstName: string,\n    /**\n     * The user's last name.\n     */\n    readonly lastName: string,\n    /**\n     * The user's image URL.\n     */\n    readonly imageUrl: string,\n    /**\n     * The user's username.\n     */\n    readonly username: string | null,\n    /**\n     * The phone number related to this specific external account.\n     */\n    readonly phoneNumber: string | null,\n    /**\n     * Metadata that can be read from the Frontend API and Backend API and can be set only from the Backend API.\n     */\n    readonly publicMetadata: Record<string, unknown> | null = {},\n    /**\n     * A descriptive label to differentiate multiple external accounts of the same user for the same provider.\n     */\n    readonly label: string | null,\n    /**\n     * An object holding information on the verification of this external account.\n     */\n    readonly verification: Verification | null,\n  ) {}\n\n  static fromJSON(data: ExternalAccountJSON): ExternalAccount {\n    return new ExternalAccount(\n      data.id,\n      data.provider,\n      data.identification_id,\n      data.provider_user_id,\n      data.approved_scopes,\n      data.email_address,\n      data.first_name,\n      data.last_name,\n      data.image_url || '',\n      data.username,\n      data.phone_number,\n      data.public_metadata,\n      data.label,\n      data.verification && Verification.fromJSON(data.verification),\n    );\n  }\n}\n", "import type { IdPOAuthAccessTokenJSON } from './JSON';\n\nexport class IdPOAuthAccessToken {\n  constructor(\n    readonly id: string,\n    readonly clientId: string,\n    readonly type: string,\n    readonly subject: string,\n    readonly scopes: string[],\n    readonly revoked: boolean,\n    readonly revocationReason: string | null,\n    readonly expired: boolean,\n    readonly expiration: number | null,\n    readonly createdAt: number,\n    readonly updatedAt: number,\n  ) {}\n\n  static fromJSON(data: IdPOAuthAccessTokenJSON) {\n    return new IdPOAuthAccessToken(\n      data.id,\n      data.client_id,\n      data.type,\n      data.subject,\n      data.scopes,\n      data.revoked,\n      data.revocation_reason,\n      data.expired,\n      data.expiration,\n      data.created_at,\n      data.updated_at,\n    );\n  }\n}\n", "import type { InstanceJSON } from './JSON';\n\nexport class Instance {\n  constructor(\n    readonly id: string,\n    readonly environmentType: string,\n    readonly allowedOrigins: Array<string> | null,\n  ) {}\n\n  static fromJSON(data: InstanceJSON): Instance {\n    return new Instance(data.id, data.environment_type, data.allowed_origins);\n  }\n}\n", "import type { InstanceRestrictionsJSON } from './JSON';\n\nexport class InstanceRestrictions {\n  constructor(\n    readonly allowlist: boolean,\n    readonly blocklist: boolean,\n    readonly blockEmailSubaddresses: boolean,\n    readonly blockDisposableEmailDomains: boolean,\n    readonly ignoreDotsForGmailAddresses: boolean,\n  ) {}\n\n  static fromJSON(data: InstanceRestrictionsJSON): InstanceRestrictions {\n    return new InstanceRestrictions(\n      data.allowlist,\n      data.blocklist,\n      data.block_email_subaddresses,\n      data.block_disposable_email_domains,\n      data.ignore_dots_for_gmail_addresses,\n    );\n  }\n}\n", "import type { InstanceSettingsJSON } from './JSON';\n\nexport class InstanceSettings {\n  constructor(\n    readonly id?: string | undefined,\n    readonly restrictedToAllowlist?: boolean | undefined,\n    readonly fromEmailAddress?: string | undefined,\n    readonly progressiveSignUp?: boolean | undefined,\n    readonly enhancedEmailDeliverability?: boolean | undefined,\n  ) {}\n\n  static fromJSON(data: InstanceSettingsJSON): InstanceSettings {\n    return new InstanceSettings(\n      data.id,\n      data.restricted_to_allowlist,\n      data.from_email_address,\n      data.progressive_sign_up,\n      data.enhanced_email_deliverability,\n    );\n  }\n}\n", "import type { InvitationStatus } from './Enums';\nimport type { InvitationJSON } from './JSON';\n\n/**\n * The Backend `Invitation` object represents an invitation to join your application.\n */\nexport class Invitation {\n  private _raw: InvitationJSON | null = null;\n\n  public get raw(): InvitationJSON | null {\n    return this._raw;\n  }\n\n  constructor(\n    /**\n     * The unique identifier for the `Invitation`.\n     */\n    readonly id: string,\n    /**\n     * The email address that the invitation was sent to.\n     */\n    readonly emailAddress: string,\n    /**\n     * [Metadata](https://clerk.com/docs/references/javascript/types/metadata#user-public-metadata){{ target: '_blank' }} that can be read from the Frontend API and [Backend API](https://clerk.com/docs/reference/backend-api){{ target: '_blank' }} and can be set only from the Backend API. Once the user accepts the invitation and signs up, these metadata will end up in the user's public metadata.\n     */\n    readonly publicMetadata: Record<string, unknown> | null,\n    /**\n     * The date when the `Invitation` was first created.\n     */\n    readonly createdAt: number,\n    /**\n     * The date when the `Invitation` was last updated.\n     */\n    readonly updatedAt: number,\n    /**\n     * The status of the `Invitation`.\n     */\n    readonly status: InvitationStatus,\n    /**\n     * The URL that the user can use to accept the invitation.\n     */\n    readonly url?: string,\n    /**\n     * Whether the `Invitation` has been revoked.\n     */\n    readonly revoked?: boolean,\n  ) {}\n\n  static fromJSON(data: InvitationJSON): Invitation {\n    const res = new Invitation(\n      data.id,\n      data.email_address,\n      data.public_metadata,\n      data.created_at,\n      data.updated_at,\n      data.status,\n      data.url,\n      data.revoked,\n    );\n    res._raw = data;\n    return res;\n  }\n}\n", "import type { LastAuthenticationStrategy, SignUpStatus, VerificationStatus } from '@clerk/types';\n\nimport type {\n  ActorTokenStatus,\n  AllowlistIdentifierType,\n  BlocklistIdentifierType,\n  DomainsEnrollmentModes,\n  InvitationStatus,\n  OrganizationDomainVerificationStatus,\n  OrganizationDomainVerificationStrategy,\n  OrganizationEnrollmentMode,\n  OrganizationInvitationStatus,\n  OrganizationMembershipRole,\n  SignInStatus,\n  SignUpVerificationNextAction,\n  WaitlistEntryStatus,\n} from './Enums';\n\nexport const ObjectType = {\n  AccountlessApplication: 'accountless_application',\n  ActorToken: 'actor_token',\n  AllowlistIdentifier: 'allowlist_identifier',\n  ApiKey: 'api_key',\n  BlocklistIdentifier: 'blocklist_identifier',\n  Client: 'client',\n  Cookies: 'cookies',\n  Domain: 'domain',\n  Email: 'email',\n  EmailAddress: 'email_address',\n  ExternalAccount: 'external_account',\n  FacebookAccount: 'facebook_account',\n  GoogleAccount: 'google_account',\n  Instance: 'instance',\n  InstanceRestrictions: 'instance_restrictions',\n  InstanceSettings: 'instance_settings',\n  Invitation: 'invitation',\n  Machine: 'machine',\n  MachineScope: 'machine_scope',\n  MachineSecretKey: 'machine_secret_key',\n  M2MToken: 'machine_to_machine_token',\n  JwtTemplate: 'jwt_template',\n  OauthAccessToken: 'oauth_access_token',\n  IdpOAuthAccessToken: 'clerk_idp_oauth_access_token',\n  OAuthApplication: 'oauth_application',\n  Organization: 'organization',\n  OrganizationDomain: 'organization_domain',\n  OrganizationInvitation: 'organization_invitation',\n  OrganizationMembership: 'organization_membership',\n  OrganizationSettings: 'organization_settings',\n  PhoneNumber: 'phone_number',\n  ProxyCheck: 'proxy_check',\n  RedirectUrl: 'redirect_url',\n  SamlAccount: 'saml_account',\n  SamlConnection: 'saml_connection',\n  Session: 'session',\n  SignInAttempt: 'sign_in_attempt',\n  SignInToken: 'sign_in_token',\n  SignUpAttempt: 'sign_up_attempt',\n  SmsMessage: 'sms_message',\n  User: 'user',\n  WaitlistEntry: 'waitlist_entry',\n  Web3Wallet: 'web3_wallet',\n  Token: 'token',\n  TotalCount: 'total_count',\n  TestingToken: 'testing_token',\n  Role: 'role',\n  Permission: 'permission',\n  CommercePayer: 'commerce_payer',\n  CommercePaymentAttempt: 'commerce_payment_attempt',\n  CommerceSubscription: 'commerce_subscription',\n  CommerceSubscriptionItem: 'commerce_subscription_item',\n  CommercePlan: 'commerce_plan',\n  Feature: 'feature',\n} as const;\n\nexport type ObjectType = (typeof ObjectType)[keyof typeof ObjectType];\n\nexport interface ClerkResourceJSON {\n  /**\n   * The type of the resource.\n   */\n  object: ObjectType;\n  /**\n   * The unique identifier for the resource.\n   */\n  id: string;\n}\n\nexport interface CookiesJSON {\n  object: typeof ObjectType.Cookies;\n  cookies: string[];\n}\n\nexport interface TokenJSON {\n  object: typeof ObjectType.Token;\n  jwt: string;\n}\n\nexport interface AccountlessApplicationJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.AccountlessApplication;\n  publishable_key: string;\n  secret_key: string;\n  claim_url: string;\n  api_keys_url: string;\n}\n\nexport interface ActorTokenJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.ActorToken;\n  id: string;\n  status: ActorTokenStatus;\n  user_id: string;\n  actor: Record<string, unknown> | null;\n  token?: string | null;\n  url?: string | null;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface AllowlistIdentifierJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.AllowlistIdentifier;\n  identifier: string;\n  identifier_type: AllowlistIdentifierType;\n  instance_id?: string;\n  invitation_id?: string;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface BlocklistIdentifierJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.BlocklistIdentifier;\n  identifier: string;\n  identifier_type: BlocklistIdentifierType;\n  instance_id?: string;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface ClientJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.Client;\n  session_ids: string[];\n  sessions: SessionJSON[];\n  sign_in_id: string | null;\n  sign_up_id: string | null;\n  last_active_session_id: string | null;\n  last_authentication_strategy: LastAuthenticationStrategy | null;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface CnameTargetJSON {\n  host: string;\n  value: string;\n  /**\n   * Denotes whether this CNAME target is required to be set in order for the domain to be considered deployed.\n   */\n  required: boolean;\n}\n\nexport interface DomainJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.Domain;\n  id: string;\n  name: string;\n  is_satellite: boolean;\n  frontend_api_url: string;\n  /**\n   * null for satellite domains\n   */\n  accounts_portal_url?: string | null;\n  proxy_url?: string;\n  development_origin: string;\n  cname_targets: CnameTargetJSON[];\n}\n\nexport interface EmailJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.Email;\n  slug?: string | null;\n  from_email_name: string;\n  to_email_address?: string;\n  email_address_id: string | null;\n  user_id?: string | null;\n  subject?: string;\n  body?: string;\n  body_plain?: string | null;\n  status?: string;\n  data?: Record<string, any> | null;\n  delivered_by_clerk: boolean;\n}\n\nexport interface EmailAddressJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.EmailAddress;\n  email_address: string;\n  verification: VerificationJSON | null;\n  linked_to: IdentificationLinkJSON[];\n}\n\nexport interface ExternalAccountJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.ExternalAccount;\n  provider: string;\n  identification_id: string;\n  provider_user_id: string;\n  approved_scopes: string;\n  email_address: string;\n  first_name: string;\n  last_name: string;\n  image_url?: string;\n  username: string | null;\n  phone_number: string | null;\n  public_metadata?: Record<string, unknown> | null;\n  label: string | null;\n  verification: VerificationJSON | null;\n}\n\nexport interface JwksJSON {\n  keys?: JwksKeyJSON[];\n}\n\nexport interface JwksKeyJSON {\n  use: string;\n  kty: string;\n  kid: string;\n  alg: string;\n  n: string;\n  e: string;\n}\n\nexport interface JwtTemplateJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.JwtTemplate;\n  id: string;\n  name: string;\n  claims: object;\n  lifetime: number;\n  allowed_clock_skew: number;\n  custom_signing_key: boolean;\n  signing_algorithm: string;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface SamlAccountJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.SamlAccount;\n  provider: string;\n  provider_user_id: string | null;\n  active: boolean;\n  email_address: string;\n  first_name: string;\n  last_name: string;\n  verification: VerificationJSON | null;\n  saml_connection: SamlAccountConnectionJSON | null;\n}\n\nexport interface IdentificationLinkJSON extends ClerkResourceJSON {\n  type: string;\n}\n\nexport interface OrganizationSettingsJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.OrganizationSettings;\n  enabled: boolean;\n  max_allowed_memberships: number;\n  max_allowed_roles: number;\n  max_allowed_permissions: number;\n  creator_role: string;\n  admin_delete_enabled: boolean;\n  domains_enabled: boolean;\n  domains_enrollment_modes: Array<DomainsEnrollmentModes>;\n  domains_default_role: string;\n}\n\nexport interface InstanceJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.Instance;\n  id: string;\n  environment_type: string;\n  allowed_origins: Array<string> | null;\n}\n\nexport interface InstanceRestrictionsJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.InstanceRestrictions;\n  allowlist: boolean;\n  blocklist: boolean;\n  block_email_subaddresses: boolean;\n  block_disposable_email_domains: boolean;\n  ignore_dots_for_gmail_addresses: boolean;\n}\n\nexport interface InstanceSettingsJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.InstanceSettings;\n  id: string;\n  restricted_to_allowlist: boolean;\n  from_email_address: string;\n  progressive_sign_up: boolean;\n  enhanced_email_deliverability: boolean;\n}\n\nexport interface InvitationJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.Invitation;\n  email_address: string;\n  public_metadata: Record<string, unknown> | null;\n  revoked?: boolean;\n  status: InvitationStatus;\n  url?: string;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface OauthAccessTokenJSON {\n  external_account_id: string;\n  object: typeof ObjectType.OauthAccessToken;\n  token: string;\n  provider: string;\n  public_metadata: Record<string, unknown>;\n  label: string | null;\n  // Only set in OAuth 2.0 tokens\n  scopes?: string[];\n  // Only set in OAuth 1.0 tokens\n  token_secret?: string;\n  expires_at?: number;\n}\n\nexport interface OAuthApplicationJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.OAuthApplication;\n  id: string;\n  instance_id: string;\n  name: string;\n  client_id: string;\n  client_uri: string | null;\n  client_image_url: string | null;\n  dynamically_registered: boolean;\n  consent_screen_enabled: boolean;\n  pkce_required: boolean;\n  public: boolean;\n  scopes: string;\n  redirect_uris: Array<string>;\n  authorize_url: string;\n  token_fetch_url: string;\n  user_info_url: string;\n  discovery_url: string;\n  token_introspection_url: string;\n  created_at: number;\n  updated_at: number;\n  client_secret?: string;\n}\n\nexport interface OrganizationJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.Organization;\n  name: string;\n  slug: string;\n  image_url?: string;\n  has_image: boolean;\n  members_count?: number;\n  pending_invitations_count?: number;\n  max_allowed_memberships: number;\n  admin_delete_enabled: boolean;\n  public_metadata: OrganizationPublicMetadata | null;\n  private_metadata?: OrganizationPrivateMetadata;\n  created_by?: string;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface OrganizationDomainJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.OrganizationDomain;\n  id: string;\n  name: string;\n  organization_id: string;\n  enrollment_mode: OrganizationEnrollmentMode;\n  verification: OrganizationDomainVerificationJSON | null;\n  affiliation_email_address: string | null;\n  created_at: number;\n  updated_at: number;\n  total_pending_invitations: number;\n  total_pending_suggestions: number;\n}\n\nexport interface OrganizationDomainVerificationJSON {\n  status: OrganizationDomainVerificationStatus;\n  strategy: OrganizationDomainVerificationStrategy;\n  attempts: number;\n  expires_at: number;\n}\n\nexport interface OrganizationInvitationJSON extends ClerkResourceJSON {\n  email_address: string;\n  role: OrganizationMembershipRole;\n  role_name: string;\n  organization_id: string;\n  public_organization_data?: PublicOrganizationDataJSON | null;\n  status?: OrganizationInvitationStatus;\n  public_metadata: OrganizationInvitationPublicMetadata;\n  private_metadata: OrganizationInvitationPrivateMetadata;\n  url: string | null;\n  created_at: number;\n  updated_at: number;\n  expires_at: number;\n}\n\n/**\n * @interface\n */\nexport interface PublicOrganizationDataJSON extends ClerkResourceJSON {\n  /**\n   * The name of the organization.\n   */\n  name: string;\n  /**\n   * The slug of the organization.\n   */\n  slug: string;\n  /**\n   * Holds the default organization profile image. Compatible with Clerk's [Image Optimization](https://clerk.com/docs/guides/image-optimization).\n   */\n  image_url?: string;\n  /**\n   * Whether the organization has a profile image.\n   */\n  has_image: boolean;\n}\n\nexport interface OrganizationMembershipJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.OrganizationMembership;\n  public_metadata: OrganizationMembershipPublicMetadata;\n  private_metadata?: OrganizationMembershipPrivateMetadata;\n  role: OrganizationMembershipRole;\n  permissions: string[];\n  created_at: number;\n  updated_at: number;\n  organization: OrganizationJSON;\n  public_user_data: OrganizationMembershipPublicUserDataJSON;\n}\n\nexport interface OrganizationMembershipPublicUserDataJSON {\n  identifier: string;\n  first_name: string | null;\n  last_name: string | null;\n  image_url: string;\n  has_image: boolean;\n  user_id: string;\n}\n\nexport interface PhoneNumberJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.PhoneNumber;\n  phone_number: string;\n  reserved_for_second_factor: boolean;\n  default_second_factor: boolean;\n  reserved: boolean;\n  verification: VerificationJSON | null;\n  linked_to: IdentificationLinkJSON[];\n  backup_codes: string[];\n}\n\nexport type ProxyCheckJSON = {\n  object: typeof ObjectType.ProxyCheck;\n  id: string;\n  domain_id: string;\n  last_run_at: number | null;\n  proxy_url: string;\n  successful: boolean;\n  created_at: number;\n  updated_at: number;\n};\n\nexport interface RedirectUrlJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.RedirectUrl;\n  url: string;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface SessionActivityJSON extends ClerkResourceJSON {\n  id: string;\n  device_type?: string;\n  is_mobile: boolean;\n  browser_name?: string;\n  browser_version?: string;\n  ip_address?: string;\n  city?: string;\n  country?: string;\n}\n\nexport interface SessionJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.Session;\n  client_id: string;\n  user_id: string;\n  status: string;\n  last_active_organization_id?: string;\n  actor: Record<string, unknown> | null;\n  latest_activity?: SessionActivityJSON;\n  last_active_at: number;\n  expire_at: number;\n  abandon_at: number;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface SignInJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.SignInToken;\n  status: SignInStatus;\n  identifier: string;\n  created_session_id: string | null;\n}\n\nexport interface SignInTokenJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.SignInToken;\n  user_id: string;\n  token: string;\n  status: 'pending' | 'accepted' | 'revoked';\n  url: string;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface SignUpJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.SignUpAttempt;\n  id: string;\n  status: SignUpStatus;\n  required_fields: string[];\n  optional_fields: string[];\n  missing_fields: string[];\n  unverified_fields: string[];\n  verifications: SignUpVerificationsJSON;\n  username: string | null;\n  email_address: string | null;\n  phone_number: string | null;\n  web3_wallet: string | null;\n  password_enabled: boolean;\n  first_name: string | null;\n  last_name: string | null;\n  public_metadata?: Record<string, unknown> | null;\n  unsafe_metadata?: Record<string, unknown> | null;\n  custom_action: boolean;\n  external_id: string | null;\n  created_session_id: string | null;\n  created_user_id: string | null;\n  abandon_at: number | null;\n  legal_accepted_at: number | null;\n\n  /**\n   * @deprecated Please use `verifications.external_account` instead\n   */\n  external_account: object | null;\n}\n\nexport interface SignUpVerificationsJSON {\n  email_address: SignUpVerificationJSON;\n  phone_number: SignUpVerificationJSON;\n  web3_wallet: SignUpVerificationJSON;\n  external_account: VerificationJSON;\n}\n\nexport interface SignUpVerificationJSON {\n  next_action: SignUpVerificationNextAction;\n  supported_strategies: string[];\n}\n\nexport interface SMSMessageJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.SmsMessage;\n  from_phone_number: string;\n  to_phone_number: string;\n  phone_number_id: string | null;\n  user_id?: string;\n  message: string;\n  status: string;\n  slug?: string | null;\n  data?: Record<string, any> | null;\n  delivered_by_clerk: boolean;\n}\n\nexport interface UserJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.User;\n  username: string | null;\n  first_name: string | null;\n  last_name: string | null;\n  image_url: string;\n  has_image: boolean;\n  primary_email_address_id: string | null;\n  primary_phone_number_id: string | null;\n  primary_web3_wallet_id: string | null;\n  password_enabled: boolean;\n  two_factor_enabled: boolean;\n  totp_enabled: boolean;\n  backup_code_enabled: boolean;\n  email_addresses: EmailAddressJSON[];\n  phone_numbers: PhoneNumberJSON[];\n  web3_wallets: Web3WalletJSON[];\n  organization_memberships: OrganizationMembershipJSON[] | null;\n  external_accounts: ExternalAccountJSON[];\n  saml_accounts: SamlAccountJSON[];\n  password_last_updated_at: number | null;\n  public_metadata: UserPublicMetadata;\n  private_metadata: UserPrivateMetadata;\n  unsafe_metadata: UserUnsafeMetadata;\n  external_id: string | null;\n  last_sign_in_at: number | null;\n  banned: boolean;\n  locked: boolean;\n  lockout_expires_in_seconds: number | null;\n  verification_attempts_remaining: number | null;\n  created_at: number;\n  updated_at: number;\n  last_active_at: number | null;\n  create_organization_enabled: boolean;\n  create_organizations_limit: number | null;\n  delete_self_enabled: boolean;\n  legal_accepted_at: number | null;\n}\n\nexport interface VerificationJSON extends ClerkResourceJSON {\n  status: VerificationStatus;\n  strategy: string;\n  attempts: number | null;\n  expire_at: number | null;\n  verified_at_client?: string;\n  external_verification_redirect_url?: string | null;\n  nonce?: string | null;\n  message?: string | null;\n}\n\nexport interface WaitlistEntryJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.WaitlistEntry;\n  id: string;\n  status: WaitlistEntryStatus;\n  email_address: string;\n  invitation: InvitationJSON | null;\n  is_locked: boolean;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface Web3WalletJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.Web3Wallet;\n  web3_wallet: string;\n  verification: VerificationJSON | null;\n}\n\nexport interface DeletedObjectJSON {\n  object: string;\n  id?: string;\n  slug?: string;\n  deleted: boolean;\n}\n\nexport interface PaginatedResponseJSON {\n  data: object[];\n  total_count?: number;\n}\n\nexport interface SamlConnectionJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.SamlConnection;\n  name: string;\n  domain: string;\n  organization_id: string | null;\n  idp_entity_id: string;\n  idp_sso_url: string;\n  idp_certificate: string;\n  idp_metadata_url: string;\n  idp_metadata: string;\n  acs_url: string;\n  sp_entity_id: string;\n  sp_metadata_url: string;\n  active: boolean;\n  provider: string;\n  user_count: number;\n  sync_user_attributes: boolean;\n  allow_subdomains: boolean;\n  allow_idp_initiated: boolean;\n  created_at: number;\n  updated_at: number;\n  attribute_mapping: AttributeMappingJSON;\n}\n\nexport interface AttributeMappingJSON {\n  user_id: string;\n  email_address: string;\n  first_name: string;\n  last_name: string;\n}\n\nexport interface TestingTokenJSON {\n  object: typeof ObjectType.TestingToken;\n  token: string;\n  expires_at: number;\n}\n\nexport interface RoleJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.Role;\n  key: string;\n  name: string;\n  description: string;\n  permissions: PermissionJSON[];\n  is_creator_eligible: boolean;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface PermissionJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.Permission;\n  key: string;\n  name: string;\n  description: string;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface SamlAccountConnectionJSON extends ClerkResourceJSON {\n  id: string;\n  name: string;\n  domain: string;\n  active: boolean;\n  provider: string;\n  sync_user_attributes: boolean;\n  allow_subdomains: boolean;\n  allow_idp_initiated: boolean;\n  disable_additional_identifications: boolean;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface MachineJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.Machine;\n  id: string;\n  name: string;\n  instance_id: string;\n  created_at: number;\n  updated_at: number;\n  default_token_ttl: number;\n  scoped_machines: MachineJSON[];\n  secret_key?: string;\n}\n\nexport interface MachineScopeJSON {\n  object: typeof ObjectType.MachineScope;\n  from_machine_id: string;\n  to_machine_id: string;\n  created_at?: number;\n  deleted?: boolean;\n}\n\nexport interface MachineSecretKeyJSON {\n  object: typeof ObjectType.MachineSecretKey;\n  secret: string;\n}\n\nexport interface M2MTokenJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.M2MToken;\n  token?: string;\n  subject: string;\n  scopes: string[];\n  claims: Record<string, any> | null;\n  revoked: boolean;\n  revocation_reason: string | null;\n  expired: boolean;\n  expiration: number | null;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface APIKeyJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.ApiKey;\n  type: string;\n  name: string;\n  secret?: string;\n  subject: string;\n  scopes: string[];\n  claims: Record<string, any> | null;\n  revoked: boolean;\n  revocation_reason: string | null;\n  expired: boolean;\n  expiration: number | null;\n  created_by: string | null;\n  description: string | null;\n  last_used_at: number | null;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface IdPOAuthAccessTokenJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.IdpOAuthAccessToken;\n  client_id: string;\n  type: string;\n  subject: string;\n  scopes: string[];\n  revoked: boolean;\n  revocation_reason: string | null;\n  expired: boolean;\n  expiration: number | null;\n  created_at: number;\n  updated_at: number;\n}\n\nexport interface CommercePayerJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.CommercePayer;\n  instance_id: string;\n  user_id?: string;\n  first_name?: string;\n  last_name?: string;\n  email: string;\n  organization_id?: string;\n  organization_name?: string;\n  image_url: string;\n  created_at: number;\n  updated_at: number;\n}\n\ninterface CommercePayeeJSON {\n  id: string;\n  gateway_type: string;\n  gateway_external_id: string;\n  gateway_status: 'active' | 'pending' | 'restricted' | 'disconnected';\n}\n\ninterface CommerceMoneyAmountJSON {\n  amount: number;\n  amount_formatted: string;\n  currency: string;\n  currency_symbol: string;\n}\n\ninterface CommerceTotalsJSON {\n  subtotal: CommerceMoneyAmountJSON;\n  tax_total: CommerceMoneyAmountJSON;\n  grand_total: CommerceMoneyAmountJSON;\n}\n\nexport interface FeatureJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.Feature;\n  name: string;\n  description: string;\n  slug: string;\n  avatar_url: string;\n}\n\n/**\n * @experimental This is an experimental API for the Billing feature that is available under a public beta, and the API is subject to change.\n * It is advised to pin the SDK version to avoid breaking changes.\n */\nexport interface CommercePlanJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.CommercePlan;\n  id: string;\n  product_id: string;\n  name: string;\n  slug: string;\n  description?: string;\n  is_default: boolean;\n  is_recurring: boolean;\n  has_base_fee: boolean;\n  publicly_visible: boolean;\n  fee: CommerceMoneyAmountJSON;\n  annual_fee: CommerceMoneyAmountJSON;\n  annual_monthly_fee: CommerceMoneyAmountJSON;\n  for_payer_type: 'org' | 'user';\n  features: FeatureJSON[];\n}\n\ntype CommerceSubscriptionItemStatus =\n  | 'abandoned'\n  | 'active'\n  | 'canceled'\n  | 'ended'\n  | 'expired'\n  | 'incomplete'\n  | 'past_due'\n  | 'upcoming';\n\n/**\n * @experimental This is an experimental API for the Billing feature that is available under a public beta, and the API is subject to change.\n * It is advised to pin the SDK version to avoid breaking changes.\n */\nexport interface CommerceSubscriptionItemJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.CommerceSubscriptionItem;\n  status: CommerceSubscriptionItemStatus;\n  plan_period: 'month' | 'annual';\n  payer_id: string;\n  period_start: number;\n  period_end: number | null;\n  is_free_trial?: boolean;\n  ended_at: number | null;\n  created_at: number;\n  updated_at: number;\n  canceled_at: number | null;\n  past_due_at: number | null;\n  lifetime_paid: CommerceMoneyAmountJSON;\n  next_payment: {\n    amount: number;\n    date: number;\n  } | null;\n  amount: CommerceMoneyAmountJSON | null;\n  plan: CommercePlanJSON;\n  plan_id: string;\n}\n\n/**\n * Webhooks specific interface for CommerceSubscriptionItem.\n */\nexport interface CommerceSubscriptionItemWebhookEventJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.CommerceSubscriptionItem;\n  status: CommerceSubscriptionItemStatus;\n  credit: {\n    amount: CommerceMoneyAmountJSON;\n    cycle_days_remaining: number;\n    cycle_days_total: number;\n    cycle_remaining_percent: number;\n  };\n  proration_date: string;\n  plan_period: 'month' | 'annual';\n  period_start: number;\n  period_end?: number;\n  canceled_at?: number;\n  past_due_at?: number;\n  lifetime_paid: number;\n  next_payment_amount: number;\n  next_payment_date: number;\n  amount: CommerceMoneyAmountJSON;\n  plan: {\n    id: string;\n    instance_id: string;\n    product_id: string;\n    name: string;\n    slug: string;\n    description?: string;\n    is_default: boolean;\n    is_recurring: boolean;\n    amount: number;\n    period: 'month' | 'annual';\n    interval: number;\n    has_base_fee: boolean;\n    currency: string;\n    annual_monthly_amount: number;\n    publicly_visible: boolean;\n  };\n  plan_id: string;\n}\n\n/**\n * Webhooks specific interface for CommercePaymentAttempt.\n */\nexport interface CommercePaymentAttemptWebhookEventJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.CommercePaymentAttempt;\n  instance_id: string;\n  payment_id: string;\n  statement_id: string;\n  gateway_external_id: string;\n  status: 'pending' | 'paid' | 'failed';\n  created_at: number;\n  updated_at: number;\n  paid_at?: number;\n  failed_at?: number;\n  failed_reason?: {\n    code: string;\n    decline_code: string;\n  };\n  billing_date: number;\n  charge_type: 'checkout' | 'recurring';\n  payee: CommercePayeeJSON;\n  payer: CommercePayerJSON;\n  totals: CommerceTotalsJSON;\n  payment_source: {\n    id: string;\n    gateway: string;\n    gateway_external_id: string;\n    gateway_external_account_id?: string;\n    payment_method: string;\n    status: 'active' | 'disconnected';\n    card_type?: string;\n    last4?: string;\n  };\n  subscription_items: CommerceSubscriptionItemWebhookEventJSON[];\n}\n\n/**\n * Webhooks specific interface for CommerceSubscription.\n */\nexport interface CommerceSubscriptionWebhookEventJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.CommerceSubscription;\n  status: 'abandoned' | 'active' | 'canceled' | 'ended' | 'expired' | 'incomplete' | 'past_due' | 'upcoming';\n  active_at?: number;\n  canceled_at?: number;\n  created_at: number;\n  ended_at?: number;\n  past_due_at?: number;\n  updated_at: number;\n  latest_payment_id: string;\n  payer_id: string;\n  payer: CommercePayerJSON;\n  payment_source_id: string;\n  items: CommerceSubscriptionItemWebhookEventJSON[];\n}\n\nexport interface CommerceSubscriptionJSON extends ClerkResourceJSON {\n  object: typeof ObjectType.CommerceSubscription;\n  status: 'active' | 'past_due' | 'canceled' | 'ended' | 'abandoned' | 'incomplete';\n  payer_id: string;\n  created_at: number;\n  updated_at: number;\n  active_at: number | null;\n  past_due_at: number | null;\n  subscription_items: CommerceSubscriptionItemJSON[];\n  next_payment?: {\n    date: number;\n    amount: CommerceMoneyAmountJSON;\n  };\n  eligible_for_free_trial?: boolean;\n}\n\nexport interface WebhooksSvixJSON {\n  svix_url: string;\n}\n", "import type { MachineJSON } from './JSON';\n\nexport class Machine {\n  constructor(\n    readonly id: string,\n    readonly name: string,\n    readonly instanceId: string,\n    readonly createdAt: number,\n    readonly updatedAt: number,\n    readonly scopedMachines: Machine[],\n    readonly defaultTokenTtl: number,\n    readonly secretKey?: string,\n  ) {}\n\n  static fromJSON(data: MachineJSON): Machine {\n    return new Machine(\n      data.id,\n      data.name,\n      data.instance_id,\n      data.created_at,\n      data.updated_at,\n      data.scoped_machines.map(\n        m =>\n          new Machine(\n            m.id,\n            m.name,\n            m.instance_id,\n            m.created_at,\n            m.updated_at,\n            [], // Nested machines don't have scoped_machines\n            m.default_token_ttl,\n          ),\n      ),\n      data.default_token_ttl,\n      data.secret_key,\n    );\n  }\n}\n", "import type { MachineScopeJSON } from './JSON';\n\nexport class MachineScope {\n  constructor(\n    readonly fromMachineId: string,\n    readonly toMachineId: string,\n    readonly createdAt?: number,\n    readonly deleted?: boolean,\n  ) {}\n\n  static fromJSON(data: MachineScopeJSON): MachineScope {\n    return new MachineScope(data.from_machine_id, data.to_machine_id, data.created_at, data.deleted);\n  }\n}\n", "import type { MachineSecretKeyJSON } from './JSON';\n\nexport class MachineSecretKey {\n  constructor(readonly secret: string) {}\n\n  static fromJSON(data: MachineSecretKeyJSON): MachineSecretKey {\n    return new MachineSecretKey(data.secret);\n  }\n}\n", "import type { M2MTokenJSON } from './JSON';\n\nexport class M2MToken {\n  constructor(\n    readonly id: string,\n    readonly subject: string,\n    readonly scopes: string[],\n    readonly claims: Record<string, any> | null,\n    readonly revoked: boolean,\n    readonly revocationReason: string | null,\n    readonly expired: boolean,\n    readonly expiration: number | null,\n    readonly createdAt: number,\n    readonly updatedAt: number,\n    readonly token?: string,\n  ) {}\n\n  static fromJSON(data: M2MTokenJSON): M2MToken {\n    return new M2MToken(\n      data.id,\n      data.subject,\n      data.scopes,\n      data.claims,\n      data.revoked,\n      data.revocation_reason,\n      data.expired,\n      data.expiration,\n      data.created_at,\n      data.updated_at,\n      data.token,\n    );\n  }\n}\n", "import type { JwtTemplateJSON } from './JSON';\n\nexport class JwtTemplate {\n  constructor(\n    readonly id: string,\n    readonly name: string,\n    readonly claims: object,\n    readonly lifetime: number,\n    readonly allowedClockSkew: number,\n    readonly customSigningKey: boolean,\n    readonly signingAlgorithm: string,\n    readonly createdAt: number,\n    readonly updatedAt: number,\n  ) {}\n\n  static fromJSON(data: JwtTemplateJSON): JwtTemplate {\n    return new JwtTemplate(\n      data.id,\n      data.name,\n      data.claims,\n      data.lifetime,\n      data.allowed_clock_skew,\n      data.custom_signing_key,\n      data.signing_algorithm,\n      data.created_at,\n      data.updated_at,\n    );\n  }\n}\n", "import type { OauthAccessTokenJSON } from './JSON';\n\nexport class OauthAccessToken {\n  constructor(\n    readonly externalAccountId: string,\n    readonly provider: string,\n    readonly token: string,\n    readonly publicMetadata: Record<string, unknown> = {},\n    readonly label: string,\n    readonly scopes?: string[],\n    readonly tokenSecret?: string,\n    readonly expiresAt?: number,\n  ) {}\n\n  static fromJSON(data: OauthAccessTokenJSON) {\n    return new OauthAccessToken(\n      data.external_account_id,\n      data.provider,\n      data.token,\n      data.public_metadata,\n      data.label || '',\n      data.scopes,\n      data.token_secret,\n      data.expires_at,\n    );\n  }\n}\n", "import type { OAuthApplicationJSON } from './JSON';\n\n/**\n * The Backend `OAuthApplication` object holds information about an OAuth application.\n */\nexport class OAuthApplication {\n  constructor(\n    /**\n     * The unique identifier for the OAuth application.\n     */\n    readonly id: string,\n    /**\n     * The ID of the instance that this OAuth application belongs to.\n     */\n    readonly instanceId: string,\n    /**\n     * The name of the new OAuth application.\n     */\n    readonly name: string,\n    /**\n     * The ID of the client associated with the OAuth application.\n     */\n    readonly clientId: string,\n    /**\n     * The public-facing URL of the OAuth application, often shown on consent screens.\n     */\n    readonly clientUri: string | null,\n    /**\n     * The URL of the image or logo representing the OAuth application.\n     */\n    readonly clientImageUrl: string | null,\n    /**\n     * Specifies whether the OAuth application is dynamically registered.\n     */\n    readonly dynamicallyRegistered: boolean,\n    /**\n     * Specifies whether the consent screen should be displayed in the authentication flow. Cannot be disabled for dynamically registered OAuth applications.\n     */\n    readonly consentScreenEnabled: boolean,\n    /**\n     * Specifies whether the Proof Key of Code Exchange (PKCE) flow should be required in the authentication flow.\n     */\n    readonly pkceRequired: boolean,\n    /**\n     * Indicates whether the client is public. If true, the Proof Key of Code Exchange (PKCE) flow can be used.\n     */\n    readonly isPublic: boolean, // NOTE: `public` is reserved\n    /**\n     * Scopes for the new OAuth application.\n     */\n    readonly scopes: string,\n    /**\n     * An array of redirect URIs of the new OAuth application.\n     */\n    readonly redirectUris: Array<string>,\n    /**\n     * The URL used to authorize the user and obtain an authorization code.\n     */\n    readonly authorizeUrl: string,\n    /**\n     * The URL used by the client to exchange an authorization code for an access token.\n     */\n    readonly tokenFetchUrl: string,\n    /**\n     * The URL where the client can retrieve user information using an access token.\n     */\n    readonly userInfoUrl: string,\n    /**\n     * The OpenID Connect discovery endpoint URL for this OAuth application.\n     */\n    readonly discoveryUrl: string,\n    /**\n     * The URL used to introspect and validate issued access tokens.\n     */\n    readonly tokenIntrospectionUrl: string,\n    /**\n     * The date when the OAuth application was first created.\n     */\n    readonly createdAt: number,\n    /**\n     * The date when the OAuth application was last updated.\n     */\n    readonly updatedAt: number,\n    /**\n     * The client secret associated with the OAuth application. Empty if public client.\n     */\n    readonly clientSecret?: string,\n  ) {}\n\n  static fromJSON(data: OAuthApplicationJSON) {\n    return new OAuthApplication(\n      data.id,\n      data.instance_id,\n      data.name,\n      data.client_id,\n      data.client_uri,\n      data.client_image_url,\n      data.dynamically_registered,\n      data.consent_screen_enabled,\n      data.pkce_required,\n      data.public,\n      data.scopes,\n      data.redirect_uris,\n      data.authorize_url,\n      data.token_fetch_url,\n      data.user_info_url,\n      data.discovery_url,\n      data.token_introspection_url,\n      data.created_at,\n      data.updated_at,\n      data.client_secret,\n    );\n  }\n}\n", "import type { OrganizationJSON } from './JSON';\n\n/**\n * The Backend `Organization` object is similar to the [`Organization`](https://clerk.com/docs/references/javascript/organization) object as it holds information about an organization, as well as methods for managing it. However, the Backend `Organization` object is different in that it is used in the [Backend API](https://clerk.com/docs/reference/backend-api/tag/Organizations#operation/ListOrganizations){{ target: '_blank' }} and is not directly accessible from the Frontend API.\n */\nexport class Organization {\n  private _raw: OrganizationJSON | null = null;\n\n  public get raw(): OrganizationJSON | null {\n    return this._raw;\n  }\n\n  constructor(\n    /**\n     * The unique identifier for the organization.\n     */\n    readonly id: string,\n    /**\n     * The name of the organization.\n     */\n    readonly name: string,\n    /**\n     * The URL-friendly identifier of the user's active organization. If supplied, it must be unique for the instance.\n     */\n    readonly slug: string,\n    /**\n     * Holds the organization's logo. Compatible with Clerk's [Image Optimization](https://clerk.com/docs/guides/image-optimization).\n     */\n    readonly imageUrl: string,\n    /**\n     * Whether the organization has an image.\n     */\n    readonly hasImage: boolean,\n    /**\n     * The date when the organization was first created.\n     */\n    readonly createdAt: number,\n    /**\n     * The date when the organization was last updated.\n     */\n    readonly updatedAt: number,\n    /**\n     * Metadata that can be read from the Frontend API and [Backend API](https://clerk.com/docs/reference/backend-api){{ target: '_blank' }} and can be set only from the Backend API.\n     */\n    readonly publicMetadata: OrganizationPublicMetadata | null = {},\n    /**\n     * Metadata that can be read and set only from the [Backend API](https://clerk.com/docs/reference/backend-api){{ target: '_blank' }}.\n     */\n    readonly privateMetadata: OrganizationPrivateMetadata = {},\n    /**\n     * The maximum number of memberships allowed in the organization.\n     */\n    readonly maxAllowedMemberships: number,\n    /**\n     * Whether the organization allows admins to delete users.\n     */\n    readonly adminDeleteEnabled: boolean,\n    /**\n     * The number of members in the organization.\n     */\n    readonly membersCount?: number,\n    /**\n     * The ID of the user who created the organization.\n     */\n    readonly createdBy?: string,\n  ) {}\n\n  static fromJSON(data: OrganizationJSON): Organization {\n    const res = new Organization(\n      data.id,\n      data.name,\n      data.slug,\n      data.image_url || '',\n      data.has_image,\n      data.created_at,\n      data.updated_at,\n      data.public_metadata,\n      data.private_metadata,\n      data.max_allowed_memberships,\n      data.admin_delete_enabled,\n      data.members_count,\n      data.created_by,\n    );\n    res._raw = data;\n    return res;\n  }\n}\n", "import type { OrganizationInvitationStatus, OrganizationMembershipRole } from './Enums';\nimport type { OrganizationInvitationJSON, PublicOrganizationDataJSON } from './JSON';\n\n/**\n * The Backend `OrganizationInvitation` object is similar to the [`OrganizationInvitation`](https://clerk.com/docs/references/javascript/types/organization-invitation) object as it's the model around an organization invitation. However, the Backend `OrganizationInvitation` object is different in that it's used in the [Backend API](https://clerk.com/docs/reference/backend-api/tag/Organization-Invitations#operation/CreateOrganizationInvitation){{ target: '_blank' }} and is not directly accessible from the Frontend API.\n */\nexport class OrganizationInvitation {\n  private _raw: OrganizationInvitationJSON | null = null;\n\n  public get raw(): OrganizationInvitationJSON | null {\n    return this._raw;\n  }\n\n  constructor(\n    /**\n     * The unique identifier for the `OrganizationInvitation`.\n     */\n    readonly id: string,\n    /**\n     * The email address of the user who is invited to the [`Organization`](https://clerk.com/docs/references/backend/types/backend-organization).\n     */\n    readonly emailAddress: string,\n    /**\n     * The role of the invited user.\n     */\n    readonly role: OrganizationMembershipRole,\n    /**\n     * The name of the role of the invited user.\n     */\n    readonly roleName: string,\n    /**\n     * The ID of the [`Organization`](https://clerk.com/docs/references/backend/types/backend-organization) that the user is invited to.\n     */\n    readonly organizationId: string,\n    /**\n     * The date when the invitation was first created.\n     */\n    readonly createdAt: number,\n    /**\n     * The date when the invitation was last updated.\n     */\n    readonly updatedAt: number,\n    /**\n     * The date when the invitation expires.\n     */\n    readonly expiresAt: number,\n    /**\n     * The URL that the user can use to accept the invitation.\n     */\n    readonly url: string | null,\n    /**\n     * The status of the invitation.\n     */\n    readonly status?: OrganizationInvitationStatus,\n    /**\n     * Metadata that can be read from the Frontend API and [Backend API](https://clerk.com/docs/reference/backend-api){{ target: '_blank' }} and can be set only from the Backend API.\n     */\n    readonly publicMetadata: OrganizationInvitationPublicMetadata = {},\n    /**\n     * Metadata that can be read and set only from the [Backend API](https://clerk.com/docs/reference/backend-api){{ target: '_blank' }}.\n     */\n    readonly privateMetadata: OrganizationInvitationPrivateMetadata = {},\n    /**\n     * Public data about the organization that the user is invited to.\n     */\n    readonly publicOrganizationData?: PublicOrganizationDataJSON | null,\n  ) {}\n\n  static fromJSON(data: OrganizationInvitationJSON) {\n    const res = new OrganizationInvitation(\n      data.id,\n      data.email_address,\n      data.role,\n      data.role_name,\n      data.organization_id,\n      data.created_at,\n      data.updated_at,\n      data.expires_at,\n      data.url,\n      data.status,\n      data.public_metadata,\n      data.private_metadata,\n      data.public_organization_data,\n    );\n    res._raw = data;\n    return res;\n  }\n}\n", "import { Organization } from '../resources';\nimport type { OrganizationMembershipRole } from './Enums';\nimport type { OrganizationMembershipJSON, OrganizationMembershipPublicUserDataJSON } from './JSON';\n\n/**\n * The Backend `OrganizationMembership` object is similar to the [`OrganizationMembership`](https://clerk.com/docs/references/javascript/types/organization-membership) object as it's the model around an organization membership entity and describes the relationship between users and organizations. However, the Backend `OrganizationMembership` object is different in that it's used in the [Backend API](https://clerk.com/docs/reference/backend-api/tag/Organization-Memberships#operation/CreateOrganizationMembership){{ target: '_blank' }} and is not directly accessible from the Frontend API.\n */\nexport class OrganizationMembership {\n  private _raw: OrganizationMembershipJSON | null = null;\n\n  public get raw(): OrganizationMembershipJSON | null {\n    return this._raw;\n  }\n\n  constructor(\n    /**\n     * The unique identifier for the membership.\n     */\n    readonly id: string,\n    /**\n     * The role of the user.\n     */\n    readonly role: OrganizationMembershipRole,\n    /**\n     * The permissions granted to the user in the organization.\n     */\n    readonly permissions: string[],\n    /**\n     * Metadata that can be read from the Frontend API and [Backend API](https://clerk.com/docs/reference/backend-api){{ target: '_blank' }} and can be set only from the Backend API.\n     */\n    readonly publicMetadata: OrganizationMembershipPublicMetadata = {},\n    /**\n     * Metadata that can be read and set only from the [Backend API](https://clerk.com/docs/reference/backend-api){{ target: '_blank' }}.\n     */\n    readonly privateMetadata: OrganizationMembershipPrivateMetadata = {},\n    /**\n     * The date when the membership was first created.\n     */\n    readonly createdAt: number,\n    /**\n     * The date when the membership was last updated.\n     */\n    readonly updatedAt: number,\n    /**\n     * The organization that the user is a member of.\n     */\n    readonly organization: Organization,\n    /**\n     * Public information about the user that this membership belongs to.\n     */\n    readonly publicUserData?: OrganizationMembershipPublicUserData | null,\n  ) {}\n\n  static fromJSON(data: OrganizationMembershipJSON) {\n    const res = new OrganizationMembership(\n      data.id,\n      data.role,\n      data.permissions,\n      data.public_metadata,\n      data.private_metadata,\n      data.created_at,\n      data.updated_at,\n      Organization.fromJSON(data.organization),\n      OrganizationMembershipPublicUserData.fromJSON(data.public_user_data),\n    );\n    res._raw = data;\n    return res;\n  }\n}\n\n/**\n * @class\n */\nexport class OrganizationMembershipPublicUserData {\n  constructor(\n    /**\n     * The [identifier](https://clerk.com/docs/authentication/configuration/sign-up-sign-in-options#identifiers) of the user.\n     */\n    readonly identifier: string,\n    /**\n     * The first name of the user.\n     */\n    readonly firstName: string | null,\n    /**\n     * The last name of the user.\n     */\n    readonly lastName: string | null,\n    /**\n     * Holds the default avatar or user's uploaded profile image. Compatible with Clerk's [Image Optimization](https://clerk.com/docs/guides/image-optimization).\n     */\n    readonly imageUrl: string,\n    /**\n     * Whether the user has a profile picture.\n     */\n    readonly hasImage: boolean,\n    /**\n     * The ID of the user that this public data belongs to.\n     */\n    readonly userId: string,\n  ) {}\n\n  static fromJSON(data: OrganizationMembershipPublicUserDataJSON) {\n    return new OrganizationMembershipPublicUserData(\n      data.identifier,\n      data.first_name,\n      data.last_name,\n      data.image_url,\n      data.has_image,\n      data.user_id,\n    );\n  }\n}\n", "import type { DomainsEnrollmentModes } from './Enums';\nimport type { OrganizationSettingsJSON } from './JSON';\n\nexport class OrganizationSettings {\n  constructor(\n    readonly enabled: boolean,\n    readonly maxAllowedMemberships: number,\n    readonly maxAllowedRoles: number,\n    readonly maxAllowedPermissions: number,\n    readonly creatorRole: string,\n    readonly adminDeleteEnabled: boolean,\n    readonly domainsEnabled: boolean,\n    readonly domainsEnrollmentModes: Array<DomainsEnrollmentModes>,\n    readonly domainsDefaultRole: string,\n  ) {}\n\n  static fromJSON(data: OrganizationSettingsJSON): OrganizationSettings {\n    return new OrganizationSettings(\n      data.enabled,\n      data.max_allowed_memberships,\n      data.max_allowed_roles,\n      data.max_allowed_permissions,\n      data.creator_role,\n      data.admin_delete_enabled,\n      data.domains_enabled,\n      data.domains_enrollment_modes,\n      data.domains_default_role,\n    );\n  }\n}\n", "import { IdentificationLink } from './IdentificationLink';\nimport type { PhoneNumberJSON } from './JSON';\nimport { Verification } from './Verification';\n\n/**\n * The Backend `PhoneNumber` object describes a phone number. Phone numbers can be used as a proof of identification for users, or simply as a means of contacting users.\n *\n * Phone numbers must be **verified** to ensure that they can be assigned to their rightful owners. The `PhoneNumber` object holds all the necessary state around the verification process.\n *\n * Finally, phone numbers can be used as part of [multi-factor authentication](https://clerk.com/docs/authentication/configuration/sign-up-sign-in-options#multi-factor-authentication). During sign in, users can opt in to an extra verification step where they will receive an SMS message with a one-time code. This code must be entered to complete the sign in process.\n */\nexport class PhoneNumber {\n  constructor(\n    /**\n     * The unique identifier for this phone number.\n     */\n    readonly id: string,\n    /**\n     * The value of this phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164).\n     */\n    readonly phoneNumber: string,\n    /**\n     * Set to `true` if this phone number is reserved for multi-factor authentication (2FA). Set to `false` otherwise.\n     */\n    readonly reservedForSecondFactor: boolean,\n    /**\n     * Set to `true` if this phone number is the default second factor. Set to `false` otherwise. A user must have exactly one default second factor, if multi-factor authentication (2FA) is enabled.\n     */\n    readonly defaultSecondFactor: boolean,\n    /**\n     * An object holding information on the verification of this phone number.\n     */\n    readonly verification: Verification | null,\n    /**\n     * An object containing information about any other identification that might be linked to this phone number.\n     */\n    readonly linkedTo: IdentificationLink[],\n  ) {}\n\n  static fromJSON(data: PhoneNumberJSON): PhoneNumber {\n    return new PhoneNumber(\n      data.id,\n      data.phone_number,\n      data.reserved_for_second_factor,\n      data.default_second_factor,\n      data.verification && Verification.fromJSON(data.verification),\n      data.linked_to.map(link => IdentificationLink.fromJSON(link)),\n    );\n  }\n}\n", "import type { ProxyCheckJSON } from './JSON';\n\nexport class ProxyCheck {\n  constructor(\n    readonly id: string,\n    readonly domainId: string,\n    readonly lastRunAt: number | null,\n    readonly proxyUrl: string,\n    readonly successful: boolean,\n    readonly createdAt: number,\n    readonly updatedAt: number,\n  ) {}\n\n  static fromJSON(data: ProxyCheckJSON): ProxyCheck {\n    return new ProxyCheck(\n      data.id,\n      data.domain_id,\n      data.last_run_at,\n      data.proxy_url,\n      data.successful,\n      data.created_at,\n      data.updated_at,\n    );\n  }\n}\n", "import type { RedirectUrlJSON } from './JSON';\n\n/**\n * Redirect URLs are whitelisted URLs that facilitate secure authentication flows in native applications (e.g. React Native, Expo). In these contexts, Clerk ensures that security-critical nonces are passed only to the whitelisted URLs.\n\nThe Backend `RedirectUrl` object represents a redirect URL in your application. This object is used in the Backend API.\n */\nexport class RedirectUrl {\n  constructor(\n    /**\n     * The unique identifier for the redirect URL.\n     */\n    readonly id: string,\n    /**\n     * The full URL value prefixed with `https://` or a custom scheme.\n     * @example https://my-app.com/oauth-callback\n     * @example my-app://oauth-callback\n     */\n    readonly url: string,\n    /**\n     * The date when the redirect URL was first created.\n     */\n    readonly createdAt: number,\n    /**\n     * The date when the redirect URL was last updated.\n     */\n    readonly updatedAt: number,\n  ) {}\n\n  static fromJSON(data: RedirectUrlJSON): RedirectUrl {\n    return new RedirectUrl(data.id, data.url, data.created_at, data.updated_at);\n  }\n}\n", "import type { AttributeMappingJSON, SamlAccountConnectionJSON, SamlConnectionJSON } from './JSON';\n\n/**\n * The Backend `SamlConnection` object holds information about a SAML connection for an organization.\n */\nexport class SamlConnection {\n  constructor(\n    /**\n     * The unique identifier for the connection.\n     */\n    readonly id: string,\n    /**\n     * The name to use as a label for the connection.\n     */\n    readonly name: string,\n    /**\n     * The domain of your organization. Sign in flows using an email with this domain will use the connection.\n     */\n    readonly domain: string,\n    /**\n     * The organization ID of the organization.\n     */\n    readonly organizationId: string | null,\n    /**\n     * The Entity ID as provided by the Identity Provider (IdP).\n     */\n    readonly idpEntityId: string | null,\n    /**\n     * The Single-Sign On URL as provided by the Identity Provider (IdP).\n     */\n    readonly idpSsoUrl: string | null,\n    /**\n     * The X.509 certificate as provided by the Identity Provider (IdP).\n     */\n    readonly idpCertificate: string | null,\n    /**\n     * The URL which serves the Identity Provider (IdP) metadata. If present, it takes priority over the corresponding individual properties.\n     */\n    readonly idpMetadataUrl: string | null,\n    /**\n     * The XML content of the Identity Provider (IdP) metadata file. If present, it takes priority over the corresponding individual properties.\n     */\n    readonly idpMetadata: string | null,\n    /**\n     * The Assertion Consumer Service (ACS) URL of the connection.\n     */\n    readonly acsUrl: string,\n    /**\n     * The Entity ID as provided by the Service Provider (Clerk).\n     */\n    readonly spEntityId: string,\n    /**\n     * The metadata URL as provided by the Service Provider (Clerk).\n     */\n    readonly spMetadataUrl: string,\n    /**\n     * Indicates whether the connection is active or not.\n     */\n    readonly active: boolean,\n    /**\n     * The Identity Provider (IdP) of the connection.\n     */\n    readonly provider: string,\n    /**\n     * The number of users associated with the connection.\n     */\n    readonly userCount: number,\n    /**\n     * Indicates whether the connection syncs user attributes between the Service Provider (SP) and Identity Provider (IdP) or not.\n     */\n    readonly syncUserAttributes: boolean,\n    /**\n     * Indicates whether users with an email address subdomain are allowed to use this connection in order to authenticate or not.\n     */\n    readonly allowSubdomains: boolean,\n    /**\n     * Indicates whether the connection allows Identity Provider (IdP) initiated flows or not.\n     */\n    readonly allowIdpInitiated: boolean,\n    /**\n     * The date when the connection was first created.\n     */\n    readonly createdAt: number,\n    /**\n     * The date when the SAML connection was last updated.\n     */\n    readonly updatedAt: number,\n    /**\n     * Defines the attribute name mapping between the Identity Provider (IdP) and Clerk's [`User`](https://clerk.com/docs/references/javascript/user) properties.\n     */\n    readonly attributeMapping: AttributeMapping,\n  ) {}\n  static fromJSON(data: SamlConnectionJSON): SamlConnection {\n    return new SamlConnection(\n      data.id,\n      data.name,\n      data.domain,\n      data.organization_id,\n      data.idp_entity_id,\n      data.idp_sso_url,\n      data.idp_certificate,\n      data.idp_metadata_url,\n      data.idp_metadata,\n      data.acs_url,\n      data.sp_entity_id,\n      data.sp_metadata_url,\n      data.active,\n      data.provider,\n      data.user_count,\n      data.sync_user_attributes,\n      data.allow_subdomains,\n      data.allow_idp_initiated,\n      data.created_at,\n      data.updated_at,\n      data.attribute_mapping && AttributeMapping.fromJSON(data.attribute_mapping),\n    );\n  }\n}\n\nexport class SamlAccountConnection {\n  constructor(\n    readonly id: string,\n    readonly name: string,\n    readonly domain: string,\n    readonly active: boolean,\n    readonly provider: string,\n    readonly syncUserAttributes: boolean,\n    readonly allowSubdomains: boolean,\n    readonly allowIdpInitiated: boolean,\n    readonly createdAt: number,\n    readonly updatedAt: number,\n  ) {}\n  static fromJSON(data: SamlAccountConnectionJSON): SamlAccountConnection {\n    return new SamlAccountConnection(\n      data.id,\n      data.name,\n      data.domain,\n      data.active,\n      data.provider,\n      data.sync_user_attributes,\n      data.allow_subdomains,\n      data.allow_idp_initiated,\n      data.created_at,\n      data.updated_at,\n    );\n  }\n}\n\nclass AttributeMapping {\n  constructor(\n    /**\n     * The user ID attribute name.\n     */\n    readonly userId: string,\n    /**\n     * The email address attribute name.\n     */\n    readonly emailAddress: string,\n    /**\n     * The first name attribute name.\n     */\n    readonly firstName: string,\n    /**\n     * The last name attribute name.\n     */\n    readonly lastName: string,\n  ) {}\n\n  static fromJSON(data: AttributeMappingJSON): AttributeMapping {\n    return new AttributeMapping(data.user_id, data.email_address, data.first_name, data.last_name);\n  }\n}\n", "import type { SamlAccountJSON } from './JSON';\nimport { SamlAccountConnection } from './SamlConnection';\nimport { Verification } from './Verification';\n\n/**\n * The Backend `SamlAccount` object describes a SAML account.\n */\nexport class SamlAccount {\n  constructor(\n    /**\n     * The unique identifier for the SAML account.\n     */\n    readonly id: string,\n    /**\n     * The provider of the SAML account.\n     */\n    readonly provider: string,\n    /**\n     * The user's ID as used in the provider.\n     */\n    readonly providerUserId: string | null,\n    /**\n     * A boolean that indicates whether the SAML account is active.\n     */\n    readonly active: boolean,\n    /**\n     * The email address of the SAML account.\n     */\n    readonly emailAddress: string,\n    /**\n     * The first name of the SAML account.\n     */\n    readonly firstName: string,\n    /**\n     * The last name of the SAML account.\n     */\n    readonly lastName: string,\n    /**\n     * The verification of the SAML account.\n     */\n    readonly verification: Verification | null,\n    /**\n     * The SAML connection of the SAML account.\n     */\n    readonly samlConnection: SamlAccountConnection | null,\n  ) {}\n\n  static fromJSON(data: SamlAccountJSON): SamlAccount {\n    return new SamlAccount(\n      data.id,\n      data.provider,\n      data.provider_user_id,\n      data.active,\n      data.email_address,\n      data.first_name,\n      data.last_name,\n      data.verification && Verification.fromJSON(data.verification),\n      data.saml_connection && SamlAccountConnection.fromJSON(data.saml_connection),\n    );\n  }\n}\n", "import type { SignInTokenJSON } from './JSON';\n\nexport class SignInToken {\n  constructor(\n    readonly id: string,\n    readonly userId: string,\n    readonly token: string,\n    readonly status: string,\n    readonly url: string,\n    readonly createdAt: number,\n    readonly updatedAt: number,\n  ) {}\n\n  static fromJSON(data: SignInTokenJSON): SignInToken {\n    return new SignInToken(data.id, data.user_id, data.token, data.status, data.url, data.created_at, data.updated_at);\n  }\n}\n", "import type { SignUpStatus } from '@clerk/types';\n\nimport type { SignUpVerificationNextAction } from './Enums';\nimport type { SignUpJSON, SignUpVerificationJSON, SignUpVerificationsJSON } from './JSON';\n\nexport class SignUpAttemptVerification {\n  constructor(\n    readonly nextAction: SignUpVerificationNextAction,\n    readonly supportedStrategies: string[],\n  ) {}\n\n  static fromJSON(data: SignUpVerificationJSON): SignUpAttemptVerification {\n    return new SignUpAttemptVerification(data.next_action, data.supported_strategies);\n  }\n}\n\nexport class SignUpAttemptVerifications {\n  constructor(\n    readonly emailAddress: SignUpAttemptVerification | null,\n    readonly phoneNumber: SignUpAttemptVerification | null,\n    readonly web3Wallet: SignUpAttemptVerification | null,\n    readonly externalAccount: object | null,\n  ) {}\n\n  static fromJSON(data: SignUpVerificationsJSON): SignUpAttemptVerifications {\n    return new SignUpAttemptVerifications(\n      data.email_address && SignUpAttemptVerification.fromJSON(data.email_address),\n      data.phone_number && SignUpAttemptVerification.fromJSON(data.phone_number),\n      data.web3_wallet && SignUpAttemptVerification.fromJSON(data.web3_wallet),\n      data.external_account,\n    );\n  }\n}\n\nexport class SignUpAttempt {\n  constructor(\n    readonly id: string,\n    readonly status: SignUpStatus,\n    readonly requiredFields: string[],\n    readonly optionalFields: string[],\n    readonly missingFields: string[],\n    readonly unverifiedFields: string[],\n    readonly verifications: SignUpAttemptVerifications | null,\n    readonly username: string | null,\n    readonly emailAddress: string | null,\n    readonly phoneNumber: string | null,\n    readonly web3Wallet: string | null,\n    readonly passwordEnabled: boolean,\n    readonly firstName: string | null,\n    readonly lastName: string | null,\n    readonly customAction: boolean,\n    readonly externalId: string | null,\n    readonly createdSessionId: string | null,\n    readonly createdUserId: string | null,\n    readonly abandonAt: number | null,\n    readonly legalAcceptedAt: number | null,\n    readonly publicMetadata?: Record<string, unknown> | null,\n    readonly unsafeMetadata?: Record<string, unknown> | null,\n  ) {}\n\n  static fromJSON(data: SignUpJSON): SignUpAttempt {\n    return new SignUpAttempt(\n      data.id,\n      data.status,\n      data.required_fields,\n      data.optional_fields,\n      data.missing_fields,\n      data.unverified_fields,\n      data.verifications ? SignUpAttemptVerifications.fromJSON(data.verifications) : null,\n      data.username,\n      data.email_address,\n      data.phone_number,\n      data.web3_wallet,\n      data.password_enabled,\n      data.first_name,\n      data.last_name,\n      data.custom_action,\n      data.external_id,\n      data.created_session_id,\n      data.created_user_id,\n      data.abandon_at,\n      data.legal_accepted_at,\n      data.public_metadata,\n      data.unsafe_metadata,\n    );\n  }\n}\n", "import type { SMSMessageJSON } from './JSON';\n\nexport class SMSMessage {\n  constructor(\n    readonly id: string,\n    readonly fromPhoneNumber: string,\n    readonly toPhoneNumber: string,\n    readonly message: string,\n    readonly status: string,\n    readonly phoneNumberId: string | null,\n    readonly data?: Record<string, any> | null,\n  ) {}\n\n  static fromJSON(data: SMSMessageJSON): SMSMessage {\n    return new SMSMessage(\n      data.id,\n      data.from_phone_number,\n      data.to_phone_number,\n      data.message,\n      data.status,\n      data.phone_number_id,\n      data.data,\n    );\n  }\n}\n", "import type { TokenJSON } from './JSON';\n\nexport class Token {\n  constructor(readonly jwt: string) {}\n\n  static fromJSON(data: TokenJSON): Token {\n    return new Token(data.jwt);\n  }\n}\n", "import type { Web3WalletJSON } from './JSON';\nimport { Verification } from './Verification';\n\n/**\n * The Backend `Web3Wallet` object describes a Web3 wallet address. The address can be used as a proof of identification for users.\n *\n * Web3 addresses must be verified to ensure that they can be assigned to their rightful owners. The verification is completed via Web3 wallet browser extensions, such as [Metamask](https://metamask.io/), [Coinbase Wallet](https://www.coinbase.com/wallet), and [OKX Wallet](https://www.okx.com/help/section/faq-web3-wallet). The `Web3Wallet3` object holds all the necessary state around the verification process.\n */\nexport class Web3Wallet {\n  constructor(\n    /**\n     * The unique ID for the Web3 wallet.\n     */\n    readonly id: string,\n    /**\n     * The Web3 wallet address, made up of 0x + 40 hexadecimal characters.\n     */\n    readonly web3Wallet: string,\n    /**\n     * An object holding information on the verification of this Web3 wallet.\n     */\n    readonly verification: Verification | null,\n  ) {}\n\n  static fromJSON(data: Web3WalletJSON): Web3Wallet {\n    return new Web3Wallet(data.id, data.web3_wallet, data.verification && Verification.fromJSON(data.verification));\n  }\n}\n", "import { EmailAddress } from './EmailAddress';\nimport { ExternalAccount } from './ExternalAccount';\nimport type { ExternalAccountJSON, SamlAccountJSON, UserJSON } from './JSON';\nimport { PhoneNumber } from './PhoneNumber';\nimport { SamlAccount } from './SamlAccount';\nimport { Web3Wallet } from './Web3Wallet';\n\n/**\n * The Backend `User` object is similar to the `User` object as it holds information about a user of your application, such as their unique identifier, name, email addresses, phone numbers, and more. However, the Backend `User` object is different from the `User` object in that it is used in the [Backend API](https://clerk.com/docs/reference/backend-api/tag/Users#operation/GetUser){{ target: '_blank' }} and is not directly accessible from the Frontend API.\n */\nexport class User {\n  private _raw: UserJSON | null = null;\n\n  public get raw(): UserJSON | null {\n    return this._raw;\n  }\n\n  constructor(\n    /**\n     * The unique identifier for the user.\n     */\n    readonly id: string,\n    /**\n     * A boolean indicating whether the user has a password on their account.\n     */\n    readonly passwordEnabled: boolean,\n    /**\n     * A boolean indicating whether the user has enabled TOTP by generating a TOTP secret and verifying it via an authenticator app.\n     */\n    readonly totpEnabled: boolean,\n    /**\n     * A boolean indicating whether the user has enabled Backup codes.\n     */\n    readonly backupCodeEnabled: boolean,\n    /**\n     * A boolean indicating whether the user has enabled two-factor authentication.\n     */\n    readonly twoFactorEnabled: boolean,\n    /**\n     * A boolean indicating whether the user is banned or not.\n     */\n    readonly banned: boolean,\n    /**\n     * A boolean indicating whether the user is banned or not.\n     */\n    readonly locked: boolean,\n    /**\n     * The date when the user was first created.\n     */\n    readonly createdAt: number,\n    /**\n     * The date when the user was last updated.\n     */\n    readonly updatedAt: number,\n    /**\n     * The URL of the user's profile image.\n     */\n    readonly imageUrl: string,\n    /**\n     * A getter boolean to check if the user has uploaded an image or one was copied from OAuth. Returns `false` if Clerk is displaying an avatar for the user.\n     */\n    readonly hasImage: boolean,\n    /**\n     * The ID for the `EmailAddress` that the user has set as primary.\n     */\n    readonly primaryEmailAddressId: string | null,\n    /**\n     * The ID for the `PhoneNumber` that the user has set as primary.\n     */\n    readonly primaryPhoneNumberId: string | null,\n    /**\n     * The ID for the [`Web3Wallet`](https://clerk.com/docs/references/backend/types/backend-web3-wallet) that the user signed up with.\n     */\n    readonly primaryWeb3WalletId: string | null,\n    /**\n     * The date when the user last signed in. May be empty if the user has never signed in.\n     */\n    readonly lastSignInAt: number | null,\n    /**\n     * The ID of the user as used in your external systems. Must be unique across your instance.\n     */\n    readonly externalId: string | null,\n    /**\n     * The user's username.\n     */\n    readonly username: string | null,\n    /**\n     * The user's first name.\n     */\n    readonly firstName: string | null,\n    /**\n     * The user's last name.\n     */\n    readonly lastName: string | null,\n    /**\n     * Metadata that can be read from the Frontend API and [Backend API](https://clerk.com/docs/reference/backend-api){{ target: '_blank' }} and can be set only from the Backend API.\n     */\n    readonly publicMetadata: UserPublicMetadata = {},\n    /**\n     * Metadata that can be read and set only from the [Backend API](https://clerk.com/docs/reference/backend-api){{ target: '_blank' }}.\n     */\n    readonly privateMetadata: UserPrivateMetadata = {},\n    /**\n     * Metadata that can be read and set from the Frontend API. It's considered unsafe because it can be modified from the frontend.\n     */\n    readonly unsafeMetadata: UserUnsafeMetadata = {},\n    /**\n     * An array of all the `EmailAddress` objects associated with the user. Includes the primary.\n     */\n    readonly emailAddresses: EmailAddress[] = [],\n    /**\n     * An array of all the `PhoneNumber` objects associated with the user. Includes the primary.\n     */\n    readonly phoneNumbers: PhoneNumber[] = [],\n    /**\n     * An array of all the `Web3Wallet` objects associated with the user. Includes the primary.\n     */\n    readonly web3Wallets: Web3Wallet[] = [],\n    /**\n     * An array of all the `ExternalAccount` objects associated with the user via OAuth. **Note**: This includes both verified & unverified external accounts.\n     */\n    readonly externalAccounts: ExternalAccount[] = [],\n    /**\n     * An array of all the `SamlAccount` objects associated with the user via SAML.\n     */\n    readonly samlAccounts: SamlAccount[] = [],\n    /**\n     * Date when the user was last active.\n     */\n    readonly lastActiveAt: number | null,\n    /**\n     * A boolean indicating whether the organization creation is enabled for the user or not.\n     */\n    readonly createOrganizationEnabled: boolean,\n    /**\n     * An integer indicating the number of organizations that can be created by the user. If the value is `0`, then the user can create unlimited organizations. Default is `null`.\n     */\n    readonly createOrganizationsLimit: number | null = null,\n    /**\n     * A boolean indicating whether the user can delete their own account.\n     */\n    readonly deleteSelfEnabled: boolean,\n    /**\n     * The unix timestamp of when the user accepted the legal requirements. `null` if [**Require express consent to legal documents**](https://clerk.com/docs/authentication/configuration/legal-compliance) is not enabled.\n     */\n    readonly legalAcceptedAt: number | null,\n  ) {}\n\n  static fromJSON(data: UserJSON): User {\n    const res = new User(\n      data.id,\n      data.password_enabled,\n      data.totp_enabled,\n      data.backup_code_enabled,\n      data.two_factor_enabled,\n      data.banned,\n      data.locked,\n      data.created_at,\n      data.updated_at,\n      data.image_url,\n      data.has_image,\n      data.primary_email_address_id,\n      data.primary_phone_number_id,\n      data.primary_web3_wallet_id,\n      data.last_sign_in_at,\n      data.external_id,\n      data.username,\n      data.first_name,\n      data.last_name,\n      data.public_metadata,\n      data.private_metadata,\n      data.unsafe_metadata,\n      (data.email_addresses || []).map(x => EmailAddress.fromJSON(x)),\n      (data.phone_numbers || []).map(x => PhoneNumber.fromJSON(x)),\n      (data.web3_wallets || []).map(x => Web3Wallet.fromJSON(x)),\n      (data.external_accounts || []).map((x: ExternalAccountJSON) => ExternalAccount.fromJSON(x)),\n      (data.saml_accounts || []).map((x: SamlAccountJSON) => SamlAccount.fromJSON(x)),\n      data.last_active_at,\n      data.create_organization_enabled,\n      data.create_organizations_limit,\n      data.delete_self_enabled,\n      data.legal_accepted_at,\n    );\n    res._raw = data;\n    return res;\n  }\n\n  /**\n   * The primary email address of the user.\n   */\n  get primaryEmailAddress() {\n    return this.emailAddresses.find(({ id }) => id === this.primaryEmailAddressId) ?? null;\n  }\n\n  /**\n   * The primary phone number of the user.\n   */\n  get primaryPhoneNumber() {\n    return this.phoneNumbers.find(({ id }) => id === this.primaryPhoneNumberId) ?? null;\n  }\n\n  /**\n   * The primary web3 wallet of the user.\n   */\n  get primaryWeb3Wallet() {\n    return this.web3Wallets.find(({ id }) => id === this.primaryWeb3WalletId) ?? null;\n  }\n\n  /**\n   * The full name of the user.\n   */\n  get fullName() {\n    return [this.firstName, this.lastName].join(' ').trim() || null;\n  }\n}\n", "import type { WaitlistEntryStatus } from './Enums';\nimport { Invitation } from './Invitation';\nimport type { WaitlistEntryJSON } from './JSON';\n\nexport class WaitlistEntry {\n  constructor(\n    readonly id: string,\n    readonly emailAddress: string,\n    readonly status: WaitlistEntryStatus,\n    readonly invitation: Invitation | null,\n    readonly createdAt: number,\n    readonly updatedAt: number,\n    readonly isLocked?: boolean,\n  ) {}\n\n  static fromJSON(data: WaitlistEntryJSON): WaitlistEntry {\n    return new WaitlistEntry(\n      data.id,\n      data.email_address,\n      data.status,\n      data.invitation && Invitation.fromJSON(data.invitation),\n      data.created_at,\n      data.updated_at,\n      data.is_locked,\n    );\n  }\n}\n", "import type { FeatureJSON } from './JSON';\n\n/**\n * The `Feature` object represents a feature of a subscription plan.\n *\n * @experimental This is an experimental API for the Billing feature that is available under a public beta, and the API is subject to change. It is advised to pin the SDK version to avoid breaking changes.\n */\nexport class Feature {\n  constructor(\n    /**\n     * The unique identifier for the feature.\n     */\n    readonly id: string,\n    /**\n     * The name of the feature.\n     */\n    readonly name: string,\n    /**\n     * The description of the feature.\n     */\n    readonly description: string,\n    /**\n     * The URL-friendly identifier of the feature.\n     */\n    readonly slug: string,\n    /**\n     * The URL of the feature's avatar image.\n     */\n    readonly avatarUrl: string,\n  ) {}\n\n  static fromJSON(data: FeatureJSON): Feature {\n    return new Feature(data.id, data.name, data.description, data.slug, data.avatar_url);\n  }\n}\n", "import type { CommerceMoneyAmount } from '@clerk/types';\n\nimport { Feature } from './Feature';\nimport type { CommercePlanJSON } from './JSON';\n\n/**\n * The `CommercePlan` object is similar to the [`CommercePlanResource`](/docs/references/javascript/types/commerce-plan-resource) object as it holds information about a plan, as well as methods for managing it. However, the `CommercePlan` object is different in that it is used in the [Backend API](https://clerk.com/docs/reference/backend-api/tag/commerce/get/commerce/plans){{ target: '_blank' }} and is not directly accessible from the Frontend API.\n *\n * @experimental This is an experimental API for the Billing feature that is available under a public beta, and the API is subject to change. It is advised to pin the SDK version to avoid breaking changes.\n */\nexport class CommercePlan {\n  constructor(\n    /**\n     * The unique identifier for the plan.\n     */\n    readonly id: string,\n    /**\n     * The ID of the product the plan belongs to.\n     */\n    readonly productId: string,\n    /**\n     * The name of the plan.\n     */\n    readonly name: string,\n    /**\n     * The URL-friendly identifier of the plan.\n     */\n    readonly slug: string,\n    /**\n     * The description of the plan.\n     */\n    readonly description: string | undefined,\n    /**\n     * Whether the plan is the default plan.\n     */\n    readonly isDefault: boolean,\n    /**\n     * Whether the plan is recurring.\n     */\n    readonly isRecurring: boolean,\n    /**\n     * Whether the plan has a base fee.\n     */\n    readonly hasBaseFee: boolean,\n    /**\n     * Whether the plan is displayed in the `<PriceTable/>` component.\n     */\n    readonly publiclyVisible: boolean,\n    /**\n     * The monthly fee of the plan.\n     */\n    readonly fee: CommerceMoneyAmount,\n    /**\n     * The annual fee of the plan.\n     */\n    readonly annualFee: CommerceMoneyAmount,\n    /**\n     * The annual fee of the plan on a monthly basis.\n     */\n    readonly annualMonthlyFee: CommerceMoneyAmount,\n    /**\n     * The type of payer for the plan.\n     */\n    readonly forPayerType: 'org' | 'user',\n    /**\n     * The features the plan offers.\n     */\n    readonly features: Feature[],\n  ) {}\n\n  static fromJSON(data: CommercePlanJSON): CommercePlan {\n    const formatAmountJSON = (fee: CommercePlanJSON['fee']) => {\n      return {\n        amount: fee.amount,\n        amountFormatted: fee.amount_formatted,\n        currency: fee.currency,\n        currencySymbol: fee.currency_symbol,\n      };\n    };\n    return new CommercePlan(\n      data.id,\n      data.product_id,\n      data.name,\n      data.slug,\n      data.description,\n      data.is_default,\n      data.is_recurring,\n      data.has_base_fee,\n      data.publicly_visible,\n      formatAmountJSON(data.fee),\n      formatAmountJSON(data.annual_fee),\n      formatAmountJSON(data.annual_monthly_fee),\n      data.for_payer_type,\n      data.features.map(feature => Feature.fromJSON(feature)),\n    );\n  }\n}\n", "import type { CommerceMoneyAmount, CommerceMoneyAmountJSON } from '@clerk/types';\n\nimport { CommercePlan } from './CommercePlan';\nimport type { CommerceSubscriptionItemJSON } from './JSON';\n\n/**\n * The `CommerceSubscriptionItem` object is similar to the [`CommerceSubscriptionItemResource`](/docs/references/javascript/types/commerce-subscription-item-resource) object as it holds information about a subscription item, as well as methods for managing it. However, the `CommerceSubscriptionItem` object is different in that it is used in the [Backend API](https://clerk.com/docs/reference/backend-api/tag/commerce/get/commerce/subscription_items){{ target: '_blank' }} and is not directly accessible from the Frontend API.\n *\n * @experimental This is an experimental API for the Billing feature that is available under a public beta, and the API is subject to change. It is advised to pin the SDK version to avoid breaking changes.\n */\nexport class CommerceSubscriptionItem {\n  constructor(\n    /**\n     * The unique identifier for the subscription item.\n     */\n    readonly id: string,\n    /**\n     * The status of the subscription item.\n     */\n    readonly status: CommerceSubscriptionItemJSON['status'],\n    /**\n     * The plan period for the subscription item.\n     */\n    readonly planPeriod: 'month' | 'annual',\n    /**\n     * Unix timestamp (milliseconds) of when the current period starts.\n     */\n    readonly periodStart: number,\n    /**\n     * The next payment information.\n     */\n    readonly nextPayment: {\n      /**\n       * The amount of the next payment.\n       */\n      amount: number;\n      /**\n       * Unix timestamp (milliseconds) of when the next payment is scheduled.\n       */\n      date: number;\n    } | null,\n    /**\n     * The current amount for the subscription item.\n     */\n    readonly amount: CommerceMoneyAmount | null | undefined,\n    /**\n     * The plan associated with this subscription item.\n     */\n    readonly plan: CommercePlan,\n    /**\n     * The plan ID.\n     */\n    readonly planId: string,\n    /**\n     * Unix timestamp (milliseconds) of when the subscription item was created.\n     */\n    readonly createdAt: number,\n    /**\n     * Unix timestamp (milliseconds) of when the subscription item was last updated.\n     */\n    readonly updatedAt: number,\n    /**\n     * Unix timestamp (milliseconds) of when the current period ends.\n     */\n    readonly periodEnd: number | null,\n    /**\n     * Unix timestamp (milliseconds) of when the subscription item was canceled.\n     */\n    readonly canceledAt: number | null,\n    /**\n     * Unix timestamp (milliseconds) of when the subscription item became past due.\n     */\n    readonly pastDueAt: number | null,\n    /**\n     * Unix timestamp (milliseconds) of when the subscription item ended.\n     */\n    readonly endedAt: number | null,\n    /**\n     * The payer ID.\n     */\n    readonly payerId: string,\n    /**\n     * Whether this subscription item is currently in a free trial period.\n     */\n    readonly isFreeTrial?: boolean,\n    /**\n     * The lifetime amount paid for this subscription item.\n     */\n    readonly lifetimePaid?: CommerceMoneyAmount | null,\n  ) {}\n\n  static fromJSON(data: CommerceSubscriptionItemJSON): CommerceSubscriptionItem {\n    function formatAmountJSON(\n      amount: CommerceMoneyAmountJSON | null | undefined,\n    ): CommerceMoneyAmount | null | undefined {\n      if (!amount) {\n        return amount;\n      }\n\n      return {\n        amount: amount.amount,\n        amountFormatted: amount.amount_formatted,\n        currency: amount.currency,\n        currencySymbol: amount.currency_symbol,\n      };\n    }\n\n    return new CommerceSubscriptionItem(\n      data.id,\n      data.status,\n      data.plan_period,\n      data.period_start,\n      data.next_payment,\n      formatAmountJSON(data.amount),\n      CommercePlan.fromJSON(data.plan),\n      data.plan_id,\n      data.created_at,\n      data.updated_at,\n      data.period_end,\n      data.canceled_at,\n      data.past_due_at,\n      data.ended_at,\n      data.payer_id,\n      data.is_free_trial,\n      formatAmountJSON(data.lifetime_paid),\n    );\n  }\n}\n", "import { type CommerceMoneyAmount } from '@clerk/types';\n\nimport { CommerceSubscriptionItem } from './CommerceSubscriptionItem';\nimport type { CommerceSubscriptionJSON } from './JSON';\n\n/**\n * The `CommerceSubscription` object is similar to the [`CommerceSubscriptionResource`](/docs/references/javascript/types/commerce-subscription-resource) object as it holds information about a subscription, as well as methods for managing it. However, the `CommerceSubscription` object is different in that it is used in the [Backend API](https://clerk.com/docs/reference/backend-api/tag/billing/get/organizations/%7Borganization_id%7D/billing/subscription){{ target: '_blank' }} and is not directly accessible from the Frontend API.\n *\n * @experimental This is an experimental API for the Billing feature that is available under a public beta, and the API is subject to change. It is advised to pin the SDK version to avoid breaking changes.\n */\nexport class CommerceSubscription {\n  constructor(\n    /**\n     * The unique identifier for the commerce subscription.\n     */\n    readonly id: string,\n    /**\n     * The current status of the subscription.\n     */\n    readonly status: CommerceSubscriptionJSON['status'],\n    /**\n     * The ID of the payer for this subscription.\n     */\n    readonly payerId: string,\n    /**\n     * Unix timestamp (milliseconds) of when the subscription was created.\n     */\n    readonly createdAt: number,\n    /**\n     * Unix timestamp (milliseconds) of when the subscription was last updated.\n     */\n    readonly updatedAt: number,\n    /**\n     * Unix timestamp (milliseconds) of when the subscription became active.\n     */\n    readonly activeAt: number | null,\n    /**\n     * Unix timestamp (milliseconds) of when the subscription became past due.\n     */\n    readonly pastDueAt: number | null,\n    /**\n     * Array of subscription items in this subscription.\n     */\n    readonly subscriptionItems: CommerceSubscriptionItem[],\n    /**\n     * Information about the next scheduled payment.\n     */\n    readonly nextPayment: { date: number; amount: CommerceMoneyAmount } | null,\n    /**\n     * Whether the payer is eligible for a free trial.\n     */\n    readonly eligibleForFreeTrial: boolean,\n  ) {}\n\n  static fromJSON(data: CommerceSubscriptionJSON): CommerceSubscription {\n    const nextPayment = data.next_payment\n      ? {\n          date: data.next_payment.date,\n          amount: {\n            amount: data.next_payment.amount.amount,\n            amountFormatted: data.next_payment.amount.amount_formatted,\n            currency: data.next_payment.amount.currency,\n            currencySymbol: data.next_payment.amount.currency_symbol,\n          },\n        }\n      : null;\n\n    return new CommerceSubscription(\n      data.id,\n      data.status,\n      data.payer_id,\n      data.created_at,\n      data.updated_at,\n      data.active_at ?? null,\n      data.past_due_at ?? null,\n      data.subscription_items.map(item => CommerceSubscriptionItem.fromJSON(item)),\n      nextPayment,\n      data.eligible_for_free_trial ?? false,\n    );\n  }\n}\n", "import {\n  ActorToken,\n  AllowlistIdentifier,\n  APIKey,\n  BlocklistIdentifier,\n  Client,\n  Cookies,\n  DeletedObject,\n  Domain,\n  Email,\n  EmailAddress,\n  IdPOAuthAccessToken,\n  Instance,\n  InstanceRestrictions,\n  InstanceSettings,\n  Invitation,\n  JwtTemplate,\n  M2MToken,\n  Machine,\n  MachineScope,\n  MachineSecretKey,\n  OauthAccessToken,\n  OAuthApplication,\n  Organization,\n  OrganizationInvitation,\n  OrganizationMembership,\n  OrganizationSettings,\n  PhoneNumber,\n  ProxyCheck,\n  RedirectUrl,\n  SamlConnection,\n  Session,\n  SignInToken,\n  SignUpAttempt,\n  SMSMessage,\n  Token,\n  User,\n} from '.';\nimport { AccountlessApplication } from './AccountlessApplication';\nimport { CommercePlan } from './CommercePlan';\nimport { CommerceSubscription } from './CommerceSubscription';\nimport { CommerceSubscriptionItem } from './CommerceSubscriptionItem';\nimport { Feature } from './Feature';\nimport type { PaginatedResponseJSON } from './JSON';\nimport { ObjectType } from './JSON';\nimport { WaitlistEntry } from './WaitlistEntry';\n\ntype ResourceResponse<T> = {\n  /**\n   * An array that contains the fetched data.\n   */\n  data: T;\n};\n\n/**\n * An interface that describes the response of a method that returns a paginated list of resources.\n *\n * If the promise resolves, you will get back the [properties](#properties) listed below. `data` will be an array of the resource type you requested. You can use the `totalCount` property to determine how many total items exist remotely.\n *\n * Some methods that return this type allow pagination with the `limit` and `offset` parameters, in which case the first 10 items will be returned by default. For methods such as [`getAllowlistIdentifierList()`](https://clerk.com/docs/references/backend/allowlist/get-allowlist-identifier-list), which do not take a `limit` or `offset`, all items will be returned.\n *\n * If the promise is rejected, you will receive a `ClerkAPIResponseError` or network error.\n *\n * @interface\n */\nexport type PaginatedResourceResponse<T> = ResourceResponse<T> & {\n  /**\n   * The total count of data that exist remotely.\n   */\n  totalCount: number;\n};\n\nexport function deserialize<U = any>(payload: unknown): PaginatedResourceResponse<U> | ResourceResponse<U> {\n  let data, totalCount: number | undefined;\n\n  if (Array.isArray(payload)) {\n    const data = payload.map(item => jsonToObject(item)) as U;\n    return { data };\n  } else if (isPaginated(payload)) {\n    data = payload.data.map(item => jsonToObject(item)) as U;\n    totalCount = payload.total_count;\n\n    return { data, totalCount };\n  } else {\n    return { data: jsonToObject(payload) };\n  }\n}\n\nfunction isPaginated(payload: unknown): payload is PaginatedResponseJSON {\n  if (!payload || typeof payload !== 'object' || !('data' in payload)) {\n    return false;\n  }\n\n  return Array.isArray(payload.data) && payload.data !== undefined;\n}\n\nfunction getCount(item: PaginatedResponseJSON) {\n  return item.total_count;\n}\n\n// TODO: Revise response deserialization\nfunction jsonToObject(item: any): any {\n  // Special case: DeletedObject\n  // TODO: Improve this check\n  if (typeof item !== 'string' && 'object' in item && 'deleted' in item) {\n    return DeletedObject.fromJSON(item);\n  }\n\n  switch (item.object) {\n    case ObjectType.AccountlessApplication:\n      return AccountlessApplication.fromJSON(item);\n    case ObjectType.ActorToken:\n      return ActorToken.fromJSON(item);\n    case ObjectType.AllowlistIdentifier:\n      return AllowlistIdentifier.fromJSON(item);\n    case ObjectType.ApiKey:\n      return APIKey.fromJSON(item);\n    case ObjectType.BlocklistIdentifier:\n      return BlocklistIdentifier.fromJSON(item);\n    case ObjectType.Client:\n      return Client.fromJSON(item);\n    case ObjectType.Cookies:\n      return Cookies.fromJSON(item);\n    case ObjectType.Domain:\n      return Domain.fromJSON(item);\n    case ObjectType.EmailAddress:\n      return EmailAddress.fromJSON(item);\n    case ObjectType.Email:\n      return Email.fromJSON(item);\n    case ObjectType.IdpOAuthAccessToken:\n      return IdPOAuthAccessToken.fromJSON(item);\n    case ObjectType.Instance:\n      return Instance.fromJSON(item);\n    case ObjectType.InstanceRestrictions:\n      return InstanceRestrictions.fromJSON(item);\n    case ObjectType.InstanceSettings:\n      return InstanceSettings.fromJSON(item);\n    case ObjectType.Invitation:\n      return Invitation.fromJSON(item);\n    case ObjectType.JwtTemplate:\n      return JwtTemplate.fromJSON(item);\n    case ObjectType.Machine:\n      return Machine.fromJSON(item);\n    case ObjectType.MachineScope:\n      return MachineScope.fromJSON(item);\n    case ObjectType.MachineSecretKey:\n      return MachineSecretKey.fromJSON(item);\n    case ObjectType.M2MToken:\n      return M2MToken.fromJSON(item);\n    case ObjectType.OauthAccessToken:\n      return OauthAccessToken.fromJSON(item);\n    case ObjectType.OAuthApplication:\n      return OAuthApplication.fromJSON(item);\n    case ObjectType.Organization:\n      return Organization.fromJSON(item);\n    case ObjectType.OrganizationInvitation:\n      return OrganizationInvitation.fromJSON(item);\n    case ObjectType.OrganizationMembership:\n      return OrganizationMembership.fromJSON(item);\n    case ObjectType.OrganizationSettings:\n      return OrganizationSettings.fromJSON(item);\n    case ObjectType.PhoneNumber:\n      return PhoneNumber.fromJSON(item);\n    case ObjectType.ProxyCheck:\n      return ProxyCheck.fromJSON(item);\n    case ObjectType.RedirectUrl:\n      return RedirectUrl.fromJSON(item);\n    case ObjectType.SamlConnection:\n      return SamlConnection.fromJSON(item);\n    case ObjectType.SignInToken:\n      return SignInToken.fromJSON(item);\n    case ObjectType.SignUpAttempt:\n      return SignUpAttempt.fromJSON(item);\n    case ObjectType.Session:\n      return Session.fromJSON(item);\n    case ObjectType.SmsMessage:\n      return SMSMessage.fromJSON(item);\n    case ObjectType.Token:\n      return Token.fromJSON(item);\n    case ObjectType.TotalCount:\n      return getCount(item);\n    case ObjectType.User:\n      return User.fromJSON(item);\n    case ObjectType.WaitlistEntry:\n      return WaitlistEntry.fromJSON(item);\n    case ObjectType.CommercePlan:\n      return CommercePlan.fromJSON(item);\n    case ObjectType.CommerceSubscription:\n      return CommerceSubscription.fromJSON(item);\n    case ObjectType.CommerceSubscriptionItem:\n      return CommerceSubscriptionItem.fromJSON(item);\n    case ObjectType.Feature:\n      return Feature.fromJSON(item);\n    default:\n      return item;\n  }\n}\n", "import {\n  AccountlessApplicationAPI,\n  ActorTokenAPI,\n  AllowlistIdentifierAPI,\n  APIKeysAPI,\n  BetaFeaturesAPI,\n  BlocklistIdentifierAPI,\n  ClientAPI,\n  DomainAPI,\n  EmailAddressAPI,\n  IdPOAuthAccessTokenApi,\n  InstanceAPI,\n  InvitationAPI,\n  JwksAPI,\n  JwtTemplatesApi,\n  M2MTokenApi,\n  MachineApi,\n  OAuthApplicationsApi,\n  OrganizationAPI,\n  PhoneNumberAPI,\n  ProxyCheckAPI,\n  RedirectUrlAPI,\n  SamlConnectionAPI,\n  SessionAPI,\n  SignInTokenAPI,\n  SignUpAPI,\n  TestingTokenAPI,\n  UserAPI,\n  WaitlistEntryAPI,\n  WebhookAPI,\n} from './endpoints';\nimport { BillingAPI } from './endpoints/BillingApi';\nimport { buildRequest } from './request';\n\nexport type CreateBackendApiOptions = Parameters<typeof buildRequest>[0];\n\nexport type ApiClient = ReturnType<typeof createBackendApiClient>;\n\nexport function createBackendApiClient(options: CreateBackendApiOptions) {\n  const request = buildRequest(options);\n\n  return {\n    __experimental_accountlessApplications: new AccountlessApplicationAPI(\n      buildRequest({ ...options, requireSecretKey: false }),\n    ),\n    actorTokens: new ActorTokenAPI(request),\n    allowlistIdentifiers: new AllowlistIdentifierAPI(request),\n    apiKeys: new APIKeysAPI(\n      buildRequest({\n        ...options,\n        skipApiVersionInUrl: true,\n      }),\n    ),\n    betaFeatures: new BetaFeaturesAPI(request),\n    blocklistIdentifiers: new BlocklistIdentifierAPI(request),\n    /**\n     * @experimental This is an experimental API for the Billing feature that is available under a public beta, and the API is subject to change.\n     * It is advised to pin the SDK version to avoid breaking changes.\n     */\n    billing: new BillingAPI(request),\n    clients: new ClientAPI(request),\n    domains: new DomainAPI(request),\n    emailAddresses: new EmailAddressAPI(request),\n    idPOAuthAccessToken: new IdPOAuthAccessTokenApi(\n      buildRequest({\n        ...options,\n        skipApiVersionInUrl: true,\n      }),\n    ),\n    instance: new InstanceAPI(request),\n    invitations: new InvitationAPI(request),\n    jwks: new JwksAPI(request),\n    jwtTemplates: new JwtTemplatesApi(request),\n    machines: new MachineApi(request),\n    m2m: new M2MTokenApi(\n      buildRequest({\n        ...options,\n        skipApiVersionInUrl: true,\n        requireSecretKey: false,\n        useMachineSecretKey: true,\n      }),\n    ),\n    oauthApplications: new OAuthApplicationsApi(request),\n    organizations: new OrganizationAPI(request),\n    phoneNumbers: new PhoneNumberAPI(request),\n    proxyChecks: new ProxyCheckAPI(request),\n    redirectUrls: new RedirectUrlAPI(request),\n    samlConnections: new SamlConnectionAPI(request),\n    sessions: new SessionAPI(request),\n    signInTokens: new SignInTokenAPI(request),\n    signUps: new SignUpAPI(request),\n    testingTokens: new TestingTokenAPI(request),\n    users: new UserAPI(request),\n    waitlistEntries: new WaitlistEntryAPI(request),\n    webhooks: new WebhookAPI(request),\n  };\n}\n", "import type { AuthenticateRequestOptions } from '../tokens/types';\nimport type { MachineTokenType } from './tokenTypes';\nimport { TokenType } from './tokenTypes';\n\nexport const M2M_TOKEN_PREFIX = 'mt_';\nexport const OAUTH_TOKEN_PREFIX = 'oat_';\nexport const API_KEY_PREFIX = 'ak_';\n\nconst MACHINE_TOKEN_PREFIXES = [M2M_TOKEN_PREFIX, OAUTH_TOKEN_PREFIX, API_KEY_PREFIX] as const;\n\n/**\n * Checks if a token is a machine token by looking at its prefix.\n *\n * @remarks\n * In the future, this will support custom prefixes that can be prepended to the base prefixes\n * (e.g. \"org_a_m2m_\", \"org_a_oauth_access_\", \"org_a_api_key_\")\n *\n * @param token - The token string to check\n * @returns true if the token starts with a recognized machine token prefix\n */\nexport function isMachineTokenByPrefix(token: string): boolean {\n  return MACHINE_TOKEN_PREFIXES.some(prefix => token.startsWith(prefix));\n}\n\n/**\n * Gets the specific type of machine token based on its prefix.\n *\n * @remarks\n * In the future, this will support custom prefixes that can be prepended to the base prefixes\n * (e.g. \"org_a_m2m_\", \"org_a_oauth_access_\", \"org_a_api_key_\")\n *\n * @param token - The token string to check\n * @returns The specific MachineTokenType\n * @throws Error if the token doesn't match any known machine token prefix\n */\nexport function getMachineTokenType(token: string): MachineTokenType {\n  if (token.startsWith(M2M_TOKEN_PREFIX)) {\n    return TokenType.M2MToken;\n  }\n\n  if (token.startsWith(OAUTH_TOKEN_PREFIX)) {\n    return TokenType.OAuthToken;\n  }\n\n  if (token.startsWith(API_KEY_PREFIX)) {\n    return TokenType.ApiKey;\n  }\n\n  throw new Error('Unknown machine token type');\n}\n\n/**\n * Check if a token type is accepted given a requested token type or list of token types.\n *\n * @param tokenType - The token type to check (can be null if the token is invalid)\n * @param acceptsToken - The requested token type or list of token types\n * @returns true if the token type is accepted\n */\nexport const isTokenTypeAccepted = (\n  tokenType: TokenType | null,\n  acceptsToken: NonNullable<AuthenticateRequestOptions['acceptsToken']>,\n): boolean => {\n  if (!tokenType) {\n    return false;\n  }\n\n  if (acceptsToken === 'any') {\n    return true;\n  }\n\n  const tokenTypes = Array.isArray(acceptsToken) ? acceptsToken : [acceptsToken];\n  return tokenTypes.includes(tokenType);\n};\n\n/**\n * Checks if a token type string is a machine token type (api_key, m2m_token, or oauth_token).\n *\n * @param type - The token type string to check\n * @returns true if the type is a machine token type\n */\nexport function isMachineTokenType(type: string): type is MachineTokenType {\n  return type === TokenType.ApiKey || type === TokenType.M2MToken || type === TokenType.OAuthToken;\n}\n", "import type { JwtPayload, PendingSessionOptions } from '@clerk/types';\n\nimport { constants } from '../constants';\nimport type { TokenVerificationErrorReason } from '../errors';\nimport type { AuthenticateContext } from './authenticateContext';\nimport type {\n  AuthenticatedMachineObject,\n  InvalidTokenAuthObject,\n  SignedInAuthObject,\n  SignedOutAuthObject,\n  UnauthenticatedMachineObject,\n} from './authObjects';\nimport {\n  authenticatedMachineObject,\n  invalidTokenAuthObject,\n  signedInAuthObject,\n  signedOutAuthObject,\n  unauthenticatedMachineObject,\n} from './authObjects';\nimport type { MachineTokenType, SessionTokenType } from './tokenTypes';\nimport { TokenType } from './tokenTypes';\nimport type { MachineAuthType } from './types';\n\nexport const AuthStatus = {\n  SignedIn: 'signed-in',\n  SignedOut: 'signed-out',\n  Handshake: 'handshake',\n} as const;\n\nexport type AuthStatus = (typeof AuthStatus)[keyof typeof AuthStatus];\n\ntype ToAuth<T extends TokenType | null, Authenticated extends boolean> = T extends null\n  ? () => InvalidTokenAuthObject\n  : T extends SessionTokenType\n    ? Authenticated extends true\n      ? (opts?: PendingSessionOptions) => SignedInAuthObject\n      : () => SignedOutAuthObject\n    : Authenticated extends true\n      ? () => AuthenticatedMachineObject<Exclude<T, SessionTokenType | null>>\n      : () => UnauthenticatedMachineObject<Exclude<T, SessionTokenType | null>>;\n\nexport type AuthenticatedState<T extends TokenType = SessionTokenType> = {\n  status: typeof AuthStatus.SignedIn;\n  reason: null;\n  message: null;\n  proxyUrl?: string;\n  publishableKey: string;\n  isSatellite: boolean;\n  domain: string;\n  signInUrl: string;\n  signUpUrl: string;\n  afterSignInUrl: string;\n  afterSignUpUrl: string;\n  /**\n   * @deprecated Use `isAuthenticated` instead.\n   */\n  isSignedIn: true;\n  isAuthenticated: true;\n  headers: Headers;\n  token: string;\n  tokenType: T;\n  toAuth: ToAuth<T, true>;\n};\n\nexport type UnauthenticatedState<T extends TokenType | null = SessionTokenType> = {\n  status: typeof AuthStatus.SignedOut;\n  reason: AuthReason;\n  message: string;\n  proxyUrl?: string;\n  publishableKey: string;\n  isSatellite: boolean;\n  domain: string;\n  signInUrl: string;\n  signUpUrl: string;\n  afterSignInUrl: string;\n  afterSignUpUrl: string;\n  /**\n   * @deprecated Use `isAuthenticated` instead.\n   */\n  isSignedIn: false;\n  isAuthenticated: false;\n  tokenType: T;\n  headers: Headers;\n  token: null;\n  toAuth: ToAuth<T, false>;\n};\n\nexport type HandshakeState = Omit<UnauthenticatedState<SessionTokenType>, 'status' | 'toAuth' | 'tokenType'> & {\n  tokenType: SessionTokenType;\n  status: typeof AuthStatus.Handshake;\n  headers: Headers;\n  toAuth: () => null;\n};\n\n/**\n * @deprecated Use AuthenticatedState instead\n */\nexport type SignedInState = AuthenticatedState<SessionTokenType>;\n\n/**\n * @deprecated Use UnauthenticatedState instead\n */\nexport type SignedOutState = UnauthenticatedState<SessionTokenType>;\n\nexport const AuthErrorReason = {\n  ClientUATWithoutSessionToken: 'client-uat-but-no-session-token',\n  DevBrowserMissing: 'dev-browser-missing',\n  DevBrowserSync: 'dev-browser-sync',\n  PrimaryRespondsToSyncing: 'primary-responds-to-syncing',\n  PrimaryDomainCrossOriginSync: 'primary-domain-cross-origin-sync',\n  SatelliteCookieNeedsSyncing: 'satellite-needs-syncing',\n  SessionTokenAndUATMissing: 'session-token-and-uat-missing',\n  SessionTokenMissing: 'session-token-missing',\n  SessionTokenExpired: 'session-token-expired',\n  SessionTokenIATBeforeClientUAT: 'session-token-iat-before-client-uat',\n  SessionTokenNBF: 'session-token-nbf',\n  SessionTokenIatInTheFuture: 'session-token-iat-in-the-future',\n  SessionTokenWithoutClientUAT: 'session-token-but-no-client-uat',\n  ActiveOrganizationMismatch: 'active-organization-mismatch',\n  TokenTypeMismatch: 'token-type-mismatch',\n  UnexpectedError: 'unexpected-error',\n} as const;\n\nexport type AuthErrorReason = (typeof AuthErrorReason)[keyof typeof AuthErrorReason];\n\nexport type AuthReason = AuthErrorReason | TokenVerificationErrorReason;\n\nexport type RequestState<T extends TokenType | null = SessionTokenType> =\n  | AuthenticatedState<T extends null ? never : T>\n  | UnauthenticatedState<T>\n  | (T extends SessionTokenType ? HandshakeState : never);\n\ntype BaseSignedInParams = {\n  authenticateContext: AuthenticateContext;\n  headers?: Headers;\n  token: string;\n  tokenType: TokenType;\n};\n\ntype SignedInParams =\n  | (BaseSignedInParams & { tokenType: SessionTokenType; sessionClaims: JwtPayload })\n  | (BaseSignedInParams & { tokenType: MachineTokenType; machineData: MachineAuthType });\n\nexport function signedIn<T extends TokenType>(params: SignedInParams & { tokenType: T }): AuthenticatedState<T> {\n  const { authenticateContext, headers = new Headers(), token } = params;\n\n  const toAuth = (({ treatPendingAsSignedOut = true } = {}) => {\n    if (params.tokenType === TokenType.SessionToken) {\n      const { sessionClaims } = params as { sessionClaims: JwtPayload };\n      const authObject = signedInAuthObject(authenticateContext, token, sessionClaims);\n\n      if (treatPendingAsSignedOut && authObject.sessionStatus === 'pending') {\n        return signedOutAuthObject(undefined, authObject.sessionStatus);\n      }\n\n      return authObject;\n    }\n\n    const { machineData } = params as { machineData: MachineAuthType };\n    return authenticatedMachineObject(params.tokenType, token, machineData, authenticateContext);\n  }) as ToAuth<T, true>;\n\n  return {\n    status: AuthStatus.SignedIn,\n    reason: null,\n    message: null,\n    proxyUrl: authenticateContext.proxyUrl || '',\n    publishableKey: authenticateContext.publishableKey || '',\n    isSatellite: authenticateContext.isSatellite || false,\n    domain: authenticateContext.domain || '',\n    signInUrl: authenticateContext.signInUrl || '',\n    signUpUrl: authenticateContext.signUpUrl || '',\n    afterSignInUrl: authenticateContext.afterSignInUrl || '',\n    afterSignUpUrl: authenticateContext.afterSignUpUrl || '',\n    isSignedIn: true,\n    isAuthenticated: true,\n    tokenType: params.tokenType,\n    toAuth,\n    headers,\n    token,\n  };\n}\n\ntype SignedOutParams = Omit<BaseSignedInParams, 'token'> & {\n  reason: AuthReason;\n  message?: string;\n};\n\nexport function signedOut<T extends TokenType>(params: SignedOutParams & { tokenType: T }): UnauthenticatedState<T> {\n  const { authenticateContext, headers = new Headers(), reason, message = '', tokenType } = params;\n\n  const toAuth = (() => {\n    if (tokenType === TokenType.SessionToken) {\n      return signedOutAuthObject({ ...authenticateContext, status: AuthStatus.SignedOut, reason, message });\n    }\n\n    return unauthenticatedMachineObject(tokenType, { reason, message, headers });\n  }) as ToAuth<T, false>;\n\n  return withDebugHeaders({\n    status: AuthStatus.SignedOut,\n    reason,\n    message,\n    proxyUrl: authenticateContext.proxyUrl || '',\n    publishableKey: authenticateContext.publishableKey || '',\n    isSatellite: authenticateContext.isSatellite || false,\n    domain: authenticateContext.domain || '',\n    signInUrl: authenticateContext.signInUrl || '',\n    signUpUrl: authenticateContext.signUpUrl || '',\n    afterSignInUrl: authenticateContext.afterSignInUrl || '',\n    afterSignUpUrl: authenticateContext.afterSignUpUrl || '',\n    isSignedIn: false,\n    isAuthenticated: false,\n    tokenType,\n    toAuth,\n    headers,\n    token: null,\n  });\n}\n\nexport function handshake(\n  authenticateContext: AuthenticateContext,\n  reason: AuthReason,\n  message = '',\n  headers: Headers,\n): HandshakeState {\n  return withDebugHeaders({\n    status: AuthStatus.Handshake,\n    reason,\n    message,\n    publishableKey: authenticateContext.publishableKey || '',\n    isSatellite: authenticateContext.isSatellite || false,\n    domain: authenticateContext.domain || '',\n    proxyUrl: authenticateContext.proxyUrl || '',\n    signInUrl: authenticateContext.signInUrl || '',\n    signUpUrl: authenticateContext.signUpUrl || '',\n    afterSignInUrl: authenticateContext.afterSignInUrl || '',\n    afterSignUpUrl: authenticateContext.afterSignUpUrl || '',\n    isSignedIn: false,\n    isAuthenticated: false,\n    tokenType: TokenType.SessionToken,\n    toAuth: () => null,\n    headers,\n    token: null,\n  });\n}\n\nexport function signedOutInvalidToken(): UnauthenticatedState<null> {\n  const authObject = invalidTokenAuthObject();\n  return withDebugHeaders({\n    status: AuthStatus.SignedOut,\n    reason: AuthErrorReason.TokenTypeMismatch,\n    message: '',\n    proxyUrl: '',\n    publishableKey: '',\n    isSatellite: false,\n    domain: '',\n    signInUrl: '',\n    signUpUrl: '',\n    afterSignInUrl: '',\n    afterSignUpUrl: '',\n    isSignedIn: false,\n    isAuthenticated: false,\n    tokenType: null,\n    toAuth: () => authObject,\n    headers: new Headers(),\n    token: null,\n  });\n}\n\nconst withDebugHeaders = <T extends { headers: Headers; message?: string; reason?: AuthReason; status?: AuthStatus }>(\n  requestState: T,\n): T => {\n  const headers = new Headers(requestState.headers || {});\n\n  if (requestState.message) {\n    try {\n      headers.set(constants.Headers.AuthMessage, requestState.message);\n    } catch {\n      // headers.set can throw if unicode strings are passed to it. In this case, simply do nothing\n    }\n  }\n\n  if (requestState.reason) {\n    try {\n      headers.set(constants.Headers.AuthReason, requestState.reason);\n    } catch {\n      /* empty */\n    }\n  }\n\n  if (requestState.status) {\n    try {\n      headers.set(constants.Headers.AuthStatus, requestState.status);\n    } catch {\n      /* empty */\n    }\n  }\n\n  requestState.headers = headers;\n\n  return requestState;\n};\n", "import { parse } from 'cookie';\n\nimport { constants } from '../constants';\nimport type { ClerkUrl } from './clerkUrl';\nimport { createClerkUrl } from './clerkUrl';\n\n/**\n * A class that extends the native Request class,\n * adds cookies helpers and a normalised clerkUrl that is constructed by using the values found\n * in req.headers so it is able to work reliably when the app is running behind a proxy server.\n */\nclass ClerkRequest extends Request {\n  readonly clerkUrl: ClerkUrl;\n  readonly cookies: Map<string, string | undefined>;\n\n  public constructor(input: ClerkRequest | Request | RequestInfo, init?: RequestInit) {\n    // The usual way to duplicate a request object is to\n    // pass the original request object to the Request constructor\n    // both as the `input` and `init` parameters, eg: super(req, req)\n    // However, this fails in certain environments like Vercel Edge Runtime\n    // when a framework like Remix polyfills the global Request object.\n    // This happens because `undici` performs the following instanceof check\n    // which, instead of testing against the global Request object, tests against\n    // the Request class defined in the same file (local Request class).\n    // For more details, please refer to:\n    // https://github.com/nodejs/undici/issues/2155\n    // https://github.com/nodejs/undici/blob/7153a1c78d51840bbe16576ce353e481c3934701/lib/fetch/request.js#L854\n    const url = typeof input !== 'string' && 'url' in input ? input.url : String(input);\n    super(url, init || typeof input === 'string' ? undefined : input);\n    this.clerkUrl = this.deriveUrlFromHeaders(this);\n    this.cookies = this.parseCookies(this);\n  }\n\n  public toJSON() {\n    return {\n      url: this.clerkUrl.href,\n      method: this.method,\n      headers: JSON.stringify(Object.fromEntries(this.headers)),\n      clerkUrl: this.clerkUrl.toString(),\n      cookies: JSON.stringify(Object.fromEntries(this.cookies)),\n    };\n  }\n\n  /**\n   * Used to fix request.url using the x-forwarded-* headers\n   * TODO add detailed description of the issues this solves\n   */\n  private deriveUrlFromHeaders(req: Request) {\n    const initialUrl = new URL(req.url);\n    const forwardedProto = req.headers.get(constants.Headers.ForwardedProto);\n    const forwardedHost = req.headers.get(constants.Headers.ForwardedHost);\n    const host = req.headers.get(constants.Headers.Host);\n    const protocol = initialUrl.protocol;\n\n    const resolvedHost = this.getFirstValueFromHeader(forwardedHost) ?? host;\n    const resolvedProtocol = this.getFirstValueFromHeader(forwardedProto) ?? protocol?.replace(/[:/]/, '');\n    const origin = resolvedHost && resolvedProtocol ? `${resolvedProtocol}://${resolvedHost}` : initialUrl.origin;\n\n    if (origin === initialUrl.origin) {\n      return createClerkUrl(initialUrl);\n    }\n    return createClerkUrl(initialUrl.pathname + initialUrl.search, origin);\n  }\n\n  private getFirstValueFromHeader(value?: string | null) {\n    return value?.split(',')[0];\n  }\n\n  private parseCookies(req: Request) {\n    const cookiesRecord = parse(this.decodeCookieValue(req.headers.get('cookie') || ''));\n    return new Map(Object.entries(cookiesRecord));\n  }\n\n  private decodeCookieValue(str: string) {\n    return str ? str.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent) : str;\n  }\n}\n\nexport const createClerkRequest = (...args: ConstructorParameters<typeof ClerkRequest>): ClerkRequest => {\n  return args[0] instanceof ClerkRequest ? args[0] : new ClerkRequest(...args);\n};\n\nexport type { ClerkRequest };\n", "class ClerkUrl extends URL {\n  public isCrossOrigin(other: URL | string) {\n    return this.origin !== new URL(other.toString()).origin;\n  }\n}\n\nexport type WithClerkUrl<T> = T & {\n  /**\n   * When a NextJs app is hosted on a platform different from Vercel\n   * or inside a container (Netlify, Fly.io, AWS Amplify, docker etc),\n   * req.url is always set to `localhost:3000` instead of the actual host of the app.\n   *\n   * The `authMiddleware` uses the value of the available req.headers in order to construct\n   * and use the correct url internally. This url is then exposed as `experimental_clerkUrl`,\n   * intended to be used within `beforeAuth` and `afterAuth` if needed.\n   */\n  clerkUrl: ClerkUrl;\n};\n\nexport const createClerkUrl = (...args: ConstructorParameters<typeof ClerkUrl>): ClerkUrl => {\n  return new ClerkUrl(...args);\n};\n\nexport type { ClerkUrl };\n", "export const getCookieName = (cookieDirective: string): string => {\n  return cookieDirective.split(';')[0]?.split('=')[0];\n};\n\nexport const getCookieValue = (cookieDirective: string): string => {\n  return cookieDirective.split(';')[0]?.split('=')[1];\n};\n", "import {\n  API_URL,\n  API_VERSION,\n  MAX_CACHE_LAST_UPDATED_AT_SECONDS,\n  SUPPORTED_BAPI_VERSION,\n  USER_AGENT,\n} from '../constants';\nimport {\n  TokenVerificationError,\n  TokenVerificationErrorAction,\n  TokenVerificationErrorCode,\n  TokenVerificationErrorReason,\n} from '../errors';\nimport { runtime } from '../runtime';\nimport { joinPaths } from '../util/path';\nimport { retry } from '../util/shared';\n\ntype JsonWebKeyWithKid = JsonWebKey & { kid: string };\n\ntype JsonWebKeyCache = Record<string, JsonWebKeyWithKid>;\n\nlet cache: JsonWebKeyCache = {};\nlet lastUpdatedAt = 0;\n\nfunction getFromCache(kid: string) {\n  return cache[kid];\n}\n\nfunction getCacheValues() {\n  return Object.values(cache);\n}\n\nfunction setInCache(jwk: JsonWebKeyWithKid, shouldExpire = true) {\n  cache[jwk.kid] = jwk;\n  lastUpdatedAt = shouldExpire ? Date.now() : -1;\n}\n\nconst LocalJwkKid = 'local';\nconst PEM_HEADER = '-----BEGIN PUBLIC KEY-----';\nconst PEM_TRAILER = '-----END PUBLIC KEY-----';\nconst RSA_PREFIX = 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA';\nconst RSA_SUFFIX = 'IDAQAB';\n\n/**\n *\n * Loads a local PEM key usually from process.env and transform it to JsonWebKey format.\n * The result is also cached on the module level to avoid unnecessary computations in subsequent invocations.\n *\n * @param {string} localKey\n * @returns {JsonWebKey} key\n */\nexport function loadClerkJWKFromLocal(localKey?: string): JsonWebKey {\n  if (!getFromCache(LocalJwkKid)) {\n    if (!localKey) {\n      throw new TokenVerificationError({\n        action: TokenVerificationErrorAction.SetClerkJWTKey,\n        message: 'Missing local JWK.',\n        reason: TokenVerificationErrorReason.LocalJWKMissing,\n      });\n    }\n\n    const modulus = localKey\n      .replace(/\\r\\n|\\n|\\r/g, '')\n      .replace(PEM_HEADER, '')\n      .replace(PEM_TRAILER, '')\n      .replace(RSA_PREFIX, '')\n      .replace(RSA_SUFFIX, '')\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_');\n\n    // JWK https://datatracker.ietf.org/doc/html/rfc7517\n    setInCache(\n      {\n        kid: 'local',\n        kty: 'RSA',\n        alg: 'RS256',\n        n: modulus,\n        e: 'AQAB',\n      },\n      false, // local key never expires in cache\n    );\n  }\n\n  return getFromCache(LocalJwkKid);\n}\n\n/**\n * @internal\n */\nexport type LoadClerkJWKFromRemoteOptions = {\n  /**\n   * @internal\n   */\n  kid: string;\n  /**\n   * @deprecated This cache TTL will be removed in the next major version. Specifying a cache TTL is a no-op.\n   */\n  jwksCacheTtlInMs?: number;\n  /**\n   * A flag to ignore the JWKS cache and always fetch JWKS before each JWT verification.\n   */\n  skipJwksCache?: boolean;\n  /**\n   * The Clerk Secret Key from the [**API keys**](https://dashboard.clerk.com/last-active?path=api-keys) page in the Clerk Dashboard.\n   */\n  secretKey?: string;\n  /**\n   * The [Clerk Backend API](https://clerk.com/docs/reference/backend-api){{ target: '_blank' }} endpoint.\n   * @default 'https://api.clerk.com'\n   */\n  apiUrl?: string;\n  /**\n   * The version passed to the Clerk API.\n   * @default 'v1'\n   */\n  apiVersion?: string;\n};\n\n/**\n *\n * Loads a key from JWKS retrieved from the well-known Frontend API endpoint of the issuer.\n * The result is also cached on the module level to avoid network requests in subsequent invocations.\n * The cache lasts up to 5 minutes.\n *\n * @param {Object} options\n * @param {string} options.kid - The id of the key that the JWT was signed with\n * @param {string} options.alg - The algorithm of the JWT\n * @returns {JsonWebKey} key\n */\nexport async function loadClerkJWKFromRemote({\n  secretKey,\n  apiUrl = API_URL,\n  apiVersion = API_VERSION,\n  kid,\n  skipJwksCache,\n}: LoadClerkJWKFromRemoteOptions): Promise<JsonWebKey> {\n  if (skipJwksCache || cacheHasExpired() || !getFromCache(kid)) {\n    if (!secretKey) {\n      throw new TokenVerificationError({\n        action: TokenVerificationErrorAction.ContactSupport,\n        message: 'Failed to load JWKS from Clerk Backend or Frontend API.',\n        reason: TokenVerificationErrorReason.RemoteJWKFailedToLoad,\n      });\n    }\n    const fetcher = () => fetchJWKSFromBAPI(apiUrl, secretKey, apiVersion) as Promise<{ keys: JsonWebKeyWithKid[] }>;\n    const { keys } = await retry(fetcher);\n\n    if (!keys || !keys.length) {\n      throw new TokenVerificationError({\n        action: TokenVerificationErrorAction.ContactSupport,\n        message: 'The JWKS endpoint did not contain any signing keys. Contact support@clerk.com.',\n        reason: TokenVerificationErrorReason.RemoteJWKFailedToLoad,\n      });\n    }\n\n    keys.forEach(key => setInCache(key));\n  }\n\n  const jwk = getFromCache(kid);\n\n  if (!jwk) {\n    const cacheValues = getCacheValues();\n    const jwkKeys = cacheValues\n      .map(jwk => jwk.kid)\n      .sort()\n      .join(', ');\n\n    throw new TokenVerificationError({\n      action: `Go to your Dashboard and validate your secret and public keys are correct. ${TokenVerificationErrorAction.ContactSupport} if the issue persists.`,\n      message: `Unable to find a signing key in JWKS that matches the kid='${kid}' of the provided session token. Please make sure that the __session cookie or the HTTP authorization header contain a Clerk-generated session JWT. The following kid is available: ${jwkKeys}`,\n      reason: TokenVerificationErrorReason.JWKKidMismatch,\n    });\n  }\n\n  return jwk;\n}\n\nasync function fetchJWKSFromBAPI(apiUrl: string, key: string, apiVersion: string) {\n  if (!key) {\n    throw new TokenVerificationError({\n      action: TokenVerificationErrorAction.SetClerkSecretKey,\n      message:\n        'Missing Clerk Secret Key or API Key. Go to https://dashboard.clerk.com and get your key for your instance.',\n      reason: TokenVerificationErrorReason.RemoteJWKFailedToLoad,\n    });\n  }\n\n  const url = new URL(apiUrl);\n  url.pathname = joinPaths(url.pathname, apiVersion, '/jwks');\n\n  const response = await runtime.fetch(url.href, {\n    headers: {\n      Authorization: `Bearer ${key}`,\n      'Clerk-API-Version': SUPPORTED_BAPI_VERSION,\n      'Content-Type': 'application/json',\n      'User-Agent': USER_AGENT,\n    },\n  });\n\n  if (!response.ok) {\n    const json = await response.json();\n    const invalidSecretKeyError = getErrorObjectByCode(json?.errors, TokenVerificationErrorCode.InvalidSecretKey);\n\n    if (invalidSecretKeyError) {\n      const reason = TokenVerificationErrorReason.InvalidSecretKey;\n\n      throw new TokenVerificationError({\n        action: TokenVerificationErrorAction.ContactSupport,\n        message: invalidSecretKeyError.message,\n        reason,\n      });\n    }\n\n    throw new TokenVerificationError({\n      action: TokenVerificationErrorAction.ContactSupport,\n      message: `Error loading Clerk JWKS from ${url.href} with code=${response.status}`,\n      reason: TokenVerificationErrorReason.RemoteJWKFailedToLoad,\n    });\n  }\n\n  return response.json();\n}\n\nfunction cacheHasExpired() {\n  // If lastUpdatedAt is -1, it means that we're using a local JWKS and it never expires\n  if (lastUpdatedAt === -1) {\n    return false;\n  }\n\n  // If the cache has expired, clear the value so we don't attempt to make decisions based on stale data\n  const isExpired = Date.now() - lastUpdatedAt >= MAX_CACHE_LAST_UPDATED_AT_SECONDS * 1000;\n\n  if (isExpired) {\n    cache = {};\n  }\n\n  return isExpired;\n}\n\ntype ErrorFields = {\n  message: string;\n  long_message: string;\n  code: string;\n};\n\nconst getErrorObjectByCode = (errors: ErrorFields[], code: string) => {\n  if (!errors) {\n    return null;\n  }\n\n  return errors.find((err: ErrorFields) => err.code === code);\n};\n", "import { isClerkAPIResponseError } from '@clerk/shared/error';\nimport type { JwtPayload } from '@clerk/types';\n\nimport type { APIKey, IdPOAuthAccessToken, M2MToken } from '../api';\nimport { createBackendApiClient } from '../api/factory';\nimport {\n  MachineTokenVerificationError,\n  MachineTokenVerificationErrorCode,\n  TokenVerificationError,\n  TokenVerificationErrorAction,\n  TokenVerificationErrorReason,\n} from '../errors';\nimport type { VerifyJwtOptions } from '../jwt';\nimport type { JwtReturnType, MachineTokenReturnType } from '../jwt/types';\nimport { decodeJwt, verifyJwt } from '../jwt/verifyJwt';\nimport type { LoadClerkJWKFromRemoteOptions } from './keys';\nimport { loadClerkJWKFromLocal, loadClerkJWKFromRemote } from './keys';\nimport { API_KEY_PREFIX, M2M_TOKEN_PREFIX, OAUTH_TOKEN_PREFIX } from './machine';\nimport type { MachineTokenType } from './tokenTypes';\nimport { TokenType } from './tokenTypes';\n\n/**\n * @interface\n */\nexport type VerifyTokenOptions = Omit<VerifyJwtOptions, 'key'> &\n  Omit<LoadClerkJWKFromRemoteOptions, 'kid'> & {\n    /**\n     * Used to verify the session token in a networkless manner. Supply the PEM public key from the **[**API keys**](https://dashboard.clerk.com/last-active?path=api-keys) page -> Show JWT public key -> PEM Public Key** section in the Clerk Dashboard. **It's recommended to use [the environment variable](https://clerk.com/docs/deployments/clerk-environment-variables) instead.** For more information, refer to [Manual JWT verification](https://clerk.com/docs/backend-requests/manual-jwt).\n     */\n    jwtKey?: string;\n  };\n\n/**\n * > [!WARNING]\n * > This is a lower-level method intended for more advanced use-cases. It's recommended to use [`authenticateRequest()`](https://clerk.com/docs/references/backend/authenticate-request), which fully authenticates a token passed from the `request` object.\n *\n * Verifies a Clerk-generated token signature. Networkless if the `jwtKey` is provided. Otherwise, performs a network call to retrieve the JWKS from the [Backend API](https://clerk.com/docs/reference/backend-api/tag/JWKS#operation/GetJWKS){{ target: '_blank' }}.\n *\n * @param token - The token to verify.\n * @param options - Options for verifying the token.\n *\n * @displayFunctionSignature\n *\n * @paramExtension\n *\n * ### `VerifyTokenOptions`\n *\n * It is recommended to set these options as [environment variables](/docs/deployments/clerk-environment-variables#api-and-sdk-configuration) where possible, and then pass them to the function. For example, you can set the `secretKey` option using the `CLERK_SECRET_KEY` environment variable, and then pass it to the function like this: `createClerkClient({ secretKey: process.env.CLERK_SECRET_KEY })`.\n *\n * > [!WARNING]\n * You must provide either `jwtKey` or `secretKey`.\n *\n * <Typedoc src=\"backend/verify-token-options\" />\n *\n * @example\n *\n * The following example demonstrates how to use the [JavaScript Backend SDK](https://clerk.com/docs/references/backend/overview) to verify the token signature.\n *\n * In the following example:\n *\n * 1. The **JWKS Public Key** from the Clerk Dashboard is set in the environment variable `CLERK_JWT_KEY`.\n * 1. The session token is retrieved from the `__session` cookie or the Authorization header.\n * 1. The token is verified in a networkless manner by passing the `jwtKey` prop.\n * 1. The `authorizedParties` prop is passed to verify that the session token is generated from the expected frontend application.\n * 1. If the token is valid, the response contains the verified token.\n *\n * ```ts\n * import { verifyToken } from '@clerk/backend'\n * import { cookies } from 'next/headers'\n *\n * export async function GET(request: Request) {\n *   const cookieStore = cookies()\n *   const sessToken = cookieStore.get('__session')?.value\n *   const bearerToken = request.headers.get('Authorization')?.replace('Bearer ', '')\n *   const token = sessToken || bearerToken\n *\n *   if (!token) {\n *     return Response.json({ error: 'Token not found. User must sign in.' }, { status: 401 })\n *   }\n *\n *   try {\n *     const verifiedToken = await verifyToken(token, {\n *       jwtKey: process.env.CLERK_JWT_KEY,\n *       authorizedParties: ['http://localhost:3001', 'api.example.com'], // Replace with your authorized parties\n *     })\n *\n *     return Response.json({ verifiedToken })\n *   } catch (error) {\n *     return Response.json({ error: 'Token not verified.' }, { status: 401 })\n *   }\n * }\n * ```\n *\n * If the token is valid, the response will contain a JSON object that looks something like this:\n *\n * ```json\n * {\n *   \"verifiedToken\": {\n *     \"azp\": \"http://localhost:3000\",\n *     \"exp\": 1687906422,\n *     \"iat\": 1687906362,\n *     \"iss\": \"https://magical-marmoset-51.clerk.accounts.dev\",\n *     \"nbf\": 1687906352,\n *     \"sid\": \"sess_2Ro7e2IxrffdqBboq8KfB6eGbIy\",\n *     \"sub\": \"user_2RfWKJREkjKbHZy0Wqa5qrHeAnb\"\n *   }\n * }\n * ```\n */\nexport async function verifyToken(\n  token: string,\n  options: VerifyTokenOptions,\n): Promise<JwtReturnType<JwtPayload, TokenVerificationError>> {\n  const { data: decodedResult, errors } = decodeJwt(token);\n  if (errors) {\n    return { errors };\n  }\n\n  const { header } = decodedResult;\n  const { kid } = header;\n\n  try {\n    let key;\n\n    if (options.jwtKey) {\n      key = loadClerkJWKFromLocal(options.jwtKey);\n    } else if (options.secretKey) {\n      // Fetch JWKS from Backend API using the key\n      key = await loadClerkJWKFromRemote({ ...options, kid });\n    } else {\n      return {\n        errors: [\n          new TokenVerificationError({\n            action: TokenVerificationErrorAction.SetClerkJWTKey,\n            message: 'Failed to resolve JWK during verification.',\n            reason: TokenVerificationErrorReason.JWKFailedToResolve,\n          }),\n        ],\n      };\n    }\n\n    return await verifyJwt(token, { ...options, key });\n  } catch (error) {\n    return { errors: [error as TokenVerificationError] };\n  }\n}\n\n/**\n * Handles errors from Clerk API responses for machine tokens\n * @param tokenType - The type of machine token\n * @param err - The error from the Clerk API\n * @param notFoundMessage - Custom message for 404 errors\n */\nfunction handleClerkAPIError(\n  tokenType: MachineTokenType,\n  err: any,\n  notFoundMessage: string,\n): MachineTokenReturnType<any, MachineTokenVerificationError> {\n  if (isClerkAPIResponseError(err)) {\n    let code: MachineTokenVerificationErrorCode;\n    let message: string;\n\n    switch (err.status) {\n      case 401:\n        code = MachineTokenVerificationErrorCode.InvalidSecretKey;\n        message = err.errors[0]?.message || 'Invalid secret key';\n        break;\n      case 404:\n        code = MachineTokenVerificationErrorCode.TokenInvalid;\n        message = notFoundMessage;\n        break;\n      default:\n        code = MachineTokenVerificationErrorCode.UnexpectedError;\n        message = 'Unexpected error';\n    }\n\n    return {\n      data: undefined,\n      tokenType,\n      errors: [\n        new MachineTokenVerificationError({\n          message,\n          code,\n          status: err.status,\n        }),\n      ],\n    };\n  }\n\n  return {\n    data: undefined,\n    tokenType,\n    errors: [\n      new MachineTokenVerificationError({\n        message: 'Unexpected error',\n        code: MachineTokenVerificationErrorCode.UnexpectedError,\n        status: err.status,\n      }),\n    ],\n  };\n}\n\nasync function verifyM2MToken(\n  token: string,\n  options: VerifyTokenOptions & { machineSecretKey?: string },\n): Promise<MachineTokenReturnType<M2MToken, MachineTokenVerificationError>> {\n  try {\n    const client = createBackendApiClient(options);\n    const verifiedToken = await client.m2m.verifyToken({ token });\n    return { data: verifiedToken, tokenType: TokenType.M2MToken, errors: undefined };\n  } catch (err: any) {\n    return handleClerkAPIError(TokenType.M2MToken, err, 'Machine token not found');\n  }\n}\n\nasync function verifyOAuthToken(\n  accessToken: string,\n  options: VerifyTokenOptions,\n): Promise<MachineTokenReturnType<IdPOAuthAccessToken, MachineTokenVerificationError>> {\n  try {\n    const client = createBackendApiClient(options);\n    const verifiedToken = await client.idPOAuthAccessToken.verifyAccessToken(accessToken);\n    return { data: verifiedToken, tokenType: TokenType.OAuthToken, errors: undefined };\n  } catch (err: any) {\n    return handleClerkAPIError(TokenType.OAuthToken, err, 'OAuth token not found');\n  }\n}\n\nasync function verifyAPIKey(\n  secret: string,\n  options: VerifyTokenOptions,\n): Promise<MachineTokenReturnType<APIKey, MachineTokenVerificationError>> {\n  try {\n    const client = createBackendApiClient(options);\n    const verifiedToken = await client.apiKeys.verifySecret(secret);\n    return { data: verifiedToken, tokenType: TokenType.ApiKey, errors: undefined };\n  } catch (err: any) {\n    return handleClerkAPIError(TokenType.ApiKey, err, 'API key not found');\n  }\n}\n\n/**\n * Verifies any type of machine token by detecting its type from the prefix.\n *\n * @param token - The token to verify (e.g. starts with \"m2m_\", \"oauth_\", \"api_key_\", etc.)\n * @param options - Options including secretKey for BAPI authorization\n */\nexport async function verifyMachineAuthToken(token: string, options: VerifyTokenOptions) {\n  if (token.startsWith(M2M_TOKEN_PREFIX)) {\n    return verifyM2MToken(token, options);\n  }\n  if (token.startsWith(OAUTH_TOKEN_PREFIX)) {\n    return verifyOAuthToken(token, options);\n  }\n  if (token.startsWith(API_KEY_PREFIX)) {\n    return verifyAPIKey(token, options);\n  }\n\n  throw new Error('Unknown machine token type');\n}\n", "import { constants, SUPPORTED_BAPI_VERSION } from '../constants';\nimport { TokenVerificationError, TokenVerificationErrorAction, TokenVerificationErrorReason } from '../errors';\nimport type { VerifyJwtOptions } from '../jwt';\nimport { assertHeaderAlgorithm, assertHeaderType } from '../jwt/assertions';\nimport { decodeJwt, hasValidSignature } from '../jwt/verifyJwt';\nimport type { AuthenticateContext } from './authenticateContext';\nimport type { SignedInState, SignedOutState } from './authStatus';\nimport { AuthErrorReason, signedIn, signedOut } from './authStatus';\nimport { getCookieName, getCookieValue } from './cookie';\nimport { loadClerkJWKFromLocal, loadClerkJWKFromRemote } from './keys';\nimport type { OrganizationMatcher } from './organizationMatcher';\nimport { TokenType } from './tokenTypes';\nimport type { OrganizationSyncOptions, OrganizationSyncTarget } from './types';\nimport type { VerifyTokenOptions } from './verify';\nimport { verifyToken } from './verify';\n\nasync function verifyHandshakeJwt(token: string, { key }: VerifyJwtOptions): Promise<{ handshake: string[] }> {\n  const { data: decoded, errors } = decodeJwt(token);\n  if (errors) {\n    throw errors[0];\n  }\n\n  const { header, payload } = decoded;\n\n  // Header verifications\n  const { typ, alg } = header;\n\n  assertHeaderType(typ);\n  assertHeaderAlgorithm(alg);\n\n  const { data: signatureValid, errors: signatureErrors } = await hasValidSignature(decoded, key);\n  if (signatureErrors) {\n    throw new TokenVerificationError({\n      reason: TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Error verifying handshake token. ${signatureErrors[0]}`,\n    });\n  }\n\n  if (!signatureValid) {\n    throw new TokenVerificationError({\n      reason: TokenVerificationErrorReason.TokenInvalidSignature,\n      message: 'Handshake signature is invalid.',\n    });\n  }\n\n  return payload as unknown as { handshake: string[] };\n}\n\n/**\n * Similar to our verifyToken flow for Clerk-issued JWTs, but this verification flow is for our signed handshake payload.\n * The handshake payload requires fewer verification steps.\n */\nexport async function verifyHandshakeToken(\n  token: string,\n  options: VerifyTokenOptions,\n): Promise<{ handshake: string[] }> {\n  const { secretKey, apiUrl, apiVersion, jwksCacheTtlInMs, jwtKey, skipJwksCache } = options;\n\n  const { data, errors } = decodeJwt(token);\n  if (errors) {\n    throw errors[0];\n  }\n\n  const { kid } = data.header;\n\n  let key;\n\n  if (jwtKey) {\n    key = loadClerkJWKFromLocal(jwtKey);\n  } else if (secretKey) {\n    // Fetch JWKS from Backend API using the key\n    key = await loadClerkJWKFromRemote({ secretKey, apiUrl, apiVersion, kid, jwksCacheTtlInMs, skipJwksCache });\n  } else {\n    throw new TokenVerificationError({\n      action: TokenVerificationErrorAction.SetClerkJWTKey,\n      message: 'Failed to resolve JWK during handshake verification.',\n      reason: TokenVerificationErrorReason.JWKFailedToResolve,\n    });\n  }\n\n  return await verifyHandshakeJwt(token, {\n    key,\n  });\n}\n\nexport class HandshakeService {\n  private readonly authenticateContext: AuthenticateContext;\n  private readonly organizationMatcher: OrganizationMatcher;\n  private readonly options: { organizationSyncOptions?: OrganizationSyncOptions };\n\n  constructor(\n    authenticateContext: AuthenticateContext,\n    options: { organizationSyncOptions?: OrganizationSyncOptions },\n    organizationMatcher: OrganizationMatcher,\n  ) {\n    this.authenticateContext = authenticateContext;\n    this.options = options;\n    this.organizationMatcher = organizationMatcher;\n  }\n\n  /**\n   * Determines if a request is eligible for handshake based on its headers\n   *\n   * Currently, a request is only eligible for a handshake if we can say it's *probably* a request for a document, not a fetch or some other exotic request.\n   * This heuristic should give us a reliable enough signal for browsers that support `Sec-Fetch-Dest` and for those that don't.\n   *\n   * @returns boolean indicating if the request is eligible for handshake\n   */\n  isRequestEligibleForHandshake(): boolean {\n    const { accept, secFetchDest } = this.authenticateContext;\n\n    // NOTE: we could also check sec-fetch-mode === navigate here, but according to the spec, sec-fetch-dest: document should indicate that the request is the data of a user navigation.\n    // Also, we check for 'iframe' because it's the value set when a doc request is made by an iframe.\n    if (secFetchDest === 'document' || secFetchDest === 'iframe') {\n      return true;\n    }\n\n    if (!secFetchDest && accept?.startsWith('text/html')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Builds the redirect headers for a handshake request\n   * @param reason - The reason for the handshake (e.g. 'session-token-expired')\n   * @returns Headers object containing the Location header for redirect\n   * @throws Error if clerkUrl is missing in authenticateContext\n   */\n  buildRedirectToHandshake(reason: string): Headers {\n    if (!this.authenticateContext?.clerkUrl) {\n      throw new Error('Missing clerkUrl in authenticateContext');\n    }\n\n    const redirectUrl = this.removeDevBrowserFromURL(this.authenticateContext.clerkUrl);\n\n    let baseUrl = this.authenticateContext.frontendApi.startsWith('http')\n      ? this.authenticateContext.frontendApi\n      : `https://${this.authenticateContext.frontendApi}`;\n\n    baseUrl = baseUrl.replace(/\\/+$/, '') + '/';\n\n    const url = new URL('v1/client/handshake', baseUrl);\n    url.searchParams.append('redirect_url', redirectUrl?.href || '');\n    url.searchParams.append('__clerk_api_version', SUPPORTED_BAPI_VERSION);\n    url.searchParams.append(\n      constants.QueryParameters.SuffixedCookies,\n      this.authenticateContext.usesSuffixedCookies().toString(),\n    );\n    url.searchParams.append(constants.QueryParameters.HandshakeReason, reason);\n    url.searchParams.append(constants.QueryParameters.HandshakeFormat, 'nonce');\n\n    if (this.authenticateContext.instanceType === 'development' && this.authenticateContext.devBrowserToken) {\n      url.searchParams.append(constants.QueryParameters.DevBrowser, this.authenticateContext.devBrowserToken);\n    }\n\n    const toActivate = this.getOrganizationSyncTarget(this.authenticateContext.clerkUrl, this.organizationMatcher);\n    if (toActivate) {\n      const params = this.getOrganizationSyncQueryParams(toActivate);\n      params.forEach((value, key) => {\n        url.searchParams.append(key, value);\n      });\n    }\n\n    return new Headers({ [constants.Headers.Location]: url.href });\n  }\n\n  /**\n   * Gets cookies from either a handshake nonce or a handshake token\n   * @returns Promise resolving to string array of cookie directives\n   */\n  public async getCookiesFromHandshake(): Promise<string[]> {\n    const cookiesToSet: string[] = [];\n\n    if (this.authenticateContext.handshakeNonce) {\n      try {\n        const handshakePayload = await this.authenticateContext.apiClient?.clients.getHandshakePayload({\n          nonce: this.authenticateContext.handshakeNonce,\n        });\n        if (handshakePayload) {\n          cookiesToSet.push(...handshakePayload.directives);\n        }\n      } catch (error) {\n        console.error('Clerk: HandshakeService: error getting handshake payload:', error);\n      }\n    } else if (this.authenticateContext.handshakeToken) {\n      const handshakePayload = await verifyHandshakeToken(\n        this.authenticateContext.handshakeToken,\n        this.authenticateContext,\n      );\n      if (handshakePayload && Array.isArray(handshakePayload.handshake)) {\n        cookiesToSet.push(...handshakePayload.handshake);\n      }\n    }\n\n    return cookiesToSet;\n  }\n\n  /**\n   * Resolves a handshake request by verifying the handshake token and setting appropriate cookies\n   * @returns Promise resolving to either a SignedInState or SignedOutState\n   * @throws Error if handshake verification fails or if there are issues with the session token\n   */\n  async resolveHandshake(): Promise<SignedInState | SignedOutState> {\n    const headers = new Headers({\n      'Access-Control-Allow-Origin': 'null',\n      'Access-Control-Allow-Credentials': 'true',\n    });\n\n    const cookiesToSet = await this.getCookiesFromHandshake();\n\n    let sessionToken = '';\n    cookiesToSet.forEach((x: string) => {\n      headers.append('Set-Cookie', x);\n      if (getCookieName(x).startsWith(constants.Cookies.Session)) {\n        sessionToken = getCookieValue(x);\n      }\n    });\n\n    if (this.authenticateContext.instanceType === 'development') {\n      const newUrl = new URL(this.authenticateContext.clerkUrl);\n      newUrl.searchParams.delete(constants.QueryParameters.Handshake);\n      newUrl.searchParams.delete(constants.QueryParameters.HandshakeHelp);\n      newUrl.searchParams.delete(constants.QueryParameters.DevBrowser);\n      headers.append(constants.Headers.Location, newUrl.toString());\n      headers.set(constants.Headers.CacheControl, 'no-store');\n    }\n\n    if (sessionToken === '') {\n      return signedOut({\n        tokenType: TokenType.SessionToken,\n        authenticateContext: this.authenticateContext,\n        reason: AuthErrorReason.SessionTokenMissing,\n        message: '',\n        headers,\n      });\n    }\n\n    const { data, errors: [error] = [] } = await verifyToken(sessionToken, this.authenticateContext);\n    if (data) {\n      return signedIn({\n        tokenType: TokenType.SessionToken,\n        authenticateContext: this.authenticateContext,\n        sessionClaims: data,\n        headers,\n        token: sessionToken,\n      });\n    }\n\n    if (\n      this.authenticateContext.instanceType === 'development' &&\n      (error?.reason === TokenVerificationErrorReason.TokenExpired ||\n        error?.reason === TokenVerificationErrorReason.TokenNotActiveYet ||\n        error?.reason === TokenVerificationErrorReason.TokenIatInTheFuture)\n    ) {\n      // Create a new error object with the same properties\n      const developmentError = new TokenVerificationError({\n        action: error.action,\n        message: error.message,\n        reason: error.reason,\n      });\n      // Set the tokenCarrier after construction\n      developmentError.tokenCarrier = 'cookie';\n\n      console.error(\n        `Clerk: Clock skew detected. This usually means that your system clock is inaccurate. Clerk will attempt to account for the clock skew in development.\n\nTo resolve this issue, make sure your system's clock is set to the correct time (e.g. turn off and on automatic time synchronization).\n\n---\n\n${developmentError.getFullMessage()}`,\n      );\n\n      const { data: retryResult, errors: [retryError] = [] } = await verifyToken(sessionToken, {\n        ...this.authenticateContext,\n        clockSkewInMs: 86_400_000,\n      });\n      if (retryResult) {\n        return signedIn({\n          tokenType: TokenType.SessionToken,\n          authenticateContext: this.authenticateContext,\n          sessionClaims: retryResult,\n          headers,\n          token: sessionToken,\n        });\n      }\n\n      throw new Error(retryError?.message || 'Clerk: Handshake retry failed.');\n    }\n\n    throw new Error(error?.message || 'Clerk: Handshake failed.');\n  }\n\n  /**\n   * Handles handshake token verification errors in development mode\n   * @param error - The TokenVerificationError that occurred\n   * @throws Error with a descriptive message about the verification failure\n   */\n  handleTokenVerificationErrorInDevelopment(error: TokenVerificationError): void {\n    // In development, the handshake token is being transferred in the URL as a query parameter, so there is no\n    // possibility of collision with a handshake token of another app running on the same local domain\n    // (etc one app on localhost:3000 and one on localhost:3001).\n    // Therefore, if the handshake token is invalid, it is likely that the user has switched Clerk keys locally.\n    // We make sure to throw a descriptive error message and then stop the handshake flow in every case,\n    // to avoid the possibility of an infinite loop.\n    if (error.reason === TokenVerificationErrorReason.TokenInvalidSignature) {\n      const msg = `Clerk: Handshake token verification failed due to an invalid signature. If you have switched Clerk keys locally, clear your cookies and try again.`;\n      throw new Error(msg);\n    }\n    throw new Error(`Clerk: Handshake token verification failed: ${error.getFullMessage()}.`);\n  }\n\n  /**\n   * Checks if a redirect loop is detected and sets headers to track redirect count\n   * @param headers - The Headers object to modify\n   * @returns boolean indicating if a redirect loop was detected (true) or if the request can proceed (false)\n   */\n  checkAndTrackRedirectLoop(headers: Headers): boolean {\n    if (this.authenticateContext.handshakeRedirectLoopCounter === 3) {\n      return true;\n    }\n\n    const newCounterValue = this.authenticateContext.handshakeRedirectLoopCounter + 1;\n    const cookieName = constants.Cookies.RedirectCount;\n    headers.append('Set-Cookie', `${cookieName}=${newCounterValue}; SameSite=Lax; HttpOnly; Max-Age=2`);\n    return false;\n  }\n\n  private removeDevBrowserFromURL(url: URL): URL {\n    const updatedURL = new URL(url);\n    updatedURL.searchParams.delete(constants.QueryParameters.DevBrowser);\n    updatedURL.searchParams.delete(constants.QueryParameters.LegacyDevBrowser);\n    return updatedURL;\n  }\n\n  private getOrganizationSyncTarget(url: URL, matchers: OrganizationMatcher): OrganizationSyncTarget | null {\n    return matchers.findTarget(url);\n  }\n\n  private getOrganizationSyncQueryParams(toActivate: OrganizationSyncTarget): Map<string, string> {\n    const ret = new Map();\n    if (toActivate.type === 'personalAccount') {\n      ret.set('organization_id', '');\n    }\n    if (toActivate.type === 'organization') {\n      if (toActivate.organizationId) {\n        ret.set('organization_id', toActivate.organizationId);\n      }\n      if (toActivate.organizationSlug) {\n        ret.set('organization_id', toActivate.organizationSlug);\n      }\n    }\n    return ret;\n  }\n}\n", "import type { MatchFunction } from '@clerk/shared/pathToRegexp';\nimport { match } from '@clerk/shared/pathToRegexp';\n\nimport type { OrganizationSyncOptions, OrganizationSyncTarget } from './types';\n\nexport class OrganizationMatcher {\n  private readonly organizationPattern: MatchFunction | null;\n  private readonly personalAccountPattern: MatchFunction | null;\n\n  constructor(options?: OrganizationSyncOptions) {\n    this.organizationPattern = this.createMatcher(options?.organizationPatterns);\n    this.personalAccountPattern = this.createMatcher(options?.personalAccountPatterns);\n  }\n\n  private createMatcher(pattern?: string[]): MatchFunction | null {\n    if (!pattern) {\n      return null;\n    }\n    try {\n      return match(pattern);\n    } catch (e) {\n      throw new Error(`Invalid pattern \"${pattern}\": ${e}`);\n    }\n  }\n\n  findTarget(url: URL): OrganizationSyncTarget | null {\n    const orgTarget = this.findOrganizationTarget(url);\n    if (orgTarget) {\n      return orgTarget;\n    }\n\n    return this.findPersonalAccountTarget(url);\n  }\n\n  private findOrganizationTarget(url: URL): OrganizationSyncTarget | null {\n    if (!this.organizationPattern) {\n      return null;\n    }\n\n    try {\n      const result = this.organizationPattern(url.pathname);\n      if (!result || !('params' in result)) {\n        return null;\n      }\n\n      const params = result.params as { id?: string; slug?: string };\n      if (params.id) {\n        return { type: 'organization', organizationId: params.id };\n      }\n      if (params.slug) {\n        return { type: 'organization', organizationSlug: params.slug };\n      }\n\n      return null;\n    } catch (e) {\n      console.error('Failed to match organization pattern:', e);\n      return null;\n    }\n  }\n\n  private findPersonalAccountTarget(url: URL): OrganizationSyncTarget | null {\n    if (!this.personalAccountPattern) {\n      return null;\n    }\n\n    try {\n      const result = this.personalAccountPattern(url.pathname);\n      return result ? { type: 'personalAccount' } : null;\n    } catch (e) {\n      console.error('Failed to match personal account pattern:', e);\n      return null;\n    }\n  }\n}\n", "import type { JwtPayload } from '@clerk/types';\n\nimport { constants } from '../constants';\nimport type { TokenCarrier } from '../errors';\nimport { MachineTokenVerificationError, TokenVerificationError, TokenVerificationErrorReason } from '../errors';\nimport { decodeJwt } from '../jwt/verifyJwt';\nimport { assertValidSecretKey } from '../util/optionsAssertions';\nimport { isDevelopmentFromSecretKey } from '../util/shared';\nimport type { AuthenticateContext } from './authenticateContext';\nimport { createAuthenticateContext } from './authenticateContext';\nimport type { SignedInAuthObject } from './authObjects';\nimport type { HandshakeState, RequestState, SignedInState, SignedOutState, UnauthenticatedState } from './authStatus';\nimport { AuthErrorReason, handshake, signedIn, signedOut, signedOutInvalidToken } from './authStatus';\nimport { createClerkRequest } from './clerkRequest';\nimport { getCookieName, getCookieValue } from './cookie';\nimport { HandshakeService } from './handshake';\nimport { getMachineTokenType, isMachineTokenByPrefix, isTokenTypeAccepted } from './machine';\nimport { OrganizationMatcher } from './organizationMatcher';\nimport type { MachineTokenType, SessionTokenType } from './tokenTypes';\nimport { TokenType } from './tokenTypes';\nimport type { AuthenticateRequestOptions } from './types';\nimport { verifyMachineAuthToken, verifyToken } from './verify';\n\nexport const RefreshTokenErrorReason = {\n  NonEligibleNoCookie: 'non-eligible-no-refresh-cookie',\n  NonEligibleNonGet: 'non-eligible-non-get',\n  InvalidSessionToken: 'invalid-session-token',\n  MissingApiClient: 'missing-api-client',\n  MissingSessionToken: 'missing-session-token',\n  MissingRefreshToken: 'missing-refresh-token',\n  ExpiredSessionTokenDecodeFailed: 'expired-session-token-decode-failed',\n  ExpiredSessionTokenMissingSidClaim: 'expired-session-token-missing-sid-claim',\n  FetchError: 'fetch-error',\n  UnexpectedSDKError: 'unexpected-sdk-error',\n  UnexpectedBAPIError: 'unexpected-bapi-error',\n} as const;\n\nfunction assertSignInUrlExists(signInUrl: string | undefined, key: string): asserts signInUrl is string {\n  if (!signInUrl && isDevelopmentFromSecretKey(key)) {\n    throw new Error(`Missing signInUrl. Pass a signInUrl for dev instances if an app is satellite`);\n  }\n}\n\nfunction assertProxyUrlOrDomain(proxyUrlOrDomain: string | undefined) {\n  if (!proxyUrlOrDomain) {\n    throw new Error(`Missing domain and proxyUrl. A satellite application needs to specify a domain or a proxyUrl`);\n  }\n}\n\nfunction assertSignInUrlFormatAndOrigin(_signInUrl: string, origin: string) {\n  let signInUrl: URL;\n  try {\n    signInUrl = new URL(_signInUrl);\n  } catch {\n    throw new Error(`The signInUrl needs to have a absolute url format.`);\n  }\n\n  if (signInUrl.origin === origin) {\n    throw new Error(`The signInUrl needs to be on a different origin than your satellite application.`);\n  }\n}\n\nfunction assertMachineSecretOrSecretKey(authenticateContext: AuthenticateContext) {\n  if (!authenticateContext.machineSecretKey && !authenticateContext.secretKey) {\n    throw new Error(\n      'Machine token authentication requires either a Machine secret key or a Clerk secret key. ' +\n        'Ensure a Clerk secret key or Machine secret key is set.',\n    );\n  }\n}\n\nfunction isRequestEligibleForRefresh(\n  err: TokenVerificationError,\n  authenticateContext: { refreshTokenInCookie?: string },\n  request: Request,\n) {\n  return (\n    err.reason === TokenVerificationErrorReason.TokenExpired &&\n    !!authenticateContext.refreshTokenInCookie &&\n    request.method === 'GET'\n  );\n}\n\nfunction checkTokenTypeMismatch(\n  parsedTokenType: MachineTokenType,\n  acceptsToken: NonNullable<AuthenticateRequestOptions['acceptsToken']>,\n  authenticateContext: AuthenticateContext,\n): UnauthenticatedState<MachineTokenType> | null {\n  const mismatch = !isTokenTypeAccepted(parsedTokenType, acceptsToken);\n  if (mismatch) {\n    const tokenTypeToReturn = (typeof acceptsToken === 'string' ? acceptsToken : parsedTokenType) as MachineTokenType;\n    return signedOut({\n      tokenType: tokenTypeToReturn,\n      authenticateContext,\n      reason: AuthErrorReason.TokenTypeMismatch,\n    });\n  }\n  return null;\n}\n\nfunction isTokenTypeInAcceptedArray(acceptsToken: TokenType[], authenticateContext: AuthenticateContext): boolean {\n  let parsedTokenType: TokenType | null = null;\n  const { tokenInHeader } = authenticateContext;\n  if (tokenInHeader) {\n    if (isMachineTokenByPrefix(tokenInHeader)) {\n      parsedTokenType = getMachineTokenType(tokenInHeader);\n    } else {\n      parsedTokenType = TokenType.SessionToken;\n    }\n  }\n  const typeToCheck = parsedTokenType ?? TokenType.SessionToken;\n  return isTokenTypeAccepted(typeToCheck, acceptsToken);\n}\n\nexport interface AuthenticateRequest {\n  /**\n   * @example\n   * clerkClient.authenticateRequest(request, { acceptsToken: ['session_token', 'api_key'] });\n   */\n  <T extends readonly TokenType[]>(\n    request: Request,\n    options: AuthenticateRequestOptions & { acceptsToken: T },\n  ): Promise<RequestState<T[number] | null>>;\n\n  /**\n   * @example\n   * clerkClient.authenticateRequest(request, { acceptsToken: 'session_token' });\n   */\n  <T extends TokenType>(\n    request: Request,\n    options: AuthenticateRequestOptions & { acceptsToken: T },\n  ): Promise<RequestState<T>>;\n\n  /**\n   * @example\n   * clerkClient.authenticateRequest(request, { acceptsToken: 'any' });\n   */\n  (request: Request, options: AuthenticateRequestOptions & { acceptsToken: 'any' }): Promise<RequestState<TokenType>>;\n\n  /**\n   * @example\n   * clerkClient.authenticateRequest(request);\n   */\n  (request: Request, options?: AuthenticateRequestOptions): Promise<RequestState<SessionTokenType>>;\n}\n\nexport const authenticateRequest: AuthenticateRequest = (async (\n  request: Request,\n  options: AuthenticateRequestOptions,\n): Promise<RequestState<TokenType> | UnauthenticatedState<null>> => {\n  const authenticateContext = await createAuthenticateContext(createClerkRequest(request), options);\n\n  // Default tokenType is session_token for backwards compatibility.\n  const acceptsToken = options.acceptsToken ?? TokenType.SessionToken;\n\n  // machine-to-machine tokens can accept a machine secret or a secret key\n  if (acceptsToken !== TokenType.M2MToken) {\n    assertValidSecretKey(authenticateContext.secretKey);\n\n    if (authenticateContext.isSatellite) {\n      assertSignInUrlExists(authenticateContext.signInUrl, authenticateContext.secretKey);\n      if (authenticateContext.signInUrl && authenticateContext.origin) {\n        assertSignInUrlFormatAndOrigin(authenticateContext.signInUrl, authenticateContext.origin);\n      }\n      assertProxyUrlOrDomain(authenticateContext.proxyUrl || authenticateContext.domain);\n    }\n  }\n\n  // Make sure a machine secret or instance secret key is provided if acceptsToken is m2m_token\n  if (acceptsToken === TokenType.M2MToken) {\n    assertMachineSecretOrSecretKey(authenticateContext);\n  }\n\n  const organizationMatcher = new OrganizationMatcher(options.organizationSyncOptions);\n  const handshakeService = new HandshakeService(\n    authenticateContext,\n    { organizationSyncOptions: options.organizationSyncOptions },\n    organizationMatcher,\n  );\n\n  async function refreshToken(\n    authenticateContext: AuthenticateContext,\n  ): Promise<{ data: string[]; error: null } | { data: null; error: any }> {\n    // To perform a token refresh, apiClient must be defined.\n    if (!options.apiClient) {\n      return {\n        data: null,\n        error: {\n          message: 'An apiClient is needed to perform token refresh.',\n          cause: { reason: RefreshTokenErrorReason.MissingApiClient },\n        },\n      };\n    }\n    const { sessionToken: expiredSessionToken, refreshTokenInCookie: refreshToken } = authenticateContext;\n    if (!expiredSessionToken) {\n      return {\n        data: null,\n        error: {\n          message: 'Session token must be provided.',\n          cause: { reason: RefreshTokenErrorReason.MissingSessionToken },\n        },\n      };\n    }\n    if (!refreshToken) {\n      return {\n        data: null,\n        error: {\n          message: 'Refresh token must be provided.',\n          cause: { reason: RefreshTokenErrorReason.MissingRefreshToken },\n        },\n      };\n    }\n    // The token refresh endpoint requires a sessionId, so we decode that from the expired token.\n    const { data: decodeResult, errors: decodedErrors } = decodeJwt(expiredSessionToken);\n    if (!decodeResult || decodedErrors) {\n      return {\n        data: null,\n        error: {\n          message: 'Unable to decode the expired session token.',\n          cause: { reason: RefreshTokenErrorReason.ExpiredSessionTokenDecodeFailed, errors: decodedErrors },\n        },\n      };\n    }\n\n    if (!decodeResult?.payload?.sid) {\n      return {\n        data: null,\n        error: {\n          message: 'Expired session token is missing the `sid` claim.',\n          cause: { reason: RefreshTokenErrorReason.ExpiredSessionTokenMissingSidClaim },\n        },\n      };\n    }\n\n    try {\n      // Perform the actual token refresh.\n      const response = await options.apiClient.sessions.refreshSession(decodeResult.payload.sid, {\n        format: 'cookie',\n        suffixed_cookies: authenticateContext.usesSuffixedCookies(),\n        expired_token: expiredSessionToken || '',\n        refresh_token: refreshToken || '',\n        request_origin: authenticateContext.clerkUrl.origin,\n        // The refresh endpoint expects headers as Record<string, string[]>, so we need to transform it.\n        request_headers: Object.fromEntries(Array.from(request.headers.entries()).map(([k, v]) => [k, [v]])),\n      });\n      return { data: response.cookies, error: null };\n    } catch (err: any) {\n      if (err?.errors?.length) {\n        if (err.errors[0].code === 'unexpected_error') {\n          return {\n            data: null,\n            error: {\n              message: `Fetch unexpected error`,\n              cause: { reason: RefreshTokenErrorReason.FetchError, errors: err.errors },\n            },\n          };\n        }\n        return {\n          data: null,\n          error: {\n            message: err.errors[0].code,\n            cause: { reason: err.errors[0].code, errors: err.errors },\n          },\n        };\n      } else {\n        return {\n          data: null,\n          error: {\n            message: `Unexpected Server/BAPI error`,\n            cause: { reason: RefreshTokenErrorReason.UnexpectedBAPIError, errors: [err] },\n          },\n        };\n      }\n    }\n  }\n\n  async function attemptRefresh(\n    authenticateContext: AuthenticateContext,\n  ): Promise<\n    | { data: { jwtPayload: JwtPayload; sessionToken: string; headers: Headers }; error: null }\n    | { data: null; error: any }\n  > {\n    const { data: cookiesToSet, error } = await refreshToken(authenticateContext);\n    if (!cookiesToSet || cookiesToSet.length === 0) {\n      return { data: null, error };\n    }\n\n    const headers = new Headers();\n    let sessionToken = '';\n    cookiesToSet.forEach((x: string) => {\n      headers.append('Set-Cookie', x);\n      if (getCookieName(x).startsWith(constants.Cookies.Session)) {\n        sessionToken = getCookieValue(x);\n      }\n    });\n\n    // Since we're going to return a signedIn response, we need to decode the data from the new sessionToken.\n    const { data: jwtPayload, errors } = await verifyToken(sessionToken, authenticateContext);\n    if (errors) {\n      return {\n        data: null,\n        error: {\n          message: `Clerk: unable to verify refreshed session token.`,\n          cause: { reason: RefreshTokenErrorReason.InvalidSessionToken, errors },\n        },\n      };\n    }\n    return { data: { jwtPayload, sessionToken, headers }, error: null };\n  }\n\n  function handleMaybeHandshakeStatus(\n    authenticateContext: AuthenticateContext,\n    reason: string,\n    message: string,\n    headers?: Headers,\n  ): SignedInState | SignedOutState | HandshakeState {\n    if (!handshakeService.isRequestEligibleForHandshake()) {\n      return signedOut({\n        tokenType: TokenType.SessionToken,\n        authenticateContext,\n        reason,\n        message,\n      });\n    }\n\n    // Right now the only usage of passing in different headers is for multi-domain sync, which redirects somewhere else.\n    // In the future if we want to decorate the handshake redirect with additional headers per call we need to tweak this logic.\n    const handshakeHeaders = headers ?? handshakeService.buildRedirectToHandshake(reason);\n\n    // Chrome aggressively caches inactive tabs. If we don't set the header here,\n    // all 307 redirects will be cached and the handshake will end up in an infinite loop.\n    if (handshakeHeaders.get(constants.Headers.Location)) {\n      handshakeHeaders.set(constants.Headers.CacheControl, 'no-store');\n    }\n\n    // Introduce the mechanism to protect for infinite handshake redirect loops\n    // using a cookie and returning true if it's infinite redirect loop or false if we can\n    // proceed with triggering handshake.\n    const isRedirectLoop = handshakeService.checkAndTrackRedirectLoop(handshakeHeaders);\n    if (isRedirectLoop) {\n      const msg = `Clerk: Refreshing the session token resulted in an infinite redirect loop. This usually means that your Clerk instance keys do not match - make sure to copy the correct publishable and secret keys from the Clerk dashboard.`;\n      console.log(msg);\n      return signedOut({\n        tokenType: TokenType.SessionToken,\n        authenticateContext,\n        reason,\n        message,\n      });\n    }\n\n    return handshake(authenticateContext, reason, message, handshakeHeaders);\n  }\n\n  /**\n   * Determines if a handshake must occur to resolve a mismatch between the organization as specified\n   * by the URL (according to the options) and the actual active organization on the session.\n   *\n   * @returns {HandshakeState | SignedOutState | null} - The function can return the following:\n   *   - {HandshakeState}: If a handshake is needed to resolve the mismatched organization.\n   *   - {SignedOutState}: If a handshake is required but cannot be performed.\n   *   - {null}:           If no action is required.\n   */\n  function handleMaybeOrganizationSyncHandshake(\n    authenticateContext: AuthenticateContext,\n    auth: SignedInAuthObject,\n  ): HandshakeState | SignedOutState | null {\n    const organizationSyncTarget = organizationMatcher.findTarget(authenticateContext.clerkUrl);\n    if (!organizationSyncTarget) {\n      return null;\n    }\n    let mustActivate = false;\n    if (organizationSyncTarget.type === 'organization') {\n      // Activate an org by slug?\n      if (organizationSyncTarget.organizationSlug && organizationSyncTarget.organizationSlug !== auth.orgSlug) {\n        mustActivate = true;\n      }\n      // Activate an org by ID?\n      if (organizationSyncTarget.organizationId && organizationSyncTarget.organizationId !== auth.orgId) {\n        mustActivate = true;\n      }\n    }\n    // Activate the personal account?\n    if (organizationSyncTarget.type === 'personalAccount' && auth.orgId) {\n      mustActivate = true;\n    }\n    if (!mustActivate) {\n      return null;\n    }\n    if (authenticateContext.handshakeRedirectLoopCounter >= 3) {\n      // We have an organization that needs to be activated, but this isn't our first time redirecting.\n      // This is because we attempted to activate the organization previously, but the organization\n      // must not have been valid (either not found, or not valid for this user), and gave us back\n      // a null organization. We won't re-try the handshake, and leave it to the server component to handle.\n      console.warn(\n        'Clerk: Organization activation handshake loop detected. This is likely due to an invalid organization ID or slug. Skipping organization activation.',\n      );\n      return null;\n    }\n    const handshakeState = handleMaybeHandshakeStatus(\n      authenticateContext,\n      AuthErrorReason.ActiveOrganizationMismatch,\n      '',\n    );\n    if (handshakeState.status !== 'handshake') {\n      // Currently, this is only possible if we're in a redirect loop, but the above check should guard against that.\n      return null;\n    }\n    return handshakeState;\n  }\n\n  async function authenticateRequestWithTokenInHeader() {\n    const { tokenInHeader } = authenticateContext;\n\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const { data, errors } = await verifyToken(tokenInHeader!, authenticateContext);\n      if (errors) {\n        throw errors[0];\n      }\n      // use `await` to force this try/catch handle the signedIn invocation\n      return signedIn({\n        tokenType: TokenType.SessionToken,\n        authenticateContext,\n        sessionClaims: data,\n        headers: new Headers(),\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        token: tokenInHeader!,\n      });\n    } catch (err) {\n      return handleSessionTokenError(err, 'header');\n    }\n  }\n\n  async function authenticateRequestWithTokenInCookie() {\n    const hasActiveClient = authenticateContext.clientUat;\n    const hasSessionToken = !!authenticateContext.sessionTokenInCookie;\n    const hasDevBrowserToken = !!authenticateContext.devBrowserToken;\n\n    /**\n     * If we have a handshakeToken, resolve the handshake and attempt to return a definitive signed in or signed out state.\n     */\n    if (authenticateContext.handshakeNonce || authenticateContext.handshakeToken) {\n      try {\n        return await handshakeService.resolveHandshake();\n      } catch (error) {\n        // In production, the handshake token is being transferred as a cookie, so there is a possibility of collision\n        // with a handshake token of another app running on the same etld+1 domain.\n        // For example, if one app is running on sub1.clerk.com and another on sub2.clerk.com, the handshake token\n        // cookie for both apps will be set on etld+1 (clerk.com) so there's a possibility that one app will accidentally\n        // use the handshake token of a different app during the handshake flow.\n        // In this scenario, verification will fail with TokenInvalidSignature. In contrast to the development case,\n        // we need to allow the flow to continue so the app eventually retries another handshake with the correct token.\n        // We need to make sure, however, that we don't allow the flow to continue indefinitely, so we throw an error after X\n        // retries to avoid an infinite loop. An infinite loop can happen if the customer switched Clerk keys for their prod app.\n\n        // Check the handleTokenVerificationErrorInDevelopment method for the development case.\n        if (error instanceof TokenVerificationError && authenticateContext.instanceType === 'development') {\n          handshakeService.handleTokenVerificationErrorInDevelopment(error);\n        } else {\n          console.error('Clerk: unable to resolve handshake:', error);\n        }\n      }\n    }\n    /**\n     * Otherwise, check for \"known unknown\" auth states that we can resolve with a handshake.\n     */\n    if (\n      authenticateContext.instanceType === 'development' &&\n      authenticateContext.clerkUrl.searchParams.has(constants.QueryParameters.DevBrowser)\n    ) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.DevBrowserSync, '');\n    }\n\n    const isRequestEligibleForMultiDomainSync =\n      authenticateContext.isSatellite && authenticateContext.secFetchDest === 'document';\n\n    /**\n     * Begin multi-domain sync flows\n     */\n    if (authenticateContext.instanceType === 'production' && isRequestEligibleForMultiDomainSync) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SatelliteCookieNeedsSyncing, '');\n    }\n\n    // Multi-domain development sync flow\n    if (\n      authenticateContext.instanceType === 'development' &&\n      isRequestEligibleForMultiDomainSync &&\n      !authenticateContext.clerkUrl.searchParams.has(constants.QueryParameters.ClerkSynced)\n    ) {\n      // initiate MD sync\n\n      // signInUrl exists, checked at the top of `authenticateRequest`\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const redirectURL = new URL(authenticateContext.signInUrl!);\n      redirectURL.searchParams.append(\n        constants.QueryParameters.ClerkRedirectUrl,\n        authenticateContext.clerkUrl.toString(),\n      );\n      const headers = new Headers({ [constants.Headers.Location]: redirectURL.toString() });\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SatelliteCookieNeedsSyncing, '', headers);\n    }\n\n    // Multi-domain development sync flow\n    const redirectUrl = new URL(authenticateContext.clerkUrl).searchParams.get(\n      constants.QueryParameters.ClerkRedirectUrl,\n    );\n\n    if (authenticateContext.instanceType === 'development' && !authenticateContext.isSatellite && redirectUrl) {\n      // Dev MD sync from primary, redirect back to satellite w/ dev browser query param\n      const redirectBackToSatelliteUrl = new URL(redirectUrl);\n\n      if (authenticateContext.devBrowserToken) {\n        redirectBackToSatelliteUrl.searchParams.append(\n          constants.QueryParameters.DevBrowser,\n          authenticateContext.devBrowserToken,\n        );\n      }\n      redirectBackToSatelliteUrl.searchParams.append(constants.QueryParameters.ClerkSynced, 'true');\n\n      const headers = new Headers({ [constants.Headers.Location]: redirectBackToSatelliteUrl.toString() });\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.PrimaryRespondsToSyncing, '', headers);\n    }\n    /**\n     * End multi-domain sync flows\n     */\n\n    if (authenticateContext.instanceType === 'development' && !hasDevBrowserToken) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.DevBrowserMissing, '');\n    }\n\n    if (!hasActiveClient && !hasSessionToken) {\n      return signedOut({\n        tokenType: TokenType.SessionToken,\n        authenticateContext,\n        reason: AuthErrorReason.SessionTokenAndUATMissing,\n      });\n    }\n\n    // This can eagerly run handshake since client_uat is SameSite=Strict in dev\n    if (!hasActiveClient && hasSessionToken) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SessionTokenWithoutClientUAT, '');\n    }\n\n    if (hasActiveClient && !hasSessionToken) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.ClientUATWithoutSessionToken, '');\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const { data: decodeResult, errors: decodedErrors } = decodeJwt(authenticateContext.sessionTokenInCookie!);\n\n    if (decodedErrors) {\n      return handleSessionTokenError(decodedErrors[0], 'cookie');\n    }\n\n    if (decodeResult.payload.iat < authenticateContext.clientUat) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SessionTokenIATBeforeClientUAT, '');\n    }\n\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const { data, errors } = await verifyToken(authenticateContext.sessionTokenInCookie!, authenticateContext);\n      if (errors) {\n        throw errors[0];\n      }\n\n      const signedInRequestState = signedIn({\n        tokenType: TokenType.SessionToken,\n        authenticateContext,\n        sessionClaims: data,\n        headers: new Headers(),\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        token: authenticateContext.sessionTokenInCookie!,\n      });\n\n      // Check for cross-origin requests from satellite domains to primary domain\n      const shouldForceHandshakeForCrossDomain =\n        !authenticateContext.isSatellite && // We're on primary\n        authenticateContext.secFetchDest === 'document' && // Document navigation\n        authenticateContext.isCrossOriginReferrer() && // Came from different domain\n        !authenticateContext.isKnownClerkReferrer(); // Not from Clerk accounts portal or FAPI\n\n      if (shouldForceHandshakeForCrossDomain) {\n        return handleMaybeHandshakeStatus(\n          authenticateContext,\n          AuthErrorReason.PrimaryDomainCrossOriginSync,\n          'Cross-origin request from satellite domain requires handshake',\n        );\n      }\n\n      const authObject = signedInRequestState.toAuth();\n      // Org sync if necessary\n      if (authObject.userId) {\n        const handshakeRequestState = handleMaybeOrganizationSyncHandshake(authenticateContext, authObject);\n        if (handshakeRequestState) {\n          return handshakeRequestState;\n        }\n      }\n\n      return signedInRequestState;\n    } catch (err) {\n      return handleSessionTokenError(err, 'cookie');\n    }\n\n    // Unreachable\n    return signedOut({\n      tokenType: TokenType.SessionToken,\n      authenticateContext,\n      reason: AuthErrorReason.UnexpectedError,\n    });\n  }\n\n  async function handleSessionTokenError(\n    err: unknown,\n    tokenCarrier: TokenCarrier,\n  ): Promise<SignedInState | SignedOutState | HandshakeState> {\n    if (!(err instanceof TokenVerificationError)) {\n      return signedOut({\n        tokenType: TokenType.SessionToken,\n        authenticateContext,\n        reason: AuthErrorReason.UnexpectedError,\n      });\n    }\n\n    let refreshError: string | null;\n\n    if (isRequestEligibleForRefresh(err, authenticateContext, request)) {\n      const { data, error } = await attemptRefresh(authenticateContext);\n      if (data) {\n        return signedIn({\n          tokenType: TokenType.SessionToken,\n          authenticateContext,\n          sessionClaims: data.jwtPayload,\n          headers: data.headers,\n          token: data.sessionToken,\n        });\n      }\n\n      // If there's any error, simply fallback to the handshake flow including the reason as a query parameter.\n      if (error?.cause?.reason) {\n        refreshError = error.cause.reason;\n      } else {\n        refreshError = RefreshTokenErrorReason.UnexpectedSDKError;\n      }\n    } else {\n      if (request.method !== 'GET') {\n        refreshError = RefreshTokenErrorReason.NonEligibleNonGet;\n      } else if (!authenticateContext.refreshTokenInCookie) {\n        refreshError = RefreshTokenErrorReason.NonEligibleNoCookie;\n      } else {\n        //refresh error is not applicable if token verification error is not 'session-token-expired'\n        refreshError = null;\n      }\n    }\n\n    err.tokenCarrier = tokenCarrier;\n\n    const reasonToHandshake = [\n      TokenVerificationErrorReason.TokenExpired,\n      TokenVerificationErrorReason.TokenNotActiveYet,\n      TokenVerificationErrorReason.TokenIatInTheFuture,\n    ].includes(err.reason);\n\n    if (reasonToHandshake) {\n      return handleMaybeHandshakeStatus(\n        authenticateContext,\n        convertTokenVerificationErrorReasonToAuthErrorReason({ tokenError: err.reason, refreshError }),\n        err.getFullMessage(),\n      );\n    }\n\n    return signedOut({\n      tokenType: TokenType.SessionToken,\n      authenticateContext,\n      reason: err.reason,\n      message: err.getFullMessage(),\n    });\n  }\n\n  function handleMachineError(tokenType: MachineTokenType, err: unknown): UnauthenticatedState<MachineTokenType> {\n    if (!(err instanceof MachineTokenVerificationError)) {\n      return signedOut({\n        tokenType,\n        authenticateContext,\n        reason: AuthErrorReason.UnexpectedError,\n      });\n    }\n\n    return signedOut({\n      tokenType,\n      authenticateContext,\n      reason: err.code,\n      message: err.getFullMessage(),\n    });\n  }\n\n  async function authenticateMachineRequestWithTokenInHeader() {\n    const { tokenInHeader } = authenticateContext;\n    // Use session token error handling if no token in header (default behavior)\n    if (!tokenInHeader) {\n      return handleSessionTokenError(new Error('Missing token in header'), 'header');\n    }\n\n    // Handle case where tokenType is any and the token is not a machine token\n    if (!isMachineTokenByPrefix(tokenInHeader)) {\n      return signedOut({\n        tokenType: acceptsToken as TokenType,\n        authenticateContext,\n        reason: AuthErrorReason.TokenTypeMismatch,\n        message: '',\n      });\n    }\n\n    const parsedTokenType = getMachineTokenType(tokenInHeader);\n    const mismatchState = checkTokenTypeMismatch(parsedTokenType, acceptsToken, authenticateContext);\n    if (mismatchState) {\n      return mismatchState;\n    }\n\n    const { data, tokenType, errors } = await verifyMachineAuthToken(tokenInHeader, authenticateContext);\n    if (errors) {\n      return handleMachineError(tokenType, errors[0]);\n    }\n    return signedIn({\n      tokenType,\n      authenticateContext,\n      machineData: data,\n      token: tokenInHeader,\n    });\n  }\n\n  async function authenticateAnyRequestWithTokenInHeader() {\n    const { tokenInHeader } = authenticateContext;\n    // Use session token error handling if no token in header (default behavior)\n    if (!tokenInHeader) {\n      return handleSessionTokenError(new Error('Missing token in header'), 'header');\n    }\n\n    // Handle as a machine token\n    if (isMachineTokenByPrefix(tokenInHeader)) {\n      const parsedTokenType = getMachineTokenType(tokenInHeader);\n      const mismatchState = checkTokenTypeMismatch(parsedTokenType, acceptsToken, authenticateContext);\n      if (mismatchState) {\n        return mismatchState;\n      }\n\n      const { data, tokenType, errors } = await verifyMachineAuthToken(tokenInHeader, authenticateContext);\n      if (errors) {\n        return handleMachineError(tokenType, errors[0]);\n      }\n\n      return signedIn({\n        tokenType,\n        authenticateContext,\n        machineData: data,\n        token: tokenInHeader,\n      });\n    }\n\n    // Handle as a regular session token\n    const { data, errors } = await verifyToken(tokenInHeader, authenticateContext);\n    if (errors) {\n      return handleSessionTokenError(errors[0], 'header');\n    }\n\n    return signedIn({\n      tokenType: TokenType.SessionToken,\n      authenticateContext,\n      sessionClaims: data,\n      token: tokenInHeader,\n    });\n  }\n\n  // If acceptsToken is an array, early check if the token is in the accepted array\n  // to avoid unnecessary verification calls\n  if (Array.isArray(acceptsToken)) {\n    if (!isTokenTypeInAcceptedArray(acceptsToken, authenticateContext)) {\n      return signedOutInvalidToken();\n    }\n  }\n\n  if (authenticateContext.tokenInHeader) {\n    if (acceptsToken === 'any') {\n      return authenticateAnyRequestWithTokenInHeader();\n    }\n    if (acceptsToken === TokenType.SessionToken) {\n      return authenticateRequestWithTokenInHeader();\n    }\n    return authenticateMachineRequestWithTokenInHeader();\n  }\n\n  // Machine requests cannot have the token in the cookie, it must be in header.\n  if (\n    acceptsToken === TokenType.OAuthToken ||\n    acceptsToken === TokenType.ApiKey ||\n    acceptsToken === TokenType.M2MToken\n  ) {\n    return signedOut({\n      tokenType: acceptsToken,\n      authenticateContext,\n      reason: 'No token in header',\n    });\n  }\n\n  return authenticateRequestWithTokenInCookie();\n}) as AuthenticateRequest;\n\n/**\n * @internal\n */\nexport const debugRequestState = (params: RequestState) => {\n  const { isSignedIn, isAuthenticated, proxyUrl, reason, message, publishableKey, isSatellite, domain } = params;\n  return { isSignedIn, isAuthenticated, proxyUrl, reason, message, publishableKey, isSatellite, domain };\n};\n\nconst convertTokenVerificationErrorReasonToAuthErrorReason = ({\n  tokenError,\n  refreshError,\n}: {\n  tokenError: TokenVerificationErrorReason;\n  refreshError: string | null;\n}): string => {\n  switch (tokenError) {\n    case TokenVerificationErrorReason.TokenExpired:\n      return `${AuthErrorReason.SessionTokenExpired}-refresh-${refreshError}`;\n    case TokenVerificationErrorReason.TokenNotActiveYet:\n      return AuthErrorReason.SessionTokenNBF;\n    case TokenVerificationErrorReason.TokenIatInTheFuture:\n      return AuthErrorReason.SessionTokenIatInTheFuture;\n    default:\n      return AuthErrorReason.UnexpectedError;\n  }\n};\n", "import type { ApiClient } from '../api';\nimport { mergePreDefinedOptions } from '../util/mergePreDefinedOptions';\nimport type { AuthenticateRequest } from './request';\nimport { authenticateRequest as authenticateRequestOriginal, debugRequestState } from './request';\nimport type { AuthenticateRequestOptions } from './types';\n\ntype RunTimeOptions = Omit<AuthenticateRequestOptions, 'apiUrl' | 'apiVersion'>;\ntype BuildTimeOptions = Partial<\n  Pick<\n    AuthenticateRequestOptions,\n    | 'apiUrl'\n    | 'apiVersion'\n    | 'audience'\n    | 'domain'\n    | 'isSatellite'\n    | 'jwtKey'\n    | 'proxyUrl'\n    | 'publishableKey'\n    | 'secretKey'\n    | 'machineSecretKey'\n  >\n>;\n\nconst defaultOptions = {\n  secretKey: '',\n  machineSecretKey: '',\n  jwtKey: '',\n  apiUrl: undefined,\n  apiVersion: undefined,\n  proxyUrl: '',\n  publishableKey: '',\n  isSatellite: false,\n  domain: '',\n  audience: '',\n} satisfies BuildTimeOptions;\n\n/**\n * @internal\n */\nexport type CreateAuthenticateRequestOptions = {\n  options: BuildTimeOptions;\n  apiClient: ApiClient;\n};\n\n/**\n * @internal\n */\nexport function createAuthenticateRequest(params: CreateAuthenticateRequestOptions) {\n  const buildTimeOptions = mergePreDefinedOptions(defaultOptions, params.options);\n  const apiClient = params.apiClient;\n\n  const authenticateRequest: AuthenticateRequest = (request: Request, options: RunTimeOptions = {}) => {\n    const { apiUrl, apiVersion } = buildTimeOptions;\n    const runTimeOptions = mergePreDefinedOptions(buildTimeOptions, options);\n    return authenticateRequestOriginal(request, {\n      ...options,\n      ...runTimeOptions,\n      // We should add all the omitted props from options here (eg apiUrl / apiVersion)\n      // to avoid runtime options override them.\n      apiUrl,\n      apiVersion,\n      apiClient,\n    });\n  };\n\n  return {\n    authenticateRequest,\n    debugRequestState,\n  };\n}\n", "import type { CreateBackendApiOptions, Organization, Session, User } from '../api';\nimport { createBackendApiClient } from '../api';\nimport type { AuthObject, SignedInAuthObject, SignedOutAuthObject } from '../tokens/authObjects';\n\ntype DecorateAuthWithResourcesOptions = {\n  loadSession?: boolean;\n  loadUser?: boolean;\n  loadOrganization?: boolean;\n};\n\ntype WithResources<T> = T & {\n  session?: Session | null;\n  user?: User | null;\n  organization?: Organization | null;\n};\n\n/**\n * @internal\n */\nexport const decorateObjectWithResources = async <T extends object>(\n  obj: T,\n  authObj: AuthObject,\n  opts: CreateBackendApiOptions & DecorateAuthWithResourcesOptions,\n): Promise<WithResources<T>> => {\n  const { loadSession, loadUser, loadOrganization } = opts || {};\n  const { userId, sessionId, orgId } = authObj as SignedInAuthObject | SignedOutAuthObject;\n\n  const { sessions, users, organizations } = createBackendApiClient({ ...opts });\n\n  const [sessionResp, userResp, organizationResp] = await Promise.all([\n    loadSession && sessionId ? sessions.getSession(sessionId) : Promise.resolve(undefined),\n    loadUser && userId ? users.getUser(userId) : Promise.resolve(undefined),\n    loadOrganization && orgId ? organizations.getOrganization({ organizationId: orgId }) : Promise.resolve(undefined),\n  ]);\n\n  const resources = stripPrivateDataFromObject({\n    session: sessionResp,\n    user: userResp,\n    organization: organizationResp,\n  });\n  return Object.assign(obj, resources);\n};\n\n/**\n * @internal\n */\nexport function stripPrivateDataFromObject<T extends WithResources<object>>(authObject: T): T {\n  const user = authObject.user ? { ...authObject.user } : authObject.user;\n  const organization = authObject.organization ? { ...authObject.organization } : authObject.organization;\n  prunePrivateMetadata(user);\n  prunePrivateMetadata(organization);\n  return { ...authObject, user, organization };\n}\n\nfunction prunePrivateMetadata(resource?: { private_metadata: any } | { privateMetadata: any } | null) {\n  // Delete sensitive private metadata from resource before rendering in SSR\n  if (resource) {\n    if ('privateMetadata' in resource) {\n      delete resource['privateMetadata'];\n    }\n    if ('private_metadata' in resource) {\n      delete resource['private_metadata'];\n    }\n  }\n\n  return resource;\n}\n", "export { constants } from './constants';\nexport { createRedirect } from './createRedirect';\nexport type { RedirectFun } from './createRedirect';\n\nexport type { CreateAuthenticateRequestOptions } from './tokens/factory';\nexport { createAuthenticateRequest } from './tokens/factory';\n\nexport { debugRequestState } from './tokens/request';\n\nexport type {\n  AuthenticateRequestOptions,\n  OrganizationSyncOptions,\n  InferAuthObjectFromToken,\n  InferAuthObjectFromTokenArray,\n  GetAuthFn,\n} from './tokens/types';\n\nexport { TokenType } from './tokens/tokenTypes';\nexport type { SessionTokenType, MachineTokenType } from './tokens/tokenTypes';\n\nexport type {\n  SignedInAuthObjectOptions,\n  SignedInAuthObject,\n  SignedOutAuthObject,\n  AuthenticatedMachineObject,\n  UnauthenticatedMachineObject,\n} from './tokens/authObjects';\nexport {\n  makeAuthObjectSerializable,\n  signedOutAuthObject,\n  signedInAuthObject,\n  authenticatedMachineObject,\n  unauthenticatedMachineObject,\n  invalidTokenAuthObject,\n  getAuthObjectFromJwt,\n  getAuthObjectForAcceptedToken,\n} from './tokens/authObjects';\n\nexport { AuthStatus } from './tokens/authStatus';\nexport type {\n  RequestState,\n  SignedInState,\n  SignedOutState,\n  AuthenticatedState,\n  UnauthenticatedState,\n} from './tokens/authStatus';\n\nexport { decorateObjectWithResources, stripPrivateDataFromObject } from './util/decorateObjectWithResources';\n\nexport { createClerkRequest } from './tokens/clerkRequest';\nexport type { ClerkRequest } from './tokens/clerkRequest';\n\nexport { reverificationError, reverificationErrorResponse } from '@clerk/shared/authorization-errors';\n\nexport { verifyMachineAuthToken } from './tokens/verify';\n\nexport { isMachineTokenByPrefix, isMachineTokenType, getMachineTokenType, isTokenTypeAccepted } from './tokens/machine';\n", "import type { JwtReturnType } from './types';\n\n// TODO(dimkl): Will be probably be dropped in next major version\nexport function withLegacyReturn<T extends (...args: any[]) => Promise<JwtReturnType<any, any>>>(cb: T) {\n  return async (...args: Parameters<T>): Promise<NonNullable<Awaited<ReturnType<T>>['data']>> | never => {\n    const { data, errors } = await cb(...args);\n    if (errors) {\n      throw errors[0];\n    }\n    return data;\n  };\n}\n\n// TODO(dimkl): Will be probably be dropped in next major version\nexport function withLegacySyncReturn<T extends (...args: any[]) => JwtReturnType<any, any>>(cb: T) {\n  return (...args: Parameters<T>): NonNullable<Awaited<ReturnType<T>>['data']> | never => {\n    const { data, errors } = cb(...args);\n    if (errors) {\n      throw errors[0];\n    }\n    return data;\n  };\n}\n", "/**\n * Convert words to a sentence.\n *\n * @param items - An array of words to be joined.\n * @returns A string with the items joined by a comma and the last item joined by \", or\".\n */\nexport const toSentence = (items: string[]): string => {\n  // TODO: Once Safari supports it, use Intl.ListFormat\n  if (items.length == 0) {\n    return '';\n  }\n  if (items.length == 1) {\n    return items[0];\n  }\n  let sentence = items.slice(0, -1).join(', ');\n  sentence += `, or ${items.slice(-1)}`;\n  return sentence;\n};\n\nconst IP_V4_ADDRESS_REGEX =\n  /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n\n/**\n * Checks if a string is a valid IPv4 address.\n *\n * @returns True if the string is a valid IPv4 address, false otherwise.\n */\nexport function isIPV4Address(str: string | undefined | null): boolean {\n  return IP_V4_ADDRESS_REGEX.test(str || '');\n}\n\n/**\n * Converts the first character of a string to uppercase.\n *\n * @param str - The string to be converted.\n * @returns The modified string with the rest of the string unchanged.\n *\n * @example\n * ```ts\n * titleize('hello world') // 'Hello world'\n * ```\n */\nexport function titleize(str: string | undefined | null): string {\n  const s = str || '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n\n/**\n * Converts a string from snake_case to camelCase.\n */\nexport function snakeToCamel(str: string | undefined): string {\n  return str ? str.replace(/([-_][a-z])/g, match => match.toUpperCase().replace(/-|_/, '')) : '';\n}\n\n/**\n * Converts a string from camelCase to snake_case.\n */\nexport function camelToSnake(str: string | undefined): string {\n  return str ? str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`) : '';\n}\n\nconst createDeepObjectTransformer = (transform: any) => {\n  const deepTransform = (obj: any): any => {\n    if (!obj) {\n      return obj;\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map(el => {\n        if (typeof el === 'object' || Array.isArray(el)) {\n          return deepTransform(el);\n        }\n        return el;\n      });\n    }\n\n    const copy = { ...obj };\n    const keys = Object.keys(copy);\n    for (const oldName of keys) {\n      const newName = transform(oldName.toString());\n      if (newName !== oldName) {\n        copy[newName] = copy[oldName];\n        delete copy[oldName];\n      }\n      if (typeof copy[newName] === 'object') {\n        copy[newName] = deepTransform(copy[newName]);\n      }\n    }\n    return copy;\n  };\n\n  return deepTransform;\n};\n\n/**\n * Transforms camelCased objects/ arrays to snake_cased.\n * This function recursively traverses all objects and arrays of the passed value\n * camelCased keys are removed.\n *\n * @function\n */\nexport const deepCamelToSnake = createDeepObjectTransformer(camelToSnake);\n\n/**\n * Transforms snake_cased objects/ arrays to camelCased.\n * This function recursively traverses all objects and arrays of the passed value\n * camelCased keys are removed.\n *\n * @function\n */\nexport const deepSnakeToCamel = createDeepObjectTransformer(snakeToCamel);\n\n/**\n * A function to determine if a value is truthy.\n *\n * @returns True for `true`, true, positive numbers. False for `false`, false, 0, negative integers and anything else.\n */\nexport function isTruthy(value: unknown): boolean {\n  // Return if Boolean\n  if (typeof value === `boolean`) {\n    return value;\n  }\n\n  // Return false if null or undefined\n  if (value === undefined || value === null) {\n    return false;\n  }\n\n  // If the String is true or false\n  if (typeof value === `string`) {\n    if (value.toLowerCase() === `true`) {\n      return true;\n    }\n\n    if (value.toLowerCase() === `false`) {\n      return false;\n    }\n  }\n\n  // Now check if it's a number\n  const number = parseInt(value as string, 10);\n  if (isNaN(number)) {\n    return false;\n  }\n\n  if (number > 0) {\n    return true;\n  }\n\n  // Default to false\n  return false;\n}\n\n/**\n * Get all non-undefined values from an object.\n */\nexport function getNonUndefinedValues<T extends object>(obj: T): Partial<T> {\n  return Object.entries(obj).reduce((acc, [key, value]) => {\n    if (value !== undefined) {\n      acc[key as keyof T] = value;\n    }\n    return acc;\n  }, {} as Partial<T>);\n}\n", "import type { TelemetryEvent } from '@clerk/types';\n\ntype TtlInMilliseconds = number;\n\nconst DEFAULT_CACHE_TTL_MS = 86400000; // 24 hours\n\n/**\n * Manages throttling for telemetry events using the browser's localStorage to\n * mitigate event flooding in frequently executed code paths.\n */\nexport class TelemetryEventThrottler {\n  #storageKey = 'clerk_telemetry_throttler';\n  #cacheTtl = DEFAULT_CACHE_TTL_MS;\n\n  isEventThrottled(payload: TelemetryEvent): boolean {\n    if (!this.#isValidBrowser) {\n      return false;\n    }\n\n    const now = Date.now();\n    const key = this.#generateKey(payload);\n    const entry = this.#cache?.[key];\n\n    if (!entry) {\n      const updatedCache = {\n        ...this.#cache,\n        [key]: now,\n      };\n\n      localStorage.setItem(this.#storageKey, JSON.stringify(updatedCache));\n    }\n\n    const shouldInvalidate = entry && now - entry > this.#cacheTtl;\n    if (shouldInvalidate) {\n      const updatedCache = this.#cache;\n      delete updatedCache[key];\n\n      localStorage.setItem(this.#storageKey, JSON.stringify(updatedCache));\n    }\n\n    return !!entry;\n  }\n\n  /**\n   * Generates a consistent unique key for telemetry events by sorting payload properties.\n   * This ensures that payloads with identical content in different orders produce the same key.\n   */\n  #generateKey(event: TelemetryEvent): string {\n    const { sk: _sk, pk: _pk, payload, ...rest } = event;\n\n    const sanitizedEvent: Omit<TelemetryEvent, 'sk' | 'pk' | 'payload'> & TelemetryEvent['payload'] = {\n      ...payload,\n      ...rest,\n    };\n\n    return JSON.stringify(\n      Object.keys({\n        ...payload,\n        ...rest,\n      })\n        .sort()\n        .map(key => sanitizedEvent[key]),\n    );\n  }\n\n  get #cache(): Record<string, TtlInMilliseconds> | undefined {\n    const cacheString = localStorage.getItem(this.#storageKey);\n\n    if (!cacheString) {\n      return {};\n    }\n\n    return JSON.parse(cacheString);\n  }\n\n  /**\n   * Checks if the browser's localStorage is supported and writable.\n   *\n   * If any of these operations fail, it indicates that localStorage is either\n   * not supported or not writable (e.g., in cases where the storage is full or\n   * the browser is in a privacy mode that restricts localStorage usage).\n   */\n  get #isValidBrowser(): boolean {\n    if (typeof window === 'undefined') {\n      return false;\n    }\n\n    const storage = window.localStorage;\n    if (!storage) {\n      return false;\n    }\n\n    try {\n      const testKey = 'test';\n      storage.setItem(testKey, testKey);\n      storage.removeItem(testKey);\n\n      return true;\n    } catch (err: unknown) {\n      const isQuotaExceededError =\n        err instanceof DOMException &&\n        // Check error names for different browsers\n        (err.name === 'QuotaExceededError' || err.name === 'NS_ERROR_DOM_QUOTA_REACHED');\n\n      if (isQuotaExceededError && storage.length > 0) {\n        storage.removeItem(this.#storageKey);\n      }\n\n      return false;\n    }\n  }\n}\n", "/**\n * The `TelemetryCollector` class handles collection of telemetry events from Clerk SDKs. Telemetry is opt-out and can be disabled by setting a CLERK_TELEMETRY_DISABLED environment variable.\n * The `ClerkProvider` also accepts a `telemetry` prop that will be passed to the collector during initialization:.\n *\n * ```jsx\n * <ClerkProvider telemetry={false}>\n *    ...\n * </ClerkProvider>\n * ```\n *\n * For more information, please see the telemetry documentation page: https://clerk.com/docs/telemetry.\n */\nimport type {\n  InstanceType,\n  SDKMetadata,\n  TelemetryCollector as TelemetryCollectorInterface,\n  TelemetryEvent,\n  TelemetryEventRaw,\n  TelemetryLogEntry,\n} from '@clerk/types';\n\nimport { parsePublishableKey } from '../keys';\nimport { isTruthy } from '../underscore';\nimport { TelemetryEventThrottler } from './throttler';\nimport type { TelemetryCollectorOptions } from './types';\n\n/**\n * Local interface for window.Clerk to avoid global type pollution.\n * This is only used within this module and doesn't affect other packages.\n */\ninterface WindowWithClerk extends Window {\n  Clerk?: {\n    constructor?: {\n      sdkMetadata?: SDKMetadata;\n    };\n  };\n}\n\n/**\n * Type guard to check if window.Clerk exists and has the expected structure.\n */\nfunction isWindowClerkWithMetadata(clerk: unknown): clerk is { constructor: { sdkMetadata?: SDKMetadata } } {\n  return (\n    typeof clerk === 'object' && clerk !== null && 'constructor' in clerk && typeof clerk.constructor === 'function'\n  );\n}\n\ntype TelemetryCollectorConfig = Pick<\n  TelemetryCollectorOptions,\n  'samplingRate' | 'disabled' | 'debug' | 'maxBufferSize' | 'perEventSampling'\n> & {\n  endpoint: string;\n};\n\ntype TelemetryMetadata = Required<\n  Pick<TelemetryCollectorOptions, 'clerkVersion' | 'sdk' | 'sdkVersion' | 'publishableKey' | 'secretKey'>\n> & {\n  /**\n   * The instance type, derived from the provided publishableKey.\n   */\n  instanceType: InstanceType;\n};\n\n/**\n * Structure of log data sent to the telemetry endpoint.\n */\ntype TelemetryLogData = {\n  /** Service that generated the log. */\n  sdk: string;\n  /** The version of the SDK where the event originated from. */\n  sdkv: string;\n  /** The version of Clerk where the event originated from. */\n  cv: string;\n  /** Log level (info, warn, error, debug, etc.). */\n  lvl: TelemetryLogEntry['level'];\n  /** Log message. */\n  msg: string;\n  /** Instance ID - optional. */\n  iid?: string;\n  /** Timestamp when log was generated. */\n  ts: string;\n  /** Primary key. */\n  pk: string | null;\n  /** Additional payload for the log. */\n  payload: Record<string, unknown> | null;\n};\n\ntype TelemetryBufferItem = { kind: 'event'; value: TelemetryEvent } | { kind: 'log'; value: TelemetryLogData };\n\n// Accepted log levels for runtime validation\nconst VALID_LOG_LEVELS = new Set<string>(['error', 'warn', 'info', 'debug', 'trace']);\n\nconst DEFAULT_CONFIG: Partial<TelemetryCollectorConfig> = {\n  samplingRate: 1,\n  maxBufferSize: 5,\n  // Production endpoint: https://clerk-telemetry.com\n  // Staging endpoint: https://staging.clerk-telemetry.com\n  // Local: http://localhost:8787\n  endpoint: 'https://clerk-telemetry.com',\n};\n\nexport class TelemetryCollector implements TelemetryCollectorInterface {\n  #config: Required<TelemetryCollectorConfig>;\n  #eventThrottler: TelemetryEventThrottler;\n  #metadata: TelemetryMetadata = {} as TelemetryMetadata;\n  #buffer: TelemetryBufferItem[] = [];\n  #pendingFlush: number | ReturnType<typeof setTimeout> | null = null;\n\n  constructor(options: TelemetryCollectorOptions) {\n    this.#config = {\n      maxBufferSize: options.maxBufferSize ?? DEFAULT_CONFIG.maxBufferSize,\n      samplingRate: options.samplingRate ?? DEFAULT_CONFIG.samplingRate,\n      perEventSampling: options.perEventSampling ?? true,\n      disabled: options.disabled ?? false,\n      debug: options.debug ?? false,\n      endpoint: DEFAULT_CONFIG.endpoint,\n    } as Required<TelemetryCollectorConfig>;\n\n    if (!options.clerkVersion && typeof window === 'undefined') {\n      // N/A in a server environment\n      this.#metadata.clerkVersion = '';\n    } else {\n      this.#metadata.clerkVersion = options.clerkVersion ?? '';\n    }\n\n    // We will try to grab the SDK data lazily when an event is triggered, so it should always be defined once the event is sent.\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.#metadata.sdk = options.sdk!;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.#metadata.sdkVersion = options.sdkVersion!;\n\n    this.#metadata.publishableKey = options.publishableKey ?? '';\n\n    const parsedKey = parsePublishableKey(options.publishableKey);\n    if (parsedKey) {\n      this.#metadata.instanceType = parsedKey.instanceType;\n    }\n\n    if (options.secretKey) {\n      // Only send the first 16 characters of the secret key to to avoid sending the full key. We can still query against the partial key.\n      this.#metadata.secretKey = options.secretKey.substring(0, 16);\n    }\n\n    this.#eventThrottler = new TelemetryEventThrottler();\n  }\n\n  get isEnabled(): boolean {\n    if (this.#metadata.instanceType !== 'development') {\n      return false;\n    }\n\n    // In browser or client environments, we most likely pass the disabled option to the collector, but in environments\n    // where environment variables are available we also check for `CLERK_TELEMETRY_DISABLED`.\n    if (\n      this.#config.disabled ||\n      (typeof process !== 'undefined' && process.env && isTruthy(process.env.CLERK_TELEMETRY_DISABLED))\n    ) {\n      return false;\n    }\n\n    // navigator.webdriver is a property generally set by headless browsers that are running in an automated testing environment.\n    // Data from these environments is not meaningful for us and has the potential to produce a large volume of events, so we disable\n    // collection in this case. (ref: https://developer.mozilla.org/en-US/docs/Web/API/Navigator/webdriver)\n    if (typeof window !== 'undefined' && !!window?.navigator?.webdriver) {\n      return false;\n    }\n\n    return true;\n  }\n\n  get isDebug(): boolean {\n    return (\n      this.#config.debug ||\n      (typeof process !== 'undefined' && process.env && isTruthy(process.env.CLERK_TELEMETRY_DEBUG))\n    );\n  }\n\n  record(event: TelemetryEventRaw): void {\n    try {\n      const preparedPayload = this.#preparePayload(event.event, event.payload);\n\n      this.#logEvent(preparedPayload.event, preparedPayload);\n\n      if (!this.#shouldRecord(preparedPayload, event.eventSamplingRate)) {\n        return;\n      }\n\n      this.#buffer.push({ kind: 'event', value: preparedPayload });\n\n      this.#scheduleFlush();\n    } catch (error) {\n      console.error('[clerk/telemetry] Error recording telemetry event', error);\n    }\n  }\n\n  /**\n   * Records a telemetry log entry if logging is enabled and not in debug mode.\n   *\n   * @param entry - The telemetry log entry to record.\n   */\n  recordLog(entry: TelemetryLogEntry): void {\n    try {\n      if (!this.#shouldRecordLog(entry)) {\n        return;\n      }\n\n      const levelIsValid = typeof entry?.level === 'string' && VALID_LOG_LEVELS.has(entry.level);\n      const messageIsValid = typeof entry?.message === 'string' && entry.message.trim().length > 0;\n\n      let normalizedTimestamp: Date | null = null;\n      const timestampInput: unknown = (entry as unknown as { timestamp?: unknown })?.timestamp;\n      if (typeof timestampInput === 'number' || typeof timestampInput === 'string') {\n        const candidate = new Date(timestampInput);\n        if (!Number.isNaN(candidate.getTime())) {\n          normalizedTimestamp = candidate;\n        }\n      }\n\n      if (!levelIsValid || !messageIsValid || normalizedTimestamp === null) {\n        if (this.isDebug && typeof console !== 'undefined') {\n          console.warn('[clerk/telemetry] Dropping invalid telemetry log entry', {\n            levelIsValid,\n            messageIsValid,\n            timestampIsValid: normalizedTimestamp !== null,\n          });\n        }\n        return;\n      }\n\n      const sdkMetadata = this.#getSDKMetadata();\n\n      const logData: TelemetryLogData = {\n        sdk: sdkMetadata.name,\n        sdkv: sdkMetadata.version,\n        cv: this.#metadata.clerkVersion ?? '',\n        lvl: entry.level,\n        msg: entry.message,\n        ts: normalizedTimestamp.toISOString(),\n        pk: this.#metadata.publishableKey || null,\n        payload: this.#sanitizeContext(entry.context),\n      };\n\n      this.#buffer.push({ kind: 'log', value: logData });\n\n      this.#scheduleFlush();\n    } catch (error) {\n      console.error('[clerk/telemetry] Error recording telemetry log entry', error);\n    }\n  }\n\n  #shouldRecord(preparedPayload: TelemetryEvent, eventSamplingRate?: number) {\n    return this.isEnabled && !this.isDebug && this.#shouldBeSampled(preparedPayload, eventSamplingRate);\n  }\n\n  #shouldRecordLog(_entry: TelemetryLogEntry): boolean {\n    // Always allow logs from debug logger to be sent. Debug logger itself is already gated elsewhere.\n    return true;\n  }\n\n  #shouldBeSampled(preparedPayload: TelemetryEvent, eventSamplingRate?: number) {\n    const randomSeed = Math.random();\n\n    const toBeSampled =\n      randomSeed <= this.#config.samplingRate &&\n      (this.#config.perEventSampling === false ||\n        typeof eventSamplingRate === 'undefined' ||\n        randomSeed <= eventSamplingRate);\n\n    if (!toBeSampled) {\n      return false;\n    }\n\n    return !this.#eventThrottler.isEventThrottled(preparedPayload);\n  }\n\n  #scheduleFlush(): void {\n    // On the server, we want to flush immediately as we have less guarantees about the lifecycle of the process\n    if (typeof window === 'undefined') {\n      this.#flush();\n      return;\n    }\n    const isBufferFull = this.#buffer.length >= this.#config.maxBufferSize;\n    if (isBufferFull) {\n      // If the buffer is full, flush immediately to make sure we minimize the chance of event loss.\n      // Cancel any pending flushes as we're going to flush immediately\n      if (this.#pendingFlush) {\n        if (typeof cancelIdleCallback !== 'undefined') {\n          cancelIdleCallback(Number(this.#pendingFlush));\n        } else {\n          clearTimeout(Number(this.#pendingFlush));\n        }\n      }\n      this.#flush();\n      return;\n    }\n\n    // If we have a pending flush, do nothing\n    if (this.#pendingFlush) {\n      return;\n    }\n\n    if ('requestIdleCallback' in window) {\n      this.#pendingFlush = requestIdleCallback(() => {\n        this.#flush();\n        this.#pendingFlush = null;\n      });\n    } else {\n      // This is not an ideal solution, but it at least waits until the next tick\n      this.#pendingFlush = setTimeout(() => {\n        this.#flush();\n        this.#pendingFlush = null;\n      }, 0);\n    }\n  }\n\n  #flush(): void {\n    // Capture the current buffer and clear it immediately to avoid closure references\n    const itemsToSend = [...this.#buffer];\n    this.#buffer = [];\n\n    this.#pendingFlush = null;\n\n    if (itemsToSend.length === 0) {\n      return;\n    }\n\n    const eventsToSend = itemsToSend\n      .filter(item => item.kind === 'event')\n      .map(item => (item as { kind: 'event'; value: TelemetryEvent }).value);\n\n    const logsToSend = itemsToSend\n      .filter(item => item.kind === 'log')\n      .map(item => (item as { kind: 'log'; value: TelemetryLogData }).value);\n\n    if (eventsToSend.length > 0) {\n      const eventsUrl = new URL('/v1/event', this.#config.endpoint);\n      fetch(eventsUrl, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        keepalive: true,\n        method: 'POST',\n        // TODO: We send an array here with that idea that we can eventually send multiple events.\n        body: JSON.stringify({ events: eventsToSend }),\n      }).catch(() => void 0);\n    }\n\n    if (logsToSend.length > 0) {\n      const logsUrl = new URL('/v1/logs', this.#config.endpoint);\n      fetch(logsUrl, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        keepalive: true,\n        method: 'POST',\n        body: JSON.stringify({ logs: logsToSend }),\n      }).catch(() => void 0);\n    }\n  }\n\n  /**\n   * If running in debug mode, log the event and its payload to the console.\n   */\n  #logEvent(event: TelemetryEvent['event'], payload: Record<string, any>) {\n    if (!this.isDebug) {\n      return;\n    }\n\n    if (typeof console.groupCollapsed !== 'undefined') {\n      console.groupCollapsed('[clerk/telemetry]', event);\n      console.log(payload);\n      console.groupEnd();\n    } else {\n      console.log('[clerk/telemetry]', event, payload);\n    }\n  }\n\n  /**\n   * If in browser, attempt to lazily grab the SDK metadata from the Clerk singleton, otherwise fallback to the initially passed in values.\n   *\n   * This is necessary because the sdkMetadata can be set by the host SDK after the TelemetryCollector is instantiated.\n   */\n  #getSDKMetadata() {\n    const sdkMetadata = {\n      name: this.#metadata.sdk,\n      version: this.#metadata.sdkVersion,\n    };\n\n    if (typeof window !== 'undefined') {\n      const windowWithClerk = window as WindowWithClerk;\n\n      if (windowWithClerk.Clerk) {\n        const windowClerk = windowWithClerk.Clerk;\n\n        if (isWindowClerkWithMetadata(windowClerk) && windowClerk.constructor.sdkMetadata) {\n          const { name, version } = windowClerk.constructor.sdkMetadata;\n\n          if (name !== undefined) {\n            sdkMetadata.name = name;\n          }\n          if (version !== undefined) {\n            sdkMetadata.version = version;\n          }\n        }\n      }\n    }\n\n    return sdkMetadata;\n  }\n\n  /**\n   * Append relevant metadata from the Clerk singleton to the event payload.\n   */\n  #preparePayload(event: TelemetryEvent['event'], payload: TelemetryEvent['payload']): TelemetryEvent {\n    const sdkMetadata = this.#getSDKMetadata();\n\n    return {\n      event,\n      cv: this.#metadata.clerkVersion ?? '',\n      it: this.#metadata.instanceType ?? '',\n      sdk: sdkMetadata.name,\n      sdkv: sdkMetadata.version,\n      ...(this.#metadata.publishableKey ? { pk: this.#metadata.publishableKey } : {}),\n      ...(this.#metadata.secretKey ? { sk: this.#metadata.secretKey } : {}),\n      payload,\n    };\n  }\n\n  /**\n   * Best-effort sanitization of the context payload. Returns a plain object with JSON-serializable\n   * values or null when the input is missing or not serializable. Arrays are not accepted.\n   */\n  #sanitizeContext(context: unknown): Record<string, unknown> | null {\n    if (context === null || typeof context === 'undefined') {\n      return null;\n    }\n    if (typeof context !== 'object') {\n      return null;\n    }\n    try {\n      const cleaned = JSON.parse(JSON.stringify(context));\n      if (cleaned && typeof cleaned === 'object' && !Array.isArray(cleaned)) {\n        return cleaned as Record<string, unknown>;\n      }\n      return null;\n    } catch {\n      return null;\n    }\n  }\n}\n", "import type { TelemetryEventRaw } from '@clerk/types';\n\nconst EVENT_COMPONENT_MOUNTED = 'COMPONENT_MOUNTED';\nconst EVENT_COMPONENT_OPENED = 'COMPONENT_OPENED';\nconst EVENT_SAMPLING_RATE = 0.1;\n\ntype ComponentMountedBase = {\n  component: string;\n};\n\ntype EventPrebuiltComponent = ComponentMountedBase & {\n  appearanceProp: boolean;\n  elements: boolean;\n  variables: boolean;\n  baseTheme: boolean;\n};\n\ntype EventComponentMounted = ComponentMountedBase & TelemetryEventRaw['payload'];\n\n/**\n * @internal\n */\nfunction createPrebuiltComponentEvent(event: typeof EVENT_COMPONENT_MOUNTED | typeof EVENT_COMPONENT_OPENED) {\n  return function (\n    component: string,\n    props?: Record<string, any>,\n    additionalPayload?: TelemetryEventRaw['payload'],\n  ): TelemetryEventRaw<EventPrebuiltComponent> {\n    return {\n      event,\n      eventSamplingRate: EVENT_SAMPLING_RATE,\n      payload: {\n        component,\n        appearanceProp: Boolean(props?.appearance),\n        baseTheme: Boolean(props?.appearance?.baseTheme),\n        elements: Boolean(props?.appearance?.elements),\n        variables: Boolean(props?.appearance?.variables),\n        ...additionalPayload,\n      },\n    };\n  };\n}\n\n/**\n * Helper function for `telemetry.record()`. Create a consistent event object for when a prebuilt (AIO) component is mounted.\n *\n * @param component - The name of the component.\n * @param props - The props passed to the component. Will be filtered to a known list of props.\n * @param additionalPayload - Additional data to send with the event.\n * @example\n * telemetry.record(eventPrebuiltComponentMounted('SignUp', props));\n */\nexport function eventPrebuiltComponentMounted(\n  component: string,\n  props?: Record<string, any>,\n  additionalPayload?: TelemetryEventRaw['payload'],\n): TelemetryEventRaw<EventPrebuiltComponent> {\n  return createPrebuiltComponentEvent(EVENT_COMPONENT_MOUNTED)(component, props, additionalPayload);\n}\n\n/**\n * Helper function for `telemetry.record()`. Create a consistent event object for when a prebuilt (AIO) component is opened as a modal.\n *\n * @param component - The name of the component.\n * @param props - The props passed to the component. Will be filtered to a known list of props.\n * @param additionalPayload - Additional data to send with the event.\n * @example\n * telemetry.record(eventPrebuiltComponentOpened('GoogleOneTap', props));\n */\nexport function eventPrebuiltComponentOpened(\n  component: string,\n  props?: Record<string, any>,\n  additionalPayload?: TelemetryEventRaw['payload'],\n): TelemetryEventRaw<EventPrebuiltComponent> {\n  return createPrebuiltComponentEvent(EVENT_COMPONENT_OPENED)(component, props, additionalPayload);\n}\n\n/**\n * Helper function for `telemetry.record()`. Create a consistent event object for when a component is mounted. Use `eventPrebuiltComponentMounted` for prebuilt components.\n *\n * **Caution:** Filter the `props` you pass to this function to avoid sending too much data.\n *\n * @param component - The name of the component.\n * @param props - The props passed to the component. Ideally you only pass a handful of props here.\n * @example\n * telemetry.record(eventComponentMounted('SignUp', props));\n */\nexport function eventComponentMounted(\n  component: string,\n  props: TelemetryEventRaw['payload'] = {},\n): TelemetryEventRaw<EventComponentMounted> {\n  return {\n    event: EVENT_COMPONENT_MOUNTED,\n    eventSamplingRate: EVENT_SAMPLING_RATE,\n    payload: {\n      component,\n      ...props,\n    },\n  };\n}\n", "import type { TelemetryEventRaw } from '@clerk/types';\n\nconst EVENT_METHOD_CALLED = 'METHOD_CALLED';\nconst EVENT_SAMPLING_RATE = 0.1;\n\ntype EventMethodCalled = {\n  method: string;\n} & Record<string, string | number | boolean>;\n\n/**\n * Fired when a helper method is called from a Clerk SDK.\n */\nexport function eventMethodCalled(\n  method: string,\n  payload?: Record<string, unknown>,\n): TelemetryEventRaw<EventMethodCalled> {\n  return {\n    event: EVENT_METHOD_CALLED,\n    eventSamplingRate: EVENT_SAMPLING_RATE,\n    payload: {\n      method,\n      ...payload,\n    },\n  };\n}\n", "import type { TelemetryEventRaw } from '@clerk/types';\n\nconst EVENT_FRAMEWORK_METADATA = 'FRAMEWORK_METADATA';\nconst EVENT_SAMPLING_RATE = 0.1;\n\ntype EventFrameworkMetadata = Record<string, string | number | boolean>;\n\n/**\n * Fired when a helper method is called from a Clerk SDK.\n */\nexport function eventFrameworkMetadata(payload: EventFrameworkMetadata): TelemetryEventRaw<EventFrameworkMetadata> {\n  return {\n    event: EVENT_FRAMEWORK_METADATA,\n    eventSamplingRate: EVENT_SAMPLING_RATE,\n    payload,\n  };\n}\n", "import type { Appearance, BaseTheme, TelemetryEventRaw } from '@clerk/types';\n\nexport const EVENT_THEME_USAGE = 'THEME_USAGE';\nexport const EVENT_SAMPLING_RATE = 1;\n\ntype EventThemeUsage = {\n  /**\n   * The name of the theme being used (e.g., \"shadcn\", \"neobrutalism\", etc.).\n   */\n  themeName?: string;\n};\n\n/**\n * Helper function for `telemetry.record()`. Create a consistent event object for tracking theme usage in ClerkProvider.\n *\n * @param appearance - The appearance prop from ClerkProvider.\n * @example\n * telemetry.record(eventThemeUsage(appearance));\n */\nexport function eventThemeUsage(appearance?: Appearance): TelemetryEventRaw<EventThemeUsage> {\n  const payload = analyzeThemeUsage(appearance);\n\n  return {\n    event: EVENT_THEME_USAGE,\n    eventSamplingRate: EVENT_SAMPLING_RATE,\n    payload,\n  };\n}\n\n/**\n * Analyzes the appearance prop to extract theme usage information for telemetry.\n *\n * @internal\n */\nfunction analyzeThemeUsage(appearance?: Appearance): EventThemeUsage {\n  if (!appearance || typeof appearance !== 'object') {\n    return {};\n  }\n\n  // Prioritize the new theme property over deprecated baseTheme\n  const themeProperty = appearance.theme || appearance.baseTheme;\n\n  if (!themeProperty) {\n    return {};\n  }\n\n  let themeName: string | undefined;\n\n  if (Array.isArray(themeProperty)) {\n    // Look for the first identifiable theme name in the array\n    for (const theme of themeProperty) {\n      const name = extractThemeName(theme);\n      if (name) {\n        themeName = name;\n        break;\n      }\n    }\n  } else {\n    themeName = extractThemeName(themeProperty);\n  }\n\n  return { themeName };\n}\n\n/**\n * Extracts the theme name from a theme object.\n *\n * @internal\n */\nfunction extractThemeName(theme: BaseTheme): string | undefined {\n  if (typeof theme === 'string') {\n    return theme;\n  }\n\n  if (typeof theme === 'object' && theme !== null) {\n    // Check for explicit theme name\n    if ('name' in theme && typeof theme.name === 'string') {\n      return theme.name;\n    }\n  }\n\n  return undefined;\n}\n", "import {\n  EVENT_SAMPLING_RATE,\n  EVENT_THEME_USAGE,\n  TelemetryCollector,\n  eventComponentMounted,\n  eventFrameworkMetadata,\n  eventMethodCalled,\n  eventPrebuiltComponentMounted,\n  eventPrebuiltComponentOpened,\n  eventThemeUsage\n} from \"./chunk-RHZEJGFD.mjs\";\nimport \"./chunk-GGFRMWFO.mjs\";\nimport \"./chunk-IV7BOO4U.mjs\";\nimport \"./chunk-TETGTEI2.mjs\";\nimport \"./chunk-KOH7GTJO.mjs\";\nimport \"./chunk-I6MTSTOF.mjs\";\nimport \"./chunk-7ELT755Q.mjs\";\nexport {\n  EVENT_SAMPLING_RATE,\n  EVENT_THEME_USAGE,\n  TelemetryCollector,\n  eventComponentMounted,\n  eventFrameworkMetadata,\n  eventMethodCalled,\n  eventPrebuiltComponentMounted,\n  eventPrebuiltComponentOpened,\n  eventThemeUsage\n};\n//# sourceMappingURL=telemetry.mjs.map", "import type { TelemetryCollectorOptions } from '@clerk/shared/telemetry';\nimport { TelemetryCollector } from '@clerk/shared/telemetry';\nimport type { SDKMetadata } from '@clerk/types';\n\nimport type { ApiClient, CreateBackendApiOptions } from './api';\nimport { createBackendApiClient } from './api';\nimport { withLegacyReturn } from './jwt/legacyReturn';\nimport type { CreateAuthenticateRequestOptions } from './tokens/factory';\nimport { createAuthenticateRequest } from './tokens/factory';\nimport { verifyToken as _verifyToken } from './tokens/verify';\n\nexport const verifyToken = withLegacyReturn(_verifyToken);\n\nexport type ClerkOptions = Omit<CreateBackendApiOptions, 'skipApiVersionInUrl' | 'useMachineSecretKey'> &\n  Partial<\n    Pick<\n      CreateAuthenticateRequestOptions['options'],\n      'audience' | 'jwtKey' | 'proxyUrl' | 'secretKey' | 'publishableKey' | 'domain' | 'isSatellite'\n    >\n  > & { sdkMetadata?: SDKMetadata; telemetry?: Pick<TelemetryCollectorOptions, 'disabled' | 'debug' | 'samplingRate'> };\n\n// The current exported type resolves the following issue in packages importing createClerkClient\n// TS4023: Exported variable 'clerkClient' has or is using name 'AuthErrorReason' from external module \"/packages/backend/dist/index\" but cannot be named.\nexport type ClerkClient = {\n  telemetry: TelemetryCollector;\n} & ApiClient &\n  ReturnType<typeof createAuthenticateRequest>;\n\nexport function createClerkClient(options: ClerkOptions): ClerkClient {\n  const opts = { ...options };\n  const apiClient = createBackendApiClient(opts);\n  const requestState = createAuthenticateRequest({ options: opts, apiClient });\n  const telemetry = new TelemetryCollector({\n    publishableKey: opts.publishableKey,\n    secretKey: opts.secretKey,\n    samplingRate: 0.1,\n    ...(opts.sdkMetadata ? { sdk: opts.sdkMetadata.name, sdkVersion: opts.sdkMetadata.version } : {}),\n    ...(opts.telemetry || {}),\n  });\n\n  return {\n    ...apiClient,\n    ...requestState,\n    telemetry,\n  };\n}\n\n/**\n * General Types\n */\nexport type { OrganizationMembershipRole } from './api/resources';\nexport type { VerifyTokenOptions } from './tokens/verify';\n/**\n * JSON types\n */\nexport type {\n  ActorTokenJSON,\n  AccountlessApplicationJSON,\n  ClerkResourceJSON,\n  TokenJSON,\n  AllowlistIdentifierJSON,\n  BlocklistIdentifierJSON,\n  ClientJSON,\n  CnameTargetJSON,\n  DomainJSON,\n  EmailJSON,\n  EmailAddressJSON,\n  ExternalAccountJSON,\n  IdentificationLinkJSON,\n  InstanceJSON,\n  InstanceRestrictionsJSON,\n  InstanceSettingsJSON,\n  InvitationJSON,\n  JwtTemplateJSON,\n  OauthAccessTokenJSON,\n  OAuthApplicationJSON,\n  OrganizationJSON,\n  OrganizationDomainJSON,\n  OrganizationDomainVerificationJSON,\n  OrganizationInvitationJSON,\n  OrganizationSettingsJSON,\n  PublicOrganizationDataJSON,\n  OrganizationMembershipJSON,\n  OrganizationMembershipPublicUserDataJSON,\n  PhoneNumberJSON,\n  ProxyCheckJSON,\n  RedirectUrlJSON,\n  SessionJSON,\n  SignInJSON,\n  SignInTokenJSON,\n  SignUpJSON,\n  SignUpVerificationJSON,\n  SignUpVerificationsJSON,\n  SMSMessageJSON,\n  UserJSON,\n  VerificationJSON,\n  WaitlistEntryJSON,\n  Web3WalletJSON,\n  DeletedObjectJSON,\n  PaginatedResponseJSON,\n  TestingTokenJSON,\n  WebhooksSvixJSON,\n  CommercePlanJSON,\n  CommerceSubscriptionJSON,\n  CommerceSubscriptionItemJSON,\n} from './api/resources/JSON';\n\n/**\n * Resources\n */\nexport type {\n  APIKey,\n  ActorToken,\n  AccountlessApplication,\n  AllowlistIdentifier,\n  BlocklistIdentifier,\n  Client,\n  CnameTarget,\n  Domain,\n  EmailAddress,\n  ExternalAccount,\n  Feature,\n  Instance,\n  InstanceRestrictions,\n  InstanceSettings,\n  Invitation,\n  JwtTemplate,\n  Machine,\n  M2MToken,\n  OauthAccessToken,\n  OAuthApplication,\n  Organization,\n  OrganizationDomain,\n  OrganizationDomainVerification,\n  OrganizationInvitation,\n  OrganizationMembership,\n  OrganizationMembershipPublicUserData,\n  OrganizationSettings,\n  PhoneNumber,\n  SamlConnection,\n  Session,\n  SignInToken,\n  SignUpAttempt,\n  SMSMessage,\n  Token,\n  User,\n  TestingToken,\n  CommercePlan,\n  CommerceSubscription,\n  CommerceSubscriptionItem,\n} from './api/resources';\n\n/**\n * Webhooks event types\n */\nexport type {\n  EmailWebhookEvent,\n  OrganizationWebhookEvent,\n  OrganizationDomainWebhookEvent,\n  OrganizationInvitationWebhookEvent,\n  OrganizationMembershipWebhookEvent,\n  RoleWebhookEvent,\n  PermissionWebhookEvent,\n  SessionWebhookEvent,\n  SMSWebhookEvent,\n  UserWebhookEvent,\n  WaitlistEntryWebhookEvent,\n  WebhookEvent,\n  WebhookEventType,\n  CommercePaymentAttemptWebhookEvent,\n  CommerceSubscriptionWebhookEvent,\n  CommerceSubscriptionItemWebhookEvent,\n} from './api/resources/Webhooks';\n\n/**\n * Auth objects\n */\nexport type { AuthObject, InvalidTokenAuthObject } from './tokens/authObjects';\nexport type { SessionAuthObject, MachineAuthObject } from './tokens/types';\n", "import { createClerkClient } from '@clerk/backend';\n\ninterface Env {\n  CLERK_SECRET_KEY: string;\n}\n\n// Create Clerk client\nconst createClerk = (env: Env) => {\n  if (!env.CLERK_SECRET_KEY) {\n    throw new Error('Missing CLERK_SECRET_KEY environment variable');\n  }\n  \n  return createClerkClient({\n    secretKey: env.CLERK_SECRET_KEY,\n  });\n};\n\n// Extract session token from request\nconst getSessionToken = (request: Request): string | null => {\n  const authHeader = request.headers.get('Authorization');\n  if (!authHeader) return null;\n  \n  const parts = authHeader.split(' ');\n  if (parts.length !== 2 || parts[0] !== 'Bearer') return null;\n  \n  return parts[1];\n};\n\n// Authenticate user\nexport const authenticateUser = async (request: Request, env: Env) => {\n  try {\n    const token = getSessionToken(request);\n    if (!token) {\n      return {\n        success: false,\n        error: {\n          message: 'Missing authentication token',\n          code: 'MISSING_AUTH_TOKEN',\n          status: 401\n        }\n      };\n    }\n\n    const clerk = createClerk(env);\n    const session = await clerk.sessions.verifySessionToken(token);\n    \n    if (!session) {\n      return {\n        success: false,\n        error: {\n          message: 'Invalid or expired session token',\n          code: 'INVALID_SESSION',\n          status: 401\n        }\n      };\n    }\n\n    return {\n      success: true,\n      userId: session.userId,\n      session\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: {\n        message: error instanceof Error ? error.message : 'Authentication failed',\n        code: 'AUTHENTICATION_FAILED',\n        status: 401\n      }\n    };\n  }\n};\n\n// Check if user is admin\nexport const isAdminUser = async (userId: string, env: Env) => {\n  try {\n    const clerk = createClerk(env);\n    const user = await clerk.users.getUser(userId);\n    \n    // Check if user has admin role in public metadata\n    const isAdmin = user.publicMetadata?.role === 'admin' || \n                   user.privateMetadata?.role === 'admin' ||\n                   user.emailAddresses.some(email => \n                     email.emailAddress.includes('@handywriterz.com'));\n    \n    return {\n      success: true,\n      isAdmin\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: {\n        message: error instanceof Error ? error.message : 'Failed to check admin status',\n        code: 'ADMIN_CHECK_FAILED',\n        status: 500\n      }\n    };\n  }\n};\n\n// Helper function to create structured error responses\nexport const createErrorResponse = (message: string, status: number = 500, code?: string) => {\n  return new Response(JSON.stringify({\n    success: false,\n    error: {\n      message,\n      code,\n      status\n    }\n  }), {\n    status,\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    }\n  });\n};\n\n// Helper function to create success responses\nexport const createSuccessResponse = (data: any, status: number = 200) => {\n  return new Response(JSON.stringify({\n    success: true,\n    ...data\n  }), {\n    status,\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    }\n  });\n};", "import { D1Database } from '@cloudflare/workers-types';\nimport { authenticateUser, createErrorResponse, createSuccessResponse } from './auth';\n\ninterface Env {\n  DB: D1Database;\n  CLERK_SECRET_KEY: string;\n}\n\nexport const onRequest: PagesFunction<Env> = async (context) => {\n  const { request, env } = context;\n  \n  // CORS headers\n  const headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    'Content-Type': 'application/json'\n  };\n  \n  // Handle CORS preflight\n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers });\n  }\n  \n  try {\n    // Authenticate user for all database operations\n    const authResult = await authenticateUser(request, env);\n    if (!authResult.success) {\n      return createErrorResponse(\n        authResult.error.message, \n        authResult.error.status, \n        authResult.error.code\n      );\n    }\n    \n    // Parse request body if present\n    const requestBody = request.method !== 'GET' ? await request.json() : null;\n    \n    // Extract operation details from the URL or body\n    const url = new URL(request.url);\n    const path = url.pathname.replace('/api/database', '');\n    const pathParts = path.split('/').filter(Boolean);\n    \n    // Handle database operations based on path and method\n    if (request.method === 'GET') {\n      // Query operations\n      if (pathParts[0] === 'query') {\n        const table = pathParts[1];\n        const params = Object.fromEntries(url.searchParams);\n        \n        // Basic query functionality\n        let query = `SELECT * FROM ${table}`;\n        const values = [];\n        \n        // Handle filtering\n        if (params.filter) {\n          const filters = JSON.parse(params.filter);\n          if (filters.length > 0) {\n            query += ' WHERE ';\n            query += filters.map((f, i) => {\n              values.push(f.value);\n              return `${f.column} = ?`;\n            }).join(' AND ');\n          }\n        }\n        \n        // Handle ordering\n        if (params.orderBy) {\n          query += ` ORDER BY ${params.orderBy} ${params.ascending === 'true' ? 'ASC' : 'DESC'}`;\n        }\n        \n        // Handle pagination\n        if (params.limit) {\n          query += ` LIMIT ${parseInt(params.limit, 10)}`;\n          if (params.offset) {\n            query += ` OFFSET ${parseInt(params.offset, 10)}`;\n          }\n        }\n        \n        // Execute query\n        const stmt = env.DB.prepare(query);\n        const result = values.length > 0 ? await stmt.bind(...values).all() : await stmt.all();\n        \n        return createSuccessResponse({ data: result.results });\n      }\n    } \n    else if (request.method === 'POST') {\n      // Insert operations\n      if (pathParts[0] === 'insert') {\n        const table = pathParts[1];\n        const data = requestBody.data;\n        \n        // Prepare columns and values for INSERT\n        const columns = Object.keys(data);\n        const placeholders = columns.map(() => '?').join(', ');\n        const values = columns.map(col => data[col]);\n        \n        // Build and execute INSERT query\n        const query = `INSERT INTO ${table} (${columns.join(', ')}) VALUES (${placeholders}) RETURNING *`;\n        const stmt = env.DB.prepare(query);\n        const result = await stmt.bind(...values).all();\n        \n        return createSuccessResponse({ data: result.results[0] });\n      }\n      // Custom SQL operations\n      else if (pathParts[0] === 'sql') {\n        const { sql, params } = requestBody;\n        \n        // Execute custom SQL\n        const stmt = env.DB.prepare(sql);\n        const result = params ? await stmt.bind(...params).all() : await stmt.all();\n        \n        return createSuccessResponse({ data: result.results });\n      }\n    }\n    else if (request.method === 'PUT') {\n      // Update operations\n      if (pathParts[0] === 'update') {\n        const table = pathParts[1];\n        const { data, filter } = requestBody;\n        \n        // Prepare SET clause and WHERE clause\n        const setColumns = Object.keys(data).map(col => `${col} = ?`).join(', ');\n        const setValues = Object.values(data);\n        \n        let whereClause = '';\n        let whereValues = [];\n        \n        if (filter) {\n          whereClause = ' WHERE ' + filter.map(f => `${f.column} = ?`).join(' AND ');\n          whereValues = filter.map(f => f.value);\n        }\n        \n        // Build and execute UPDATE query\n        const query = `UPDATE ${table} SET ${setColumns}${whereClause} RETURNING *`;\n        const stmt = env.DB.prepare(query);\n        const result = await stmt.bind(...[...setValues, ...whereValues]).all();\n        \n        return createSuccessResponse({ data: result.results[0] });\n      }\n    }\n    else if (request.method === 'DELETE') {\n      // Delete operations\n      if (pathParts[0] === 'delete') {\n        const table = pathParts[1];\n        const filter = requestBody.filter;\n        \n        // Build WHERE clause\n        let whereClause = '';\n        let whereValues = [];\n        \n        if (filter) {\n          whereClause = ' WHERE ' + filter.map(f => `${f.column} = ?`).join(' AND ');\n          whereValues = filter.map(f => f.value);\n        }\n        \n        // Build and execute DELETE query\n        const query = `DELETE FROM ${table}${whereClause} RETURNING *`;\n        const stmt = env.DB.prepare(query);\n        const result = whereValues.length > 0 ? await stmt.bind(...whereValues).all() : await stmt.all();\n        \n        return createSuccessResponse({ data: result.results });\n      }\n    }\n    \n    // Default response for unhandled routes\n    return createErrorResponse(\n      'Invalid operation', \n      400, \n      'INVALID_OPERATION'\n    );\n  } catch (error) {\n    console.error('Database API error:', error);\n    \n    return createErrorResponse(\n      error instanceof Error ? error.message : 'Internal server error',\n      500,\n      'INTERNAL_ERROR'\n    );\n  }\n};", "import { R2Bucket } from '@cloudflare/workers-types';\n\ninterface Env {\n  STORAGE: R2Bucket;\n}\n\nexport const onRequest: PagesFunction<Env> = async (context) => {\n  const { request, env } = context;\n  \n  // CORS headers\n  const headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n  };\n  \n  // Handle CORS preflight\n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers });\n  }\n  \n  try {\n    const url = new URL(request.url);\n    const path = url.pathname.replace('/api/r2', '').replace(/^\\/+/, '');\n    \n    // File operations based on HTTP method\n    if (request.method === 'GET') {\n      // Get file metadata or file list\n      if (path === 'list') {\n        // List files in bucket or prefix\n        const prefix = url.searchParams.get('prefix') || '';\n        const delimiter = url.searchParams.get('delimiter') || '/';\n        const limit = parseInt(url.searchParams.get('limit') || '1000', 10);\n        \n        const listed = await env.STORAGE.list({\n          prefix,\n          delimiter,\n          limit,\n        });\n        \n        // Format response\n        const files = listed.objects.map(object => ({\n          key: object.key,\n          size: object.size,\n          etag: object.etag,\n          lastModified: object.uploaded,\n        }));\n        \n        return new Response(JSON.stringify({ \n          files, \n          prefixes: listed.delimitedPrefixes \n        }), {\n          headers: { ...headers, 'Content-Type': 'application/json' }\n        });\n      } \n      else if (path === 'details') {\n        // Get file metadata\n        const key = url.searchParams.get('key');\n        if (!key) {\n          return new Response(JSON.stringify({ error: 'Missing file key' }), {\n            status: 400,\n            headers: { ...headers, 'Content-Type': 'application/json' }\n          });\n        }\n        \n        const object = await env.STORAGE.head(key);\n        if (object === null) {\n          return new Response(JSON.stringify({ error: 'File not found' }), {\n            status: 404,\n            headers: { ...headers, 'Content-Type': 'application/json' }\n          });\n        }\n        \n        // Generate public URL\n        const publicUrl = `${url.origin}/r2/${key}`;\n        \n        return new Response(JSON.stringify({\n          key,\n          url: publicUrl,\n          size: object.size,\n          etag: object.etag,\n          lastModified: object.uploaded,\n          contentType: object.httpMetadata.contentType,\n          metadata: object.customMetadata,\n        }), {\n          headers: { ...headers, 'Content-Type': 'application/json' }\n        });\n      }\n      else {\n        // Serve file directly\n        const key = path;\n        const object = await env.STORAGE.get(key);\n        \n        if (object === null) {\n          return new Response('File not found', { status: 404, headers });\n        }\n        \n        // Get file details and prepare headers for response\n        const fileHeaders = new Headers(headers);\n        fileHeaders.set('Content-Type', object.httpMetadata.contentType || 'application/octet-stream');\n        fileHeaders.set('Content-Length', object.size.toString());\n        fileHeaders.set('ETag', object.etag);\n        \n        if (object.httpMetadata.cacheControl) {\n          fileHeaders.set('Cache-Control', object.httpMetadata.cacheControl);\n        } else {\n          fileHeaders.set('Cache-Control', 'public, max-age=31536000');\n        }\n        \n        return new Response(object.body, {\n          headers: fileHeaders\n        });\n      }\n    } \n    else if (request.method === 'POST' || request.method === 'PUT') {\n      // Handle file uploads\n      if (path === 'upload') {\n        // Get file key and other options from the request\n        let key;\n        let contentType;\n        let metadata = {};\n        let file;\n        \n        const contentTypeHeader = request.headers.get('Content-Type') || '';\n        \n        if (contentTypeHeader.includes('multipart/form-data')) {\n          // Handle multipart form data upload\n          const formData = await request.formData();\n          file = formData.get('file') as File;\n          key = formData.get('key') as string || file.name;\n          contentType = file.type;\n          \n          // Parse metadata if provided\n          const metadataField = formData.get('metadata');\n          if (metadataField) {\n            try {\n              metadata = JSON.parse(metadataField as string);\n            } catch (e) {\n              console.error('Invalid metadata JSON:', e);\n            }\n          }\n        } else {\n          // Handle direct upload (not form data)\n          const requestBody = await request.json();\n          key = requestBody.key;\n          \n          // For direct uploads, we expect the file content to be base64 encoded\n          if (!key || !requestBody.base64Content) {\n            return new Response(JSON.stringify({ error: 'Missing key or file content' }), {\n              status: 400,\n              headers: { ...headers, 'Content-Type': 'application/json' }\n            });\n          }\n          \n          // Decode base64 content\n          const binaryContent = atob(requestBody.base64Content);\n          const bytes = new Uint8Array(binaryContent.length);\n          for (let i = 0; i < binaryContent.length; i++) {\n            bytes[i] = binaryContent.charCodeAt(i);\n          }\n          \n          file = new Blob([bytes], { type: requestBody.contentType || 'application/octet-stream' });\n          contentType = requestBody.contentType;\n          metadata = requestBody.metadata || {};\n        }\n        \n        if (!key) {\n          return new Response(JSON.stringify({ error: 'Missing file key' }), {\n            status: 400,\n            headers: { ...headers, 'Content-Type': 'application/json' }\n          });\n        }\n        \n        // Upload the file to R2\n        const uploadOptions = {\n          httpMetadata: {\n            contentType,\n          },\n          customMetadata: metadata\n        };\n        \n        await env.STORAGE.put(key, file, uploadOptions);\n        \n        // Generate public URL\n        const publicUrl = `${url.origin}/r2/${key}`;\n        \n        return new Response(JSON.stringify({\n          key,\n          url: publicUrl,\n          size: file.size,\n          lastModified: new Date().toISOString(),\n          contentType,\n          metadata\n        }), {\n          headers: { ...headers, 'Content-Type': 'application/json' }\n        });\n      }\n    } \n    else if (request.method === 'DELETE') {\n      // Delete file\n      const requestBody = await request.json();\n      const key = requestBody.key;\n      \n      if (!key) {\n        return new Response(JSON.stringify({ error: 'Missing file key' }), {\n          status: 400,\n          headers: { ...headers, 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // Delete file from R2\n      await env.STORAGE.delete(key);\n      \n      return new Response(JSON.stringify({ success: true }), {\n        headers: { ...headers, 'Content-Type': 'application/json' }\n      });\n    }\n    \n    // Default response for unhandled routes\n    return new Response(JSON.stringify({ error: 'Invalid operation' }), {\n      status: 400,\n      headers: { ...headers, 'Content-Type': 'application/json' }\n    });\n  } catch (error) {\n    console.error('R2 API error:', error);\n    \n    return new Response(JSON.stringify({ error: error.message }), {\n      status: 500,\n      headers: { ...headers, 'Content-Type': 'application/json' }\n    });\n  }\n};\n", "import { D1Database } from '@cloudflare/workers-types';\nimport { authenticateUser, createErrorResponse, createSuccessResponse } from './auth';\n\ninterface Env {\n  DB: D1Database;\n  CLERK_SECRET_KEY: string;\n}\n\nexport const onRequest: PagesFunction<Env> = async (context) => {\n  const { request, env } = context;\n  \n  // CORS headers\n  const headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n  };\n  \n  // Handle CORS preflight\n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers });\n  }\n  \n  try {\n    const url = new URL(request.url);\n    const path = url.pathname.replace('/api/submissions', '');\n    \n    // Create new submission\n    if (path === '/' && request.method === 'POST') {\n      // Authenticate user\n      const authResult = await authenticateUser(request, env);\n      if (!authResult.success) {\n        return createErrorResponse(\n          authResult.error.message, \n          authResult.error.status, \n          authResult.error.code\n        );\n      }\n      \n      try {\n        const body = await request.json();\n        const submissionData = body.submission || body;\n        \n        // Validate required fields\n        if (!submissionData.id || !submissionData.userId) {\n          return createErrorResponse(\n            'Missing required fields: id and userId', \n            400, \n            'MISSING_FIELDS'\n          );\n        }\n        \n        // Ensure the authenticated user matches the submission userId\n        if (submissionData.userId !== authResult.userId) {\n          return createErrorResponse(\n            'You can only create submissions for yourself', \n            403, \n            'INSUFFICIENT_PERMISSIONS'\n          );\n        }\n        \n        // Insert submission into D1 database with enhanced schema\n        const result = await env.DB.prepare(`\n          INSERT INTO document_submissions (\n            id, user_id, order_id, customer_name, customer_email,\n            service_type, subject_area, word_count, study_level, due_date,\n            module, instructions, price, files, status, created_at\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        `).bind(\n          submissionData.id,\n          submissionData.userId,\n          submissionData.metadata?.orderId || '',\n          submissionData.metadata?.clientName || '',\n          submissionData.metadata?.clientEmail || '',\n          submissionData.metadata?.serviceType || '',\n          submissionData.metadata?.subjectArea || '',\n          submissionData.metadata?.wordCount || 0,\n          submissionData.metadata?.studyLevel || '',\n          submissionData.metadata?.dueDate || '',\n          submissionData.metadata?.module || '',\n          submissionData.metadata?.instructions || '',\n          submissionData.metadata?.price || 0,\n          JSON.stringify(submissionData.files || []),\n          submissionData.status || 'submitted',\n          new Date().toISOString()\n        ).run();\n        \n        if (result.success) {\n          return createSuccessResponse({\n            submissionId: submissionData.id,\n            message: 'Submission created successfully'\n          }, 201);\n        } else {\n          return createErrorResponse(\n            'Failed to save submission to database', \n            500, \n            'DATABASE_ERROR'\n          );\n        }\n      } catch (error) {\n        if (error instanceof SyntaxError) {\n          return createErrorResponse(\n            'Invalid JSON in request body', \n            400, \n            'INVALID_JSON'\n          );\n        }\n        throw error;\n      }\n    }\n    \n    // Update submission status\n    if (path.includes('/status') && request.method === 'PUT') {\n      // Authenticate user\n      const authResult = await authenticateUser(request, env);\n      if (!authResult.success) {\n        return createErrorResponse(\n          authResult.error.message, \n          authResult.error.status, \n          authResult.error.code\n        );\n      }\n      \n      try {\n        const pathParts = path.split('/');\n        const submissionId = pathParts[pathParts.length - 2]; // Get ID before /status\n        \n        if (!submissionId) {\n          return createErrorResponse(\n            'Missing submission ID', \n            400, \n            'MISSING_ID'\n          );\n        }\n        \n        // Check if user owns this submission or is admin\n        const submission = await env.DB.prepare(`\n          SELECT user_id FROM document_submissions WHERE id = ?\n        `).bind(submissionId).first<{ user_id: string }>();\n        \n        if (!submission) {\n          return createErrorResponse(\n            'Submission not found', \n            404, \n            'NOT_FOUND'\n          );\n        }\n        \n        // Check permissions\n        if (submission.user_id !== authResult.userId) {\n          // Check if user is admin\n          const adminCheck = await isAdminUser(authResult.userId, env);\n          if (!adminCheck.success || !adminCheck.isAdmin) {\n            return createErrorResponse(\n              'You do not have permission to update this submission', \n              403, \n              'INSUFFICIENT_PERMISSIONS'\n            );\n          }\n        }\n        \n        const body = await request.json();\n        const { status } = body;\n        \n        if (!status) {\n          return createErrorResponse(\n            'Missing status field', \n            400, \n            'MISSING_STATUS'\n          );\n        }\n        \n        const result = await env.DB.prepare(`\n          UPDATE document_submissions SET status = ?, updated_at = ? WHERE id = ?\n        `).bind(status, new Date().toISOString(), submissionId).run();\n        \n        if (result.success) {\n          return createSuccessResponse({\n            submissionId: submissionId,\n            message: 'Submission status updated successfully'\n          });\n        } else {\n          return createErrorResponse(\n            'Failed to update submission status', \n            500, \n            'DATABASE_ERROR'\n          );\n        }\n      } catch (error) {\n        if (error instanceof SyntaxError) {\n          return createErrorResponse(\n            'Invalid JSON in request body', \n            400, \n            'INVALID_JSON'\n          );\n        }\n        throw error;\n      }\n    }\n    \n    // Get submission by ID\n    if (path.startsWith('/') && request.method === 'GET') {\n      // Authenticate user\n      const authResult = await authenticateUser(request, env);\n      if (!authResult.success) {\n        return createErrorResponse(\n          authResult.error.message, \n          authResult.error.status, \n          authResult.error.code\n        );\n      }\n      \n      const submissionId = path.substring(1);\n      \n      if (!submissionId) {\n        return createErrorResponse(\n          'Missing submission ID', \n          400, \n          'MISSING_ID'\n        );\n      }\n      \n      if (submissionId.startsWith('user/')) {\n        // Get submissions for a user\n        const userId = submissionId.replace('user/', '');\n        if (!userId) {\n          return createErrorResponse(\n            'Missing user ID', \n            400, \n            'MISSING_USER_ID'\n          );\n        }\n        \n        // Check if user is requesting their own submissions or is admin\n        if (userId !== authResult.userId) {\n          // Check if user is admin\n          const adminCheck = await isAdminUser(authResult.userId, env);\n          if (!adminCheck.success || !adminCheck.isAdmin) {\n            return createErrorResponse(\n              'You do not have permission to view these submissions', \n              403, \n              'INSUFFICIENT_PERMISSIONS'\n            );\n          }\n        }\n        \n        const results = await env.DB.prepare(`\n          SELECT * FROM document_submissions WHERE user_id = ? ORDER BY created_at DESC\n        `).bind(userId).all();\n        \n        return createSuccessResponse({\n          submissions: results.results || []\n        });\n      } else {\n        // Get specific submission\n        const result = await env.DB.prepare(`\n          SELECT * FROM document_submissions WHERE id = ?\n        `).bind(submissionId).first();\n        \n        if (!result) {\n          return createErrorResponse(\n            'Submission not found', \n            404, \n            'NOT_FOUND'\n          );\n        }\n        \n        // Check if user owns this submission or is admin\n        if (result.user_id !== authResult.userId) {\n          // Check if user is admin\n          const adminCheck = await isAdminUser(authResult.userId, env);\n          if (!adminCheck.success || !adminCheck.isAdmin) {\n            return createErrorResponse(\n              'You do not have permission to view this submission', \n              403, \n              'INSUFFICIENT_PERMISSIONS'\n            );\n          }\n        }\n        \n        if (result) {\n          return createSuccessResponse(result);\n        } else {\n          return createErrorResponse(\n            'Submission not found', \n            404, \n            'NOT_FOUND'\n          );\n        }\n      }\n    }\n    \n    return createErrorResponse(\n      'Endpoint not found', \n      404, \n      'NOT_FOUND'\n    );\n    \n  } catch (error) {\n    console.error('Submissions API error:', error);\n    return createErrorResponse(\n      error instanceof Error ? error.message : 'Internal server error',\n      500,\n      'INTERNAL_ERROR'\n    );\n  }\n};\n\n// Check if user is admin (helper function)\nconst isAdminUser = async (userId: string, env: Env) => {\n  try {\n    // In a real implementation, you would check against your user database\n    // For now, we'll assume any user with an email containing @handywriterz.com is admin\n    return {\n      success: true,\n      isAdmin: false // Default to false for now\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: {\n        message: error instanceof Error ? error.message : 'Failed to check admin status',\n        code: 'ADMIN_CHECK_FAILED',\n        status: 500\n      }\n    };\n  }\n};", "import { createErrorResponse, createSuccessResponse } from './auth';\n\ninterface Env {\n  // Add any environment variables your function needs\n}\n\nexport const onRequest: PagesFunction<Env> = async (context) => {\n  const { request } = context;\n  \n  // CORS headers\n  const headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n  };\n  \n  // Handle CORS preflight\n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers });\n  }\n  \n  try {\n    // Simple test endpoint\n    if (request.method === 'GET') {\n      return createSuccessResponse({\n        message: 'API test endpoint is working',\n        timestamp: new Date().toISOString()\n      });\n    }\n    \n    return createErrorResponse(\n      'Method not allowed', \n      405, \n      'METHOD_NOT_ALLOWED'\n    );\n    \n  } catch (error) {\n    console.error('Test API error:', error);\n    return createErrorResponse(\n      error instanceof Error ? error.message : 'Internal server error',\n      500,\n      'INTERNAL_ERROR'\n    );\n  }\n};", "import { R2Bucket } from '@cloudflare/workers-types';\nimport { authenticateUser, createErrorResponse, createSuccessResponse } from './auth';\n\ninterface Env {\n  STORAGE: R2Bucket;\n  CLERK_SECRET_KEY: string;\n}\n\nexport const onRequest: PagesFunction<Env> = async (context) => {\n  const { request, env } = context;\n  \n  // CORS headers\n  const headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n  };\n  \n  // Handle CORS preflight\n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers });\n  }\n  \n  try {\n    const url = new URL(request.url);\n    const path = url.pathname.replace('/api/upload', '');\n    \n    // Handle presigned URL generation\n    if (path === '/presigned-url' && request.method === 'POST') {\n      // Authenticate user\n      const authResult = await authenticateUser(request, env);\n      if (!authResult.success) {\n        return createErrorResponse(\n          authResult.error.message, \n          authResult.error.status, \n          authResult.error.code\n        );\n      }\n      \n      const body = await request.json();\n      const { key, contentType } = body;\n      \n      // Generate presigned URL for R2\n      // Note: This is a simplified version for Pages Functions\n      // In a real implementation, you might want to generate actual presigned URLs\n      const uploadUrl = `${url.origin}/api/upload/direct/${key}`;\n      \n      return createSuccessResponse({\n        uploadUrl: uploadUrl,\n        key: key,\n        success: true\n      });\n    }\n    \n    // Handle direct file upload\n    if (path === '/' && request.method === 'POST') {\n      // Authenticate user\n      const authResult = await authenticateUser(request, env);\n      if (!authResult.success) {\n        return createErrorResponse(\n          authResult.error.message, \n          authResult.error.status, \n          authResult.error.code\n        );\n      }\n      \n      const formData = await request.formData();\n      const file = formData.get('file') as File;\n      const key = formData.get('key') as string;\n      \n      if (!file || !key) {\n        return createErrorResponse(\n          'Missing file or key', \n          400, \n          'MISSING_FILE_OR_KEY'\n        );\n      }\n      \n      // Validate file size (50MB limit)\n      const maxSize = 50 * 1024 * 1024; // 50MB\n      if (file.size > maxSize) {\n        return createErrorResponse(\n          'File size exceeds 50MB limit', \n          400, \n          'FILE_TOO_LARGE'\n        );\n      }\n      \n      // Validate file type using both MIME type and extension\n      const allowedTypes = [\n        'application/pdf',\n        'application/msword',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        'application/vnd.ms-excel',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        'application/vnd.ms-powerpoint',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n        'text/plain',\n        'text/markdown',\n        'text/csv',\n        'application/rtf',\n        'application/zip',\n        'image/jpeg',\n        'image/png',\n        'image/gif',\n        'image/svg+xml',\n        'image/webp'\n      ];\n      \n      // Additional extension-based validation\n      const allowedExtensions = [\n        '.pdf', '.doc', '.docx', '.txt', '.md', '.rtf', '.csv',\n        '.xls', '.xlsx', '.ppt', '.pptx', '.zip',\n        '.jpg', '.jpeg', '.png', '.gif', '.svg', '.webp'\n      ];\n      \n      // Check MIME type\n      const isMimeTypeAllowed = allowedTypes.includes(file.type);\n      \n      // Check file extension\n      const fileExtension = '.' + file.name.split('.').pop()?.toLowerCase();\n      const isExtensionAllowed = allowedExtensions.includes(fileExtension);\n      \n      // If either check fails, reject the file\n      if (!isMimeTypeAllowed || !isExtensionAllowed) {\n        return createErrorResponse(\n          `File type not allowed. Allowed types: ${allowedTypes.join(', ')}`, \n          400, \n          'INVALID_FILE_TYPE'\n        );\n      }\n      \n      // Upload to R2\n      await env.STORAGE.put(key, file.stream(), {\n        httpMetadata: {\n          contentType: file.type,\n          contentDisposition: `attachment; filename=\"${file.name}\"`,\n        },\n        customMetadata: {\n          originalName: file.name,\n          uploadedAt: new Date().toISOString(),\n          fileSize: file.size.toString(),\n          fileExtension: fileExtension,\n          userId: authResult.userId\n        },\n      });\n      \n      return createSuccessResponse({\n        success: true,\n        key: key,\n        url: `https://cdn.handywriterz.com/${key}`,\n        size: file.size,\n        type: file.type,\n        name: file.name\n      });\n    }\n    \n    // Handle file deletion\n    if (path.startsWith('/') && request.method === 'DELETE') {\n      // Authenticate user\n      const authResult = await authenticateUser(request, env);\n      if (!authResult.success) {\n        return createErrorResponse(\n          authResult.error.message, \n          authResult.error.status, \n          authResult.error.code\n        );\n      }\n      \n      const key = path.substring(1);\n      \n      // Check if user owns this file or is admin\n      const object = await env.STORAGE.head(key);\n      if (object && object.customMetadata?.userId !== authResult.userId) {\n        // Check if user is admin\n        const adminCheck = await isAdminUser(authResult.userId, env);\n        if (!adminCheck.success || !adminCheck.isAdmin) {\n          return createErrorResponse(\n            'You do not have permission to delete this file', \n            403, \n            'INSUFFICIENT_PERMISSIONS'\n          );\n        }\n      }\n      \n      await env.STORAGE.delete(key);\n      \n      return createSuccessResponse({\n        success: true\n      });\n    }\n    \n    // Handle file info\n    if (path.startsWith('/info/') && request.method === 'GET') {\n      // Authenticate user\n      const authResult = await authenticateUser(request, env);\n      if (!authResult.success) {\n        return createErrorResponse(\n          authResult.error.message, \n          authResult.error.status, \n          authResult.error.code\n        );\n      }\n      \n      const key = path.replace('/info/', '');\n      \n      const object = await env.STORAGE.head(key);\n      \n      if (!object) {\n        return createErrorResponse(\n          'File not found', \n          404, \n          'FILE_NOT_FOUND'\n        );\n      }\n      \n      // Check if user owns this file or is admin\n      if (object.customMetadata?.userId !== authResult.userId) {\n        // Check if user is admin\n        const adminCheck = await isAdminUser(authResult.userId, env);\n        if (!adminCheck.success || !adminCheck.isAdmin) {\n          return createErrorResponse(\n            'You do not have permission to access this file', \n            403, \n            'INSUFFICIENT_PERMISSIONS'\n          );\n        }\n      }\n      \n      return createSuccessResponse({\n        exists: true,\n        size: object.size,\n        lastModified: object.uploaded.toISOString(),\n        contentType: object.httpMetadata?.contentType,\n        customMetadata: object.customMetadata\n      });\n    }\n    \n    return createErrorResponse(\n      'Endpoint not found', \n      404, \n      'ENDPOINT_NOT_FOUND'\n    );\n    \n  } catch (error) {\n    console.error('Upload API error:', error);\n    return createErrorResponse(\n      error instanceof Error ? error.message : 'Internal server error',\n      500,\n      'INTERNAL_ERROR'\n    );\n  }\n};\n\n// Check if user is admin (helper function)\nconst isAdminUser = async (userId: string, env: Env) => {\n  try {\n    // In a real implementation, you would check against your user database\n    // For now, we'll assume any user with an email containing @handywriterz.com is admin\n    return {\n      success: true,\n      isAdmin: false // Default to false for now\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: {\n        message: error instanceof Error ? error.message : 'Failed to check admin status',\n        code: 'ADMIN_CHECK_FAILED',\n        status: 500\n      }\n    };\n  }\n};", "import { onRequest as __api_database_ts_onRequest } from \"D:\\\\HandyWriterz\\\\functions\\\\api\\\\database.ts\"\nimport { onRequest as __api_r2_ts_onRequest } from \"D:\\\\HandyWriterz\\\\functions\\\\api\\\\r2.ts\"\nimport { onRequest as __api_submissions_ts_onRequest } from \"D:\\\\HandyWriterz\\\\functions\\\\api\\\\submissions.ts\"\nimport { onRequest as __api_test_ts_onRequest } from \"D:\\\\HandyWriterz\\\\functions\\\\api\\\\test.ts\"\nimport { onRequest as __api_upload_ts_onRequest } from \"D:\\\\HandyWriterz\\\\functions\\\\api\\\\upload.ts\"\n\nexport const routes = [\n    {\n      routePath: \"/api/database\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_database_ts_onRequest],\n    },\n  {\n      routePath: \"/api/r2\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_r2_ts_onRequest],\n    },\n  {\n      routePath: \"/api/submissions\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_submissions_ts_onRequest],\n    },\n  {\n      routePath: \"/api/test\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_test_ts_onRequest],\n    },\n  {\n      routePath: \"/api/upload\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_upload_ts_onRequest],\n    },\n  ]", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"D:\\\\HandyWriterz\\\\.wrangler\\\\tmp\\\\bundle-xLLS1Y\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"D:\\\\HandyWriterz\\\\node_modules\\\\.pnpm\\\\wrangler@4.36.0_@cloudflare_d4bacab0623f00310a98325b6a6e981f\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"D:\\\\HandyWriterz\\\\.wrangler\\\\tmp\\\\bundle-xLLS1Y\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"D:\\\\HandyWriterz\\\\.wrangler\\\\tmp\\\\bundle-xLLS1Y\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"D:\\\\HandyWriterz\\\\node_modules\\\\.pnpm\\\\wrangler@4.36.0_@cloudflare_d4bacab0623f00310a98325b6a6e981f\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"D:\\\\HandyWriterz\\\\node_modules\\\\.pnpm\\\\wrangler@4.36.0_@cloudflare_d4bacab0623f00310a98325b6a6e981f\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"D:\\\\HandyWriterz\\\\node_modules\\\\.pnpm\\\\wrangler@4.36.0_@cloudflare_d4bacab0623f00310a98325b6a6e981f\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"D:\\\\HandyWriterz\\\\node_modules\\\\.pnpm\\\\wrangler@4.36.0_@cloudflare_d4bacab0623f00310a98325b6a6e981f\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["_", "s", "s", "matches", "match", "packageName", "customMessages", "message", "s", "__typeError", "__accessCheck", "__privateAdd", "__privateMethod", "config", "parse", "match", "convertCase", "data", "Cookies", "parseErrors", "sessionId", "jwk", "defaultOptions", "authenticateRequest", "Headers", "basePath", "buildAccountsBaseUrl", "__privateAdd", "__privateMethod", "authenticateContext", "refreshToken", "errors", "match", "verifyToken", "onRequest", "onRequest", "onRequest", "onRequest", "isAdminUser", "onRequest", "parse", "value", "_a", "result", "char", "prefix", "match", "pathToRegexp", "i", "parse", "match"]
}
